{"ast":null,"code":"export const UNKNOWN_VALUE = 'UNKNOWN';\nexport function lastOfArray(ar) {\n  return ar[ar.length - 1];\n}\n/**\n * @link https://stackoverflow.com/a/5915122\n */\nexport function randomOfArray(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\nexport function shuffleArray(arr) {\n  return arr.slice().sort(() => Math.random() - 0.5);\n}\n/**\n * if the previous doc-data is unknown,\n * try to get it from previous results\n * @mutate the changeEvent of input\n */\nexport function tryToFillPreviousDoc(input) {\n  const prev = input.changeEvent.previous;\n  if (prev === UNKNOWN_VALUE) {\n    const id = input.changeEvent.id;\n    const primary = input.queryParams.primaryKey;\n    if (input.keyDocumentMap) {\n      const doc = input.keyDocumentMap.get(id);\n      if (doc) {\n        input.changeEvent.previous = doc;\n      }\n    } else {\n      const found = input.previousResults.find(item => item[primary] === id);\n      if (found) {\n        input.changeEvent.previous = found;\n      }\n    }\n  }\n}\n/**\n * normalizes sort-field\n * in: '-age'\n * out: 'age'\n */\nexport function normalizeSortField(field) {\n  if (field.startsWith('-')) {\n    return field.substr(1);\n  } else {\n    return field;\n  }\n}\nexport function getSortFieldsOfQuery(query) {\n  if (!query.sort) {\n    // if no sort-order is set, use the primary key\n    return ['_id'];\n  }\n  return query.sort.map(maybeArray => {\n    if (Array.isArray(maybeArray)) {\n      return maybeArray[0].map(field => normalizeSortField(field));\n    } else {\n      return normalizeSortField(maybeArray);\n    }\n  });\n}\n/**\n *  @link https://stackoverflow.com/a/1431113\n */\nexport function replaceCharAt(str, index, replacement) {\n  return str.substr(0, index) + replacement + str.substr(index + replacement.length);\n}\nexport function mapToObject(map) {\n  const ret = {};\n  map.forEach((value, key) => {\n    ret[key] = value;\n  });\n  return ret;\n}\nexport function objectToMap(object) {\n  const ret = new Map();\n  Object.entries(object).forEach(([k, v]) => {\n    ret.set(k, v);\n  });\n  return ret;\n}\nexport function cloneMap(map) {\n  const ret = new Map();\n  map.forEach((value, key) => {\n    ret[key] = value;\n  });\n  return ret;\n}\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone(obj) {\n  return Object.assign({}, obj);\n}\nexport function ensureNotFalsy(obj) {\n  if (!obj) {\n    throw new Error('ensureNotFalsy() is falsy');\n  }\n  return obj;\n}\nexport function mergeSets(sets) {\n  let ret = new Set();\n  sets.forEach(set => {\n    ret = new Set([...ret, ...set]);\n  });\n  return ret;\n}\n/**\n * @link https://stackoverflow.com/a/12830454/3443137\n */\nexport function roundToTwoDecimals(num) {\n  return parseFloat(num.toFixed(2));\n}\nexport function isObject(value) {\n  const type = typeof value;\n  return value !== null && (type === 'object' || type === 'function');\n}\nexport function getProperty(object, path, value) {\n  if (Array.isArray(path)) {\n    path = path.join('.');\n  }\n  if (!isObject(object) || typeof path !== 'string') {\n    return value === undefined ? object : value;\n  }\n  const pathArray = path.split('.');\n  if (pathArray.length === 0) {\n    return value;\n  }\n  for (let index = 0; index < pathArray.length; index++) {\n    const key = pathArray[index];\n    if (isStringIndex(object, key)) {\n      object = index === pathArray.length - 1 ? undefined : null;\n    } else {\n      object = object[key];\n    }\n    if (object === undefined || object === null) {\n      // `object` is either `undefined` or `null` so we want to stop the loop, and\n      // if this is not the last bit of the path, and\n      // if it didn't return `undefined`\n      // it would return `null` if `object` is `null`\n      // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n      if (index !== pathArray.length - 1) {\n        return value;\n      }\n      break;\n    }\n  }\n  return object === undefined ? value : object;\n}\nfunction isStringIndex(object, key) {\n  if (typeof key !== 'number' && Array.isArray(object)) {\n    const index = Number.parseInt(key, 10);\n    return Number.isInteger(index) && object[index] === object[key];\n  }\n  return false;\n}","map":{"version":3,"names":["UNKNOWN_VALUE","lastOfArray","ar","length","randomOfArray","items","Math","floor","random","shuffleArray","arr","slice","sort","tryToFillPreviousDoc","input","prev","changeEvent","previous","id","primary","queryParams","primaryKey","keyDocumentMap","doc","get","found","previousResults","find","item","normalizeSortField","field","startsWith","substr","getSortFieldsOfQuery","query","map","maybeArray","Array","isArray","replaceCharAt","str","index","replacement","mapToObject","ret","forEach","value","key","objectToMap","object","Map","Object","entries","k","v","set","cloneMap","flatClone","obj","assign","ensureNotFalsy","Error","mergeSets","sets","Set","roundToTwoDecimals","num","parseFloat","toFixed","isObject","type","getProperty","path","join","undefined","pathArray","split","isStringIndex","Number","parseInt","isInteger"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/event-reduce-js/dist/es/util.js"],"sourcesContent":["export const UNKNOWN_VALUE = 'UNKNOWN';\nexport function lastOfArray(ar) {\n    return ar[ar.length - 1];\n}\n/**\n * @link https://stackoverflow.com/a/5915122\n */\nexport function randomOfArray(items) {\n    return items[Math.floor(Math.random() * items.length)];\n}\nexport function shuffleArray(arr) {\n    return arr.slice().sort(() => (Math.random() - 0.5));\n}\n/**\n * if the previous doc-data is unknown,\n * try to get it from previous results\n * @mutate the changeEvent of input\n */\nexport function tryToFillPreviousDoc(input) {\n    const prev = input.changeEvent.previous;\n    if (prev === UNKNOWN_VALUE) {\n        const id = input.changeEvent.id;\n        const primary = input.queryParams.primaryKey;\n        if (input.keyDocumentMap) {\n            const doc = input.keyDocumentMap.get(id);\n            if (doc) {\n                input.changeEvent.previous = doc;\n            }\n        }\n        else {\n            const found = input.previousResults.find(item => item[primary] === id);\n            if (found) {\n                input.changeEvent.previous = found;\n            }\n        }\n    }\n}\n/**\n * normalizes sort-field\n * in: '-age'\n * out: 'age'\n */\nexport function normalizeSortField(field) {\n    if (field.startsWith('-')) {\n        return field.substr(1);\n    }\n    else {\n        return field;\n    }\n}\nexport function getSortFieldsOfQuery(query) {\n    if (!query.sort) {\n        // if no sort-order is set, use the primary key\n        return ['_id'];\n    }\n    return query.sort.map(maybeArray => {\n        if (Array.isArray(maybeArray)) {\n            return maybeArray[0].map(field => normalizeSortField(field));\n        }\n        else {\n            return normalizeSortField(maybeArray);\n        }\n    });\n}\n/**\n *  @link https://stackoverflow.com/a/1431113\n */\nexport function replaceCharAt(str, index, replacement) {\n    return str.substr(0, index) + replacement + str.substr(index + replacement.length);\n}\nexport function mapToObject(map) {\n    const ret = {};\n    map.forEach((value, key) => {\n        ret[key] = value;\n    });\n    return ret;\n}\nexport function objectToMap(object) {\n    const ret = new Map();\n    Object.entries(object).forEach(([k, v]) => {\n        ret.set(k, v);\n    });\n    return ret;\n}\nexport function cloneMap(map) {\n    const ret = new Map();\n    map.forEach((value, key) => {\n        ret[key] = value;\n    });\n    return ret;\n}\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone(obj) {\n    return Object.assign({}, obj);\n}\nexport function ensureNotFalsy(obj) {\n    if (!obj) {\n        throw new Error('ensureNotFalsy() is falsy');\n    }\n    return obj;\n}\nexport function mergeSets(sets) {\n    let ret = new Set();\n    sets.forEach(set => {\n        ret = new Set([...ret, ...set]);\n    });\n    return ret;\n}\n/**\n * @link https://stackoverflow.com/a/12830454/3443137\n */\nexport function roundToTwoDecimals(num) {\n    return parseFloat(num.toFixed(2));\n}\nexport function isObject(value) {\n    const type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n}\nexport function getProperty(object, path, value) {\n    if (Array.isArray(path)) {\n        path = path.join('.');\n    }\n    if (!isObject(object) || typeof path !== 'string') {\n        return value === undefined ? object : value;\n    }\n    const pathArray = path.split('.');\n    if (pathArray.length === 0) {\n        return value;\n    }\n    for (let index = 0; index < pathArray.length; index++) {\n        const key = pathArray[index];\n        if (isStringIndex(object, key)) {\n            object = index === pathArray.length - 1 ? undefined : null;\n        }\n        else {\n            object = object[key];\n        }\n        if (object === undefined || object === null) {\n            // `object` is either `undefined` or `null` so we want to stop the loop, and\n            // if this is not the last bit of the path, and\n            // if it didn't return `undefined`\n            // it would return `null` if `object` is `null`\n            // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n            if (index !== pathArray.length - 1) {\n                return value;\n            }\n            break;\n        }\n    }\n    return object === undefined ? value : object;\n}\nfunction isStringIndex(object, key) {\n    if (typeof key !== 'number' && Array.isArray(object)) {\n        const index = Number.parseInt(key, 10);\n        return Number.isInteger(index) && object[index] === object[key];\n    }\n    return false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}