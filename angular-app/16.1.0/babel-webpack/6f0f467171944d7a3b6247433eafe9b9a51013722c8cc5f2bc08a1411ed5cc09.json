{"ast":null,"code":"/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length = 10) {\n  var text = '';\n  var possible = 'abcdefghijklmnopqrstuvwxyz';\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\n\n/**\n * A random string that is never inside of any storage\n */\nexport var RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str) {\n  str += '';\n  var f = str.charAt(0).toUpperCase();\n  return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str) {\n  // start\n  while (str.charAt(0) === '.') {\n    str = str.substr(1);\n  }\n\n  // end\n  while (str.slice(-1) === '.') {\n    str = str.slice(0, -1);\n  }\n  return str;\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name) {\n  // do not check, if foldername is given\n  if (name.includes('/') ||\n  // unix\n  name.includes('\\\\') // windows\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * @link https://gist.github.com/andreburgaud/6f73fd2d690b629346b8\n */\nexport function arrayBufferToString(buf) {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n}\nexport function stringToArrayBuffer(str) {\n  var buf = new ArrayBuffer(str.length * 2);\n  var bufView = new Uint16Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}","map":{"version":3,"names":["randomCouchString","length","text","possible","i","charAt","Math","floor","random","RANDOM_STRING","ucfirst","str","f","toUpperCase","substr","trimDots","slice","isFolderPath","name","includes","arrayBufferToString","buf","String","fromCharCode","apply","Uint16Array","stringToArrayBuffer","ArrayBuffer","bufView","strLen","charCodeAt"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/rxdb/dist/es/plugins/utils/utils-string.js"],"sourcesContent":["/**\n * get a random string which can be used with couchdb\n * @link http://stackoverflow.com/a/1349426/3443137\n */\nexport function randomCouchString(length = 10) {\n  var text = '';\n  var possible = 'abcdefghijklmnopqrstuvwxyz';\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\n\n/**\n * A random string that is never inside of any storage\n */\nexport var RANDOM_STRING = 'Fz7SZXPmYJujkzjY1rpXWvlWBqoGAfAX';\n\n/**\n * uppercase first char\n */\nexport function ucfirst(str) {\n  str += '';\n  var f = str.charAt(0).toUpperCase();\n  return f + str.substr(1);\n}\n\n/**\n * removes trailing and ending dots from the string\n */\nexport function trimDots(str) {\n  // start\n  while (str.charAt(0) === '.') {\n    str = str.substr(1);\n  }\n\n  // end\n  while (str.slice(-1) === '.') {\n    str = str.slice(0, -1);\n  }\n  return str;\n}\n\n/**\n * returns true if the given name is likely a folder path\n */\nexport function isFolderPath(name) {\n  // do not check, if foldername is given\n  if (name.includes('/') ||\n  // unix\n  name.includes('\\\\') // windows\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * @link https://gist.github.com/andreburgaud/6f73fd2d690b629346b8\n */\nexport function arrayBufferToString(buf) {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n}\nexport function stringToArrayBuffer(str) {\n  var buf = new ArrayBuffer(str.length * 2);\n  var bufView = new Uint16Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,iBAAiBA,CAACC,MAAM,GAAG,EAAE,EAAE;EAC7C,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,QAAQ,GAAG,4BAA4B;EAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,EAAE,EAAE;IAC/BF,IAAI,IAAIC,QAAQ,CAACE,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,QAAQ,CAACF,MAAM,CAAC,CAAC;EACtE;EACA,OAAOC,IAAI;AACb;;AAEA;AACA;AACA;AACA,OAAO,IAAIO,aAAa,GAAG,kCAAkC;;AAE7D;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,GAAG,EAAE;EAC3BA,GAAG,IAAI,EAAE;EACT,IAAIC,CAAC,GAAGD,GAAG,CAACN,MAAM,CAAC,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC;EACnC,OAAOD,CAAC,GAAGD,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;AAC1B;;AAEA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACJ,GAAG,EAAE;EAC5B;EACA,OAAOA,GAAG,CAACN,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC5BM,GAAG,GAAGA,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;EACrB;;EAEA;EACA,OAAOH,GAAG,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC5BL,GAAG,GAAGA,GAAG,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACxB;EACA,OAAOL,GAAG;AACZ;;AAEA;AACA;AACA;AACA,OAAO,SAASM,YAAYA,CAACC,IAAI,EAAE;EACjC;EACA,IAAIA,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC;EACtB;EACAD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAAA,EAClB;IACA,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,GAAG,EAAE;EACvC,OAAOC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAE,IAAIC,WAAW,CAACJ,GAAG,CAAC,CAAC;AAC9D;AACA,OAAO,SAASK,mBAAmBA,CAACf,GAAG,EAAE;EACvC,IAAIU,GAAG,GAAG,IAAIM,WAAW,CAAChB,GAAG,CAACV,MAAM,GAAG,CAAC,CAAC;EACzC,IAAI2B,OAAO,GAAG,IAAIH,WAAW,CAACJ,GAAG,CAAC;EAClC,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEyB,MAAM,GAAGlB,GAAG,CAACV,MAAM,EAAEG,CAAC,GAAGyB,MAAM,EAAEzB,CAAC,EAAE,EAAE;IACpDwB,OAAO,CAACxB,CAAC,CAAC,GAAGO,GAAG,CAACmB,UAAU,CAAC1B,CAAC,CAAC;EAChC;EACA,OAAOiB,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}