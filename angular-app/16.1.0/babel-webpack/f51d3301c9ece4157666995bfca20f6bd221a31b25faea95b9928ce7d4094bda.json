{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./window-ref\";\nclass ScormWrapperService {\n  constructor(windowRef) {\n    this.windowRef = windowRef;\n    this.version = 'Auto';\n    this.API = null;\n    this.scormVersions = ['Auto', '1.2', '2004'];\n    this.win = windowRef.nativeWindow;\n  }\n  setAPIVersion(scormVersion) {\n    scormVersion = scormVersion || 'Auto';\n    const v = this.scormVersions.indexOf(scormVersion.toString());\n    v > -1 ? this.version = this.scormVersions[v] : console.log('Not found, default to Auto');\n    return this.version;\n  }\n  get APIVersion() {\n    return this.version;\n  }\n  get isAvailable() {\n    return true;\n  }\n  get LMSIsInitialized() {\n    return this.API;\n  }\n  doLMSInitialize() {\n    return this.cmiBooleanToJs(this.getAPICall('LMSInitialize', 'Initialize')(''));\n  }\n  doLMSFinish() {\n    return this.cmiBooleanToJs(this.getAPICall('LMSFinish', 'Terminate')(''));\n  }\n  doLMSGetValue(parameter) {\n    return this.getAPICall('LMSGetValue', 'GetValue')(parameter);\n  }\n  doLMSSetValue(parameter, value) {\n    return this.cmiBooleanToJs(this.getAPICall('LMSSetValue', 'SetValue')(parameter, value));\n  }\n  doLMSCommit() {\n    return this.cmiBooleanToJs(this.getAPICall('LMSCommit', 'Commit')(''));\n  }\n  doLMSGetLastError() {\n    return this.getAPICall('LMSGetLastError', 'GetLastError')();\n  }\n  doLMSGetErrorString(errorCode) {\n    return this.getAPICall('LMSGetErrorString', 'GetErrorString')(errorCode.toString());\n  }\n  doLMSGetDiagnostic(errorCode) {\n    return this.getAPICall('LMSGetDiagnostic', 'GetDiagnostic')(errorCode.toString());\n  }\n  ErrorHandler() {\n    return this.getAPICall('LMSGetLastError', 'GetLastError')();\n  }\n  cmiBooleanToJs(value) {\n    return value === '1' || value === 1 || value === 'true' || value === true;\n  }\n  SetBookmark() {}\n  SetDataChunk() {}\n  getAPIHandle() {\n    if (this.win.parent && this.win.parent !== this.win) {\n      this.findAPI(this.win.parent);\n    }\n    if (!this.API && this.win.top.opener) {\n      this.findAPI(this.win.top.opener);\n    } else if (!this.API) {\n      console.log('Unable to find API adapter');\n    }\n  }\n  getAPICall(funcname12, funcname2004) {\n    if (!this.API) {\n      this.getAPIHandle();\n      if (!this.API) {\n        return () => console.log(`No API found, can\\'t execute: ${funcname12} or ${funcname2004}`);\n      }\n    }\n    const API = this.API;\n    switch (this.version) {\n      case '2004':\n        return function () {\n          return API[funcname2004].apply(API, arguments);\n        };\n      case '1.2':\n        return function () {\n          return API[funcname12].apply(API, arguments);\n        };\n    }\n    return () => console.log(`Can't interpret the file type.`);\n  }\n  findAPI(win) {\n    let findAttempts = 0;\n    const findAttemptLimit = 500;\n    for (findAttempts; findAttempts < findAttemptLimit; findAttempts++) {\n      if (win.API && (this.version === '1.2' || this.version === 'Auto')) {\n        this.API = win.API;\n        this.version = '1.2';\n        break;\n      } else if (win.API_1484_11 && (this.version === '2004' || this.version === 'Auto')) {\n        this.API = win.API_1484_11;\n        this.version = '2004';\n        break;\n      } else if (win.parent && win.parent !== win) {\n        findAttempts++;\n        win = win.parent;\n      }\n    }\n  }\n}\nScormWrapperService.ɵfac = function ScormWrapperService_Factory(t) {\n  return new (t || ScormWrapperService)(i0.ɵɵinject(i1.WindowRef));\n};\nScormWrapperService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ScormWrapperService,\n  factory: ScormWrapperService.ɵfac,\n  providedIn: 'root'\n});\nexport { ScormWrapperService };","map":{"version":3,"names":["ScormWrapperService","constructor","windowRef","version","API","scormVersions","win","nativeWindow","setAPIVersion","scormVersion","v","indexOf","toString","console","log","APIVersion","isAvailable","LMSIsInitialized","doLMSInitialize","cmiBooleanToJs","getAPICall","doLMSFinish","doLMSGetValue","parameter","doLMSSetValue","value","doLMSCommit","doLMSGetLastError","doLMSGetErrorString","errorCode","doLMSGetDiagnostic","ErrorHandler","SetBookmark","SetDataChunk","getAPIHandle","parent","findAPI","top","opener","funcname12","funcname2004","apply","arguments","findAttempts","findAttemptLimit","API_1484_11","i0","ɵɵinject","i1","WindowRef","factory","ɵfac","providedIn"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/src/app/scorm/service/scorm-wrapper-service.ts"],"sourcesContent":["/********************************************************************************\n **\n ** SCORM API Wrapper\n **\n ** Supports:\n **\n ** SCORM 1.2, SCORM 2004.[1]\n **\n ** The following is a porting of the code from the\n ** original angularjs-scorm-wrapper file to Angular with a\n ** number of improvements from\n ** Competentum\n **\n ** The code has been updated to wrap the original functions in\n ** in angular and extend support for SCORM 2004 [4].\n ** It draws upon some of concepts offered in the Pipewerks[3]\n **\n ** The code is served as an Angular service [5].\n **\n ** References/Inspiration:\n **\n ** [1] ADL\n ** http://www.adlnet.gov/scorm\n **\n ** [2] CTC SCORM SCORM 1.2 API wrapper\n ** http://www.adlnet.gov/resources/scorm-1-2-content-packages?type=software_downloads\n **\n ** [3] Pipewerks SCORM wrapper\n ** https://github.com/pipwerks/scorm-api-wrapper\n **\n ** [4] SCORM.com\n ** http://scorm.com/scorm-explained/technical-scorm/run-time/\n **\n ** [5] Angularjs scorm wrapper\n ** https://github.com/patamechanix/angularjs-scorm-wrapper\n **\n ** Copyright (c) Competentum 2017\n ** Copyright (c) Aleksey Klimenko\n ** ---------------------------------------------------------------------------------\n ** License:\n **\n **\n ** Permission is hereby granted, free of charge, to any person obtaining a\n ** copy of this software and associated documentation files (the “Software”),\n ** to deal in the Software without restriction, including without limitation the\n ** rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n ** copies of the Software, and to permit persons to whom the Software is furnished to\n ** do so, subject to the following conditions:\n **\n ** The above copyright notice and this permission notice shall be included in\n ** all copies or substantial portions of the Software.\n **\n ** THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n ** FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n ** COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n ** IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n ** CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n **\n *********************************************************************************/\n import { Injectable } from '@angular/core';\n import { WindowRef } from './window-ref';\n \n export type ApiCallFunctionType = (param?: string,\n                                    value?: string) => void | string | number | boolean;\n \n@Injectable({ providedIn: 'root' })\n export class ScormWrapperService {\n   private version = 'Auto';\n   private API = null;\n   private scormVersions = ['Auto', '1.2', '2004'];\n   private win: any;\n \n   constructor(private windowRef: WindowRef) {\n     this.win = windowRef.nativeWindow;\n   }\n \n   public setAPIVersion(scormVersion: string) {\n \n     scormVersion = scormVersion || 'Auto';\n \n     const v = this.scormVersions.indexOf(scormVersion.toString());\n     (v > -1) ? this.version = this.scormVersions[v] : console.log('Not found, default to Auto');\n     return this.version;\n   }\n \n   get APIVersion() {\n     return this.version;\n   }\n \n   get isAvailable() {\n     return true;\n   }\n \n   get LMSIsInitialized() {\n     return this.API;\n   }\n \n   public doLMSInitialize() {\n     return this.cmiBooleanToJs(this.getAPICall('LMSInitialize', 'Initialize')(''));\n   }\n \n   public doLMSFinish() {\n     return this.cmiBooleanToJs(this.getAPICall('LMSFinish', 'Terminate')(''));\n   }\n \n   public doLMSGetValue(parameter: string) {\n     return this.getAPICall('LMSGetValue', 'GetValue')(parameter);\n   }\n \n   public doLMSSetValue(parameter: string, value: string) {\n     return this.cmiBooleanToJs(this.getAPICall('LMSSetValue', 'SetValue')(parameter, value));\n   }\n \n   public doLMSCommit() {\n     return this.cmiBooleanToJs(this.getAPICall('LMSCommit', 'Commit')(''));\n   }\n \n   public doLMSGetLastError() {\n     return this.getAPICall('LMSGetLastError', 'GetLastError')();\n   }\n \n   public doLMSGetErrorString(errorCode: number) {\n     return this.getAPICall('LMSGetErrorString', 'GetErrorString')(errorCode.toString());\n   }\n \n   public doLMSGetDiagnostic(errorCode: number) {\n     return this.getAPICall('LMSGetDiagnostic', 'GetDiagnostic')(errorCode.toString());\n   }\n \n   public ErrorHandler() {\n     return this.getAPICall('LMSGetLastError', 'GetLastError')();\n   }\n \n   public cmiBooleanToJs(value: number | string | boolean | void): boolean {\n     return (value === '1' || value === 1 || value === 'true' || value === true);\n   }\n\n   public SetBookmark() {\n\n   }\n\n   public SetDataChunk() {\n\n   }\n \n   public getAPIHandle() {\n \n     if (this.win.parent && this.win.parent !== this.win) {\n       this.findAPI(this.win.parent);\n     }\n \n     if (!this.API && this.win.top.opener) {\n       this.findAPI(this.win.top.opener);\n     } else if (!this.API) {\n       console.log('Unable to find API adapter');\n     }\n   }\n \n   public getAPICall(funcname12: string,\n                     funcname2004: string): ApiCallFunctionType {\n \n     if (!this.API) {\n       this.getAPIHandle();\n       if (!this.API) {\n         return () => console.log(`No API found, can\\'t execute: ${funcname12} or ${funcname2004}`);\n       }\n     }\n \n     const API: any = this.API;\n \n     switch (this.version) {\n       case '2004':\n         return function() {\n           return API[funcname2004].apply(API, arguments);\n         };\n \n       case '1.2':\n         return function() {\n           return API[funcname12].apply(API, arguments);\n         };\n     }\n\n     return () => console.log(`Can't interpret the file type.`);\n   }\n \n   private findAPI(win: any) {\n \n     let findAttempts = 0;\n     const findAttemptLimit = 500;\n \n     for (findAttempts; findAttempts < findAttemptLimit; findAttempts++) {\n \n       if (win.API && (this.version === '1.2' || this.version === 'Auto')) {\n         this.API = win.API;\n         this.version = '1.2';\n         break;\n       } else if (win.API_1484_11 && (this.version === '2004' || this.version === 'Auto')) {\n         this.API = win.API_1484_11;\n         this.version = '2004';\n         break;\n       } else if (win.parent && win.parent !== win) {\n         findAttempts++;\n         win = win.parent;\n       }\n     }\n   }\n }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}