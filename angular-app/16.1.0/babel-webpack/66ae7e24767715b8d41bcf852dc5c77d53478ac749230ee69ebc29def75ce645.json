{"ast":null,"code":"/**\n * represents the branches of a single node\n */\nexport class Branches {\n  constructor(node) {\n    this.node = node;\n    this.deleted = false;\n    this.branches = {};\n  }\n  setBranch(which, branchNode) {\n    const previous = this.branches[which];\n    if (previous === branchNode) {\n      return;\n    }\n    // set new branch\n    this.branches[which] = branchNode;\n    branchNode.parents.add(this.node);\n  }\n  getKeyOfNode(node) {\n    if (this.getBranch('0') === node) {\n      return '0';\n    } else if (this.getBranch('1') === node) {\n      return '1';\n    } else {\n      throw new Error('none matched');\n    }\n  }\n  getBranch(which) {\n    return this.branches[which];\n  }\n  getBothBranches() {\n    return [this.getBranch('0'), this.getBranch('1')];\n  }\n  hasBranchAsNode(node) {\n    if (this.getBranch('0') === node || this.getBranch('1') === node) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  hasNodeIdAsBranch(id) {\n    if (this.getBranch('0').id === id || this.getBranch('1').id === id) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  areBranchesStrictEqual() {\n    return this.branches['0'] === this.branches['1'];\n  }\n  hasEqualBranches() {\n    return JSON.stringify(this.branches['0']) === JSON.stringify(this.branches['1']);\n  }\n}\nexport function ensureNodesNotStrictEqual(node1, node2) {\n  if (node1 === node2) {\n    throw new Error('cannot have two strict equal branches');\n  }\n}","map":{"version":3,"names":["Branches","constructor","node","deleted","branches","setBranch","which","branchNode","previous","parents","add","getKeyOfNode","getBranch","Error","getBothBranches","hasBranchAsNode","hasNodeIdAsBranch","id","areBranchesStrictEqual","hasEqualBranches","JSON","stringify","ensureNodesNotStrictEqual","node1","node2"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/binary-decision-diagram/dist/es/branches.js"],"sourcesContent":["/**\n * represents the branches of a single node\n */\nexport class Branches {\n    constructor(node) {\n        this.node = node;\n        this.deleted = false;\n        this.branches = {};\n    }\n    setBranch(which, branchNode) {\n        const previous = this.branches[which];\n        if (previous === branchNode) {\n            return;\n        }\n        // set new branch\n        this.branches[which] = branchNode;\n        branchNode.parents.add(this.node);\n    }\n    getKeyOfNode(node) {\n        if (this.getBranch('0') === node) {\n            return '0';\n        }\n        else if (this.getBranch('1') === node) {\n            return '1';\n        }\n        else {\n            throw new Error('none matched');\n        }\n    }\n    getBranch(which) {\n        return this.branches[which];\n    }\n    getBothBranches() {\n        return [\n            this.getBranch('0'),\n            this.getBranch('1')\n        ];\n    }\n    hasBranchAsNode(node) {\n        if (this.getBranch('0') === node ||\n            this.getBranch('1') === node) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    hasNodeIdAsBranch(id) {\n        if (this.getBranch('0').id === id ||\n            this.getBranch('1').id === id) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    areBranchesStrictEqual() {\n        return this.branches['0'] === this.branches['1'];\n    }\n    hasEqualBranches() {\n        return JSON.stringify(this.branches['0']) ===\n            JSON.stringify(this.branches['1']);\n    }\n}\nexport function ensureNodesNotStrictEqual(node1, node2) {\n    if (node1 === node2) {\n        throw new Error('cannot have two strict equal branches');\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,CAAC;EAClBC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;EACtB;EACAC,SAASA,CAACC,KAAK,EAAEC,UAAU,EAAE;IACzB,MAAMC,QAAQ,GAAG,IAAI,CAACJ,QAAQ,CAACE,KAAK,CAAC;IACrC,IAAIE,QAAQ,KAAKD,UAAU,EAAE;MACzB;IACJ;IACA;IACA,IAAI,CAACH,QAAQ,CAACE,KAAK,CAAC,GAAGC,UAAU;IACjCA,UAAU,CAACE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,IAAI,CAAC;EACrC;EACAS,YAAYA,CAACT,IAAI,EAAE;IACf,IAAI,IAAI,CAACU,SAAS,CAAC,GAAG,CAAC,KAAKV,IAAI,EAAE;MAC9B,OAAO,GAAG;IACd,CAAC,MACI,IAAI,IAAI,CAACU,SAAS,CAAC,GAAG,CAAC,KAAKV,IAAI,EAAE;MACnC,OAAO,GAAG;IACd,CAAC,MACI;MACD,MAAM,IAAIW,KAAK,CAAC,cAAc,CAAC;IACnC;EACJ;EACAD,SAASA,CAACN,KAAK,EAAE;IACb,OAAO,IAAI,CAACF,QAAQ,CAACE,KAAK,CAAC;EAC/B;EACAQ,eAAeA,CAAA,EAAG;IACd,OAAO,CACH,IAAI,CAACF,SAAS,CAAC,GAAG,CAAC,EACnB,IAAI,CAACA,SAAS,CAAC,GAAG,CAAC,CACtB;EACL;EACAG,eAAeA,CAACb,IAAI,EAAE;IAClB,IAAI,IAAI,CAACU,SAAS,CAAC,GAAG,CAAC,KAAKV,IAAI,IAC5B,IAAI,CAACU,SAAS,CAAC,GAAG,CAAC,KAAKV,IAAI,EAAE;MAC9B,OAAO,IAAI;IACf,CAAC,MACI;MACD,OAAO,KAAK;IAChB;EACJ;EACAc,iBAAiBA,CAACC,EAAE,EAAE;IAClB,IAAI,IAAI,CAACL,SAAS,CAAC,GAAG,CAAC,CAACK,EAAE,KAAKA,EAAE,IAC7B,IAAI,CAACL,SAAS,CAAC,GAAG,CAAC,CAACK,EAAE,KAAKA,EAAE,EAAE;MAC/B,OAAO,IAAI;IACf,CAAC,MACI;MACD,OAAO,KAAK;IAChB;EACJ;EACAC,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACd,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,CAACA,QAAQ,CAAC,GAAG,CAAC;EACpD;EACAe,gBAAgBA,CAAA,EAAG;IACf,OAAOC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACjB,QAAQ,CAAC,GAAG,CAAC,CAAC,KACrCgB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACjB,QAAQ,CAAC,GAAG,CAAC,CAAC;EAC1C;AACJ;AACA,OAAO,SAASkB,yBAAyBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACpD,IAAID,KAAK,KAAKC,KAAK,EAAE;IACjB,MAAM,IAAIX,KAAK,CAAC,uCAAuC,CAAC;EAC5D;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}