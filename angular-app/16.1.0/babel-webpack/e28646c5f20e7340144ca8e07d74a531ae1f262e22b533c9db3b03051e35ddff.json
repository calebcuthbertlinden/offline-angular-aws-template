{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n/**\n * here we use custom errors with the additional field 'parameters'\n */\n\nimport { overwritable } from './overwritable';\n/**\n * transform an object of parameters to a presentable string\n */\nfunction parametersToString(parameters) {\n  var ret = '';\n  if (Object.keys(parameters).length === 0) return ret;\n  ret += 'Given parameters: {\\n';\n  ret += Object.keys(parameters).map(k => {\n    var paramStr = '[object Object]';\n    try {\n      if (k === 'errors') {\n        paramStr = parameters[k].map(err => JSON.stringify(err, Object.getOwnPropertyNames(err)));\n      } else {\n        paramStr = JSON.stringify(parameters[k], function (_k, v) {\n          return v === undefined ? null : v;\n        }, 2);\n      }\n    } catch (e) {}\n    return k + ':' + paramStr;\n  }).join('\\n');\n  ret += '}';\n  return ret;\n}\nfunction messageForError(message, code, parameters) {\n  return 'RxError (' + code + '):' + '\\n' + message + '\\n' + parametersToString(parameters);\n}\nexport var RxError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RxError, _Error);\n  // always true, use this to detect if its an rxdb-error\n\n  function RxError(code, message, parameters = {}) {\n    var _this;\n    var mes = messageForError(message, code, parameters);\n    _this = _Error.call(this, mes) || this;\n    _this.code = code;\n    _this.message = mes;\n    _this.parameters = parameters;\n    _this.rxdb = true; // tag them as internal\n    return _this;\n  }\n  var _proto = RxError.prototype;\n  _proto.toString = function toString() {\n    return this.message;\n  };\n  _createClass(RxError, [{\n    key: \"name\",\n    get: function () {\n      return 'RxError (' + this.code + ')';\n    }\n  }, {\n    key: \"typeError\",\n    get: function () {\n      return false;\n    }\n  }]);\n  return RxError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexport var RxTypeError = /*#__PURE__*/function (_TypeError) {\n  _inheritsLoose(RxTypeError, _TypeError);\n  // always true, use this to detect if its an rxdb-error\n\n  function RxTypeError(code, message, parameters = {}) {\n    var _this2;\n    var mes = messageForError(message, code, parameters);\n    _this2 = _TypeError.call(this, mes) || this;\n    _this2.code = code;\n    _this2.message = mes;\n    _this2.parameters = parameters;\n    _this2.rxdb = true; // tag them as internal\n    return _this2;\n  }\n  var _proto2 = RxTypeError.prototype;\n  _proto2.toString = function toString() {\n    return this.message;\n  };\n  _createClass(RxTypeError, [{\n    key: \"name\",\n    get: function () {\n      return 'RxTypeError (' + this.code + ')';\n    }\n  }, {\n    key: \"typeError\",\n    get: function () {\n      return true;\n    }\n  }]);\n  return RxTypeError;\n}( /*#__PURE__*/_wrapNativeSuper(TypeError));\nexport function newRxError(code, parameters) {\n  return new RxError(code, overwritable.tunnelErrorMessage(code), parameters);\n}\nexport function newRxTypeError(code, parameters) {\n  return new RxTypeError(code, overwritable.tunnelErrorMessage(code), parameters);\n}\n\n/**\n * Returns the error if it is a 409 conflict,\n * return false if it is another error.\n */\nexport function isBulkWriteConflictError(err) {\n  if (err && err.status === 409) {\n    return err;\n  } else {\n    return false;\n  }\n}\nvar STORAGE_WRITE_ERROR_CODE_TO_MESSAGE = {\n  409: 'document write conflict',\n  422: 'schema validation error',\n  510: 'attachment data missing'\n};\nexport function rxStorageWriteErrorToRxError(err) {\n  return newRxError('COL20', {\n    name: STORAGE_WRITE_ERROR_CODE_TO_MESSAGE[err.status],\n    document: err.documentId,\n    writeError: err\n  });\n}","map":{"version":3,"names":["_createClass","_inheritsLoose","_wrapNativeSuper","overwritable","parametersToString","parameters","ret","Object","keys","length","map","k","paramStr","err","JSON","stringify","getOwnPropertyNames","_k","v","undefined","e","join","messageForError","message","code","RxError","_Error","_this","mes","call","rxdb","_proto","prototype","toString","key","get","Error","RxTypeError","_TypeError","_this2","_proto2","TypeError","newRxError","tunnelErrorMessage","newRxTypeError","isBulkWriteConflictError","status","STORAGE_WRITE_ERROR_CODE_TO_MESSAGE","rxStorageWriteErrorToRxError","name","document","documentId","writeError"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/rxdb/dist/es/rx-error.js"],"sourcesContent":["import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n/**\n * here we use custom errors with the additional field 'parameters'\n */\n\nimport { overwritable } from './overwritable';\n/**\n * transform an object of parameters to a presentable string\n */\nfunction parametersToString(parameters) {\n  var ret = '';\n  if (Object.keys(parameters).length === 0) return ret;\n  ret += 'Given parameters: {\\n';\n  ret += Object.keys(parameters).map(k => {\n    var paramStr = '[object Object]';\n    try {\n      if (k === 'errors') {\n        paramStr = parameters[k].map(err => JSON.stringify(err, Object.getOwnPropertyNames(err)));\n      } else {\n        paramStr = JSON.stringify(parameters[k], function (_k, v) {\n          return v === undefined ? null : v;\n        }, 2);\n      }\n    } catch (e) {}\n    return k + ':' + paramStr;\n  }).join('\\n');\n  ret += '}';\n  return ret;\n}\nfunction messageForError(message, code, parameters) {\n  return 'RxError (' + code + '):' + '\\n' + message + '\\n' + parametersToString(parameters);\n}\nexport var RxError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RxError, _Error);\n  // always true, use this to detect if its an rxdb-error\n\n  function RxError(code, message, parameters = {}) {\n    var _this;\n    var mes = messageForError(message, code, parameters);\n    _this = _Error.call(this, mes) || this;\n    _this.code = code;\n    _this.message = mes;\n    _this.parameters = parameters;\n    _this.rxdb = true; // tag them as internal\n    return _this;\n  }\n  var _proto = RxError.prototype;\n  _proto.toString = function toString() {\n    return this.message;\n  };\n  _createClass(RxError, [{\n    key: \"name\",\n    get: function () {\n      return 'RxError (' + this.code + ')';\n    }\n  }, {\n    key: \"typeError\",\n    get: function () {\n      return false;\n    }\n  }]);\n  return RxError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexport var RxTypeError = /*#__PURE__*/function (_TypeError) {\n  _inheritsLoose(RxTypeError, _TypeError);\n  // always true, use this to detect if its an rxdb-error\n\n  function RxTypeError(code, message, parameters = {}) {\n    var _this2;\n    var mes = messageForError(message, code, parameters);\n    _this2 = _TypeError.call(this, mes) || this;\n    _this2.code = code;\n    _this2.message = mes;\n    _this2.parameters = parameters;\n    _this2.rxdb = true; // tag them as internal\n    return _this2;\n  }\n  var _proto2 = RxTypeError.prototype;\n  _proto2.toString = function toString() {\n    return this.message;\n  };\n  _createClass(RxTypeError, [{\n    key: \"name\",\n    get: function () {\n      return 'RxTypeError (' + this.code + ')';\n    }\n  }, {\n    key: \"typeError\",\n    get: function () {\n      return true;\n    }\n  }]);\n  return RxTypeError;\n}( /*#__PURE__*/_wrapNativeSuper(TypeError));\nexport function newRxError(code, parameters) {\n  return new RxError(code, overwritable.tunnelErrorMessage(code), parameters);\n}\nexport function newRxTypeError(code, parameters) {\n  return new RxTypeError(code, overwritable.tunnelErrorMessage(code), parameters);\n}\n\n/**\n * Returns the error if it is a 409 conflict,\n * return false if it is another error.\n */\nexport function isBulkWriteConflictError(err) {\n  if (err && err.status === 409) {\n    return err;\n  } else {\n    return false;\n  }\n}\nvar STORAGE_WRITE_ERROR_CODE_TO_MESSAGE = {\n  409: 'document write conflict',\n  422: 'schema validation error',\n  510: 'attachment data missing'\n};\nexport function rxStorageWriteErrorToRxError(err) {\n  return newRxError('COL20', {\n    name: STORAGE_WRITE_ERROR_CODE_TO_MESSAGE[err.status],\n    document: err.documentId,\n    writeError: err\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}