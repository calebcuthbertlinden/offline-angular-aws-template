{"ast":null,"code":"import { ucfirst } from './utils-string';\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(pluginKey) {\n  var keyParts = pluginKey.split('-');\n  var pluginName = 'RxDB';\n  keyParts.forEach(part => {\n    pluginName += ucfirst(part);\n  });\n  pluginName += 'Plugin';\n  return new Error(\"You are using a function which must be overwritten by a plugin.\\n        You should either prevent the usage of this function or add the plugin via:\\n            import { \" + pluginName + \" } from 'rxdb/plugins/\" + pluginKey + \"';\\n            addRxPlugin(\" + pluginName + \");\\n        \");\n}\nexport function errorToPlainJson(err) {\n  var ret = {\n    name: err.name,\n    message: err.message,\n    rxdb: err.rxdb,\n    parameters: err.parameters,\n    code: err.code,\n    /**\n     * stack must be last to make it easier to read the json in a console.\n     * Also we ensure that each linebreak is spaced so that the chrome devtools\n     * shows urls to the source code that can be clicked to inspect\n     * the correct place in the code.\n     */\n    stack: !err.stack ? undefined : err.stack.replaceAll('\\n', ' \\n ')\n  };\n  return ret;\n}","map":{"version":3,"names":["ucfirst","pluginMissing","pluginKey","keyParts","split","pluginName","forEach","part","Error","errorToPlainJson","err","ret","name","message","rxdb","parameters","code","stack","undefined","replaceAll"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/rxdb/dist/es/plugins/utils/utils-error.js"],"sourcesContent":["import { ucfirst } from './utils-string';\n\n/**\n * Returns an error that indicates that a plugin is missing\n * We do not throw a RxError because this should not be handled\n * programmatically but by using the correct import\n */\nexport function pluginMissing(pluginKey) {\n  var keyParts = pluginKey.split('-');\n  var pluginName = 'RxDB';\n  keyParts.forEach(part => {\n    pluginName += ucfirst(part);\n  });\n  pluginName += 'Plugin';\n  return new Error(\"You are using a function which must be overwritten by a plugin.\\n        You should either prevent the usage of this function or add the plugin via:\\n            import { \" + pluginName + \" } from 'rxdb/plugins/\" + pluginKey + \"';\\n            addRxPlugin(\" + pluginName + \");\\n        \");\n}\nexport function errorToPlainJson(err) {\n  var ret = {\n    name: err.name,\n    message: err.message,\n    rxdb: err.rxdb,\n    parameters: err.parameters,\n    code: err.code,\n    /**\n     * stack must be last to make it easier to read the json in a console.\n     * Also we ensure that each linebreak is spaced so that the chrome devtools\n     * shows urls to the source code that can be clicked to inspect\n     * the correct place in the code.\n     */\n    stack: !err.stack ? undefined : err.stack.replaceAll('\\n', ' \\n ')\n  };\n  return ret;\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,gBAAgB;;AAExC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,SAAS,EAAE;EACvC,IAAIC,QAAQ,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC;EACnC,IAAIC,UAAU,GAAG,MAAM;EACvBF,QAAQ,CAACG,OAAO,CAACC,IAAI,IAAI;IACvBF,UAAU,IAAIL,OAAO,CAACO,IAAI,CAAC;EAC7B,CAAC,CAAC;EACFF,UAAU,IAAI,QAAQ;EACtB,OAAO,IAAIG,KAAK,CAAC,6KAA6K,GAAGH,UAAU,GAAG,wBAAwB,GAAGH,SAAS,GAAG,8BAA8B,GAAGG,UAAU,GAAG,cAAc,CAAC;AACpT;AACA,OAAO,SAASI,gBAAgBA,CAACC,GAAG,EAAE;EACpC,IAAIC,GAAG,GAAG;IACRC,IAAI,EAAEF,GAAG,CAACE,IAAI;IACdC,OAAO,EAAEH,GAAG,CAACG,OAAO;IACpBC,IAAI,EAAEJ,GAAG,CAACI,IAAI;IACdC,UAAU,EAAEL,GAAG,CAACK,UAAU;IAC1BC,IAAI,EAAEN,GAAG,CAACM,IAAI;IACd;AACJ;AACA;AACA;AACA;AACA;IACIC,KAAK,EAAE,CAACP,GAAG,CAACO,KAAK,GAAGC,SAAS,GAAGR,GAAG,CAACO,KAAK,CAACE,UAAU,CAAC,IAAI,EAAE,MAAM;EACnE,CAAC;EACD,OAAOR,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}