{"ast":null,"code":"import { useOperators, OperatorType } from 'mingo/core';\nimport { Query } from 'mingo/query';\nimport { $project } from 'mingo/operators/pipeline/project';\nimport { $sort } from 'mingo/operators/pipeline/sort';\nimport { $and } from 'mingo/operators/query/logical/and';\nimport { $not } from 'mingo/operators/query/logical/not';\nimport { $or } from 'mingo/operators/query/logical/or';\nimport { $nor } from 'mingo/operators/query/logical/nor';\nimport { $eq } from 'mingo/operators/query/comparison/eq';\nimport { $ne } from 'mingo/operators/query/comparison/ne';\nimport { $gt } from 'mingo/operators/query/comparison/gt';\nimport { $gte } from 'mingo/operators/query/comparison/gte';\nimport { $lt } from 'mingo/operators/query/comparison/lt';\nimport { $lte } from 'mingo/operators/query/comparison/lte';\nimport { $regex } from 'mingo/operators/query/evaluation/regex';\nimport { $mod } from 'mingo/operators/query/evaluation/mod';\nimport { $elemMatch } from 'mingo/operators/query/array/elemMatch';\nimport { $exists } from 'mingo/operators/query/element/exists';\nimport { $nin } from 'mingo/operators/query/comparison/nin';\nimport { $in } from 'mingo/operators/query/comparison/in';\nimport { $size } from 'mingo/operators/query/array/size';\nimport { $type } from 'mingo/operators/query/element/type';\nvar mingoInitDone = false;\n\n/**\n * The MongoDB query library is huge and we do not need all the operators.\n * If you add an operator here, make sure that you properly add a test in\n * the file /test/unit/rx-storage-query-correctness.test.ts\n *\n * @link https://github.com/kofrasa/mingo#es6\n */\nexport function getMingoQuery(selector) {\n  if (!mingoInitDone) {\n    useOperators(OperatorType.PIPELINE, {\n      $sort,\n      $project\n    });\n    useOperators(OperatorType.QUERY, {\n      $and,\n      $eq,\n      $elemMatch,\n      $exists,\n      $gt,\n      $gte,\n      $in,\n      $lt,\n      $lte,\n      $ne,\n      $nin,\n      $mod,\n      $nor,\n      $not,\n      $or,\n      $regex,\n      $size,\n      $type\n    });\n    mingoInitDone = true;\n  }\n  return new Query(selector);\n}","map":{"version":3,"names":["useOperators","OperatorType","Query","$project","$sort","$and","$not","$or","$nor","$eq","$ne","$gt","$gte","$lt","$lte","$regex","$mod","$elemMatch","$exists","$nin","$in","$size","$type","mingoInitDone","getMingoQuery","selector","PIPELINE","QUERY"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/rxdb/dist/es/rx-query-mingo.js"],"sourcesContent":["import { useOperators, OperatorType } from 'mingo/core';\nimport { Query } from 'mingo/query';\nimport { $project } from 'mingo/operators/pipeline/project';\nimport { $sort } from 'mingo/operators/pipeline/sort';\nimport { $and } from 'mingo/operators/query/logical/and';\nimport { $not } from 'mingo/operators/query/logical/not';\nimport { $or } from 'mingo/operators/query/logical/or';\nimport { $nor } from 'mingo/operators/query/logical/nor';\nimport { $eq } from 'mingo/operators/query/comparison/eq';\nimport { $ne } from 'mingo/operators/query/comparison/ne';\nimport { $gt } from 'mingo/operators/query/comparison/gt';\nimport { $gte } from 'mingo/operators/query/comparison/gte';\nimport { $lt } from 'mingo/operators/query/comparison/lt';\nimport { $lte } from 'mingo/operators/query/comparison/lte';\nimport { $regex } from 'mingo/operators/query/evaluation/regex';\nimport { $mod } from 'mingo/operators/query/evaluation/mod';\nimport { $elemMatch } from 'mingo/operators/query/array/elemMatch';\nimport { $exists } from 'mingo/operators/query/element/exists';\nimport { $nin } from 'mingo/operators/query/comparison/nin';\nimport { $in } from 'mingo/operators/query/comparison/in';\nimport { $size } from 'mingo/operators/query/array/size';\nimport { $type } from 'mingo/operators/query/element/type';\nvar mingoInitDone = false;\n\n/**\n * The MongoDB query library is huge and we do not need all the operators.\n * If you add an operator here, make sure that you properly add a test in\n * the file /test/unit/rx-storage-query-correctness.test.ts\n *\n * @link https://github.com/kofrasa/mingo#es6\n */\nexport function getMingoQuery(selector) {\n  if (!mingoInitDone) {\n    useOperators(OperatorType.PIPELINE, {\n      $sort,\n      $project\n    });\n    useOperators(OperatorType.QUERY, {\n      $and,\n      $eq,\n      $elemMatch,\n      $exists,\n      $gt,\n      $gte,\n      $in,\n      $lt,\n      $lte,\n      $ne,\n      $nin,\n      $mod,\n      $nor,\n      $not,\n      $or,\n      $regex,\n      $size,\n      $type\n    });\n    mingoInitDone = true;\n  }\n  return new Query(selector);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,YAAY,QAAQ,YAAY;AACvD,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,IAAI,QAAQ,mCAAmC;AACxD,SAASC,IAAI,QAAQ,mCAAmC;AACxD,SAASC,GAAG,QAAQ,kCAAkC;AACtD,SAASC,IAAI,QAAQ,mCAAmC;AACxD,SAASC,GAAG,QAAQ,qCAAqC;AACzD,SAASC,GAAG,QAAQ,qCAAqC;AACzD,SAASC,GAAG,QAAQ,qCAAqC;AACzD,SAASC,IAAI,QAAQ,sCAAsC;AAC3D,SAASC,GAAG,QAAQ,qCAAqC;AACzD,SAASC,IAAI,QAAQ,sCAAsC;AAC3D,SAASC,MAAM,QAAQ,wCAAwC;AAC/D,SAASC,IAAI,QAAQ,sCAAsC;AAC3D,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,OAAO,QAAQ,sCAAsC;AAC9D,SAASC,IAAI,QAAQ,sCAAsC;AAC3D,SAASC,GAAG,QAAQ,qCAAqC;AACzD,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SAASC,KAAK,QAAQ,oCAAoC;AAC1D,IAAIC,aAAa,GAAG,KAAK;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,QAAQ,EAAE;EACtC,IAAI,CAACF,aAAa,EAAE;IAClBvB,YAAY,CAACC,YAAY,CAACyB,QAAQ,EAAE;MAClCtB,KAAK;MACLD;IACF,CAAC,CAAC;IACFH,YAAY,CAACC,YAAY,CAAC0B,KAAK,EAAE;MAC/BtB,IAAI;MACJI,GAAG;MACHQ,UAAU;MACVC,OAAO;MACPP,GAAG;MACHC,IAAI;MACJQ,GAAG;MACHP,GAAG;MACHC,IAAI;MACJJ,GAAG;MACHS,IAAI;MACJH,IAAI;MACJR,IAAI;MACJF,IAAI;MACJC,GAAG;MACHQ,MAAM;MACNM,KAAK;MACLC;IACF,CAAC,CAAC;IACFC,aAAa,GAAG,IAAI;EACtB;EACA,OAAO,IAAIrB,KAAK,CAACuB,QAAQ,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}