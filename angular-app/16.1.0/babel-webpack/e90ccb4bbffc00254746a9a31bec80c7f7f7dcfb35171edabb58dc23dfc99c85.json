{"ast":null,"code":"import { NUGGET_TABLE } from \"../data/local-storage\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data/local-storage\";\nclass TrackService {\n  constructor(localstorageService) {\n    this.localstorageService = localstorageService;\n  }\n  get$() {\n    return this.localstorageService.get$(NUGGET_TABLE);\n  }\n}\nTrackService.ɵfac = function TrackService_Factory(t) {\n  return new (t || TrackService)(i0.ɵɵinject(i1.LocalStorageService));\n};\nTrackService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrackService,\n  factory: TrackService.ɵfac,\n  providedIn: 'root'\n});\nexport { TrackService };","map":{"version":3,"names":["NUGGET_TABLE","TrackService","constructor","localstorageService","get$","i0","ɵɵinject","i1","LocalStorageService","factory","ɵfac","providedIn"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/src/app/repository/track-repository.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { LocalStorageService, NUGGET_TABLE } from \"../data/local-storage\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackService {\n\n  constructor(private localstorageService: LocalStorageService) {\n  }\n\n  get$(): Observable<any> {\n    return this.localstorageService.get$(NUGGET_TABLE)\n  }\n\n}"],"mappings":"AAEA,SAA8BA,YAAY,QAAQ,uBAAuB;;;AAEzE,MAGaC,YAAY;EAEvBC,YAAoBC,mBAAwC;IAAxC,KAAAA,mBAAmB,GAAnBA,mBAAmB;EACvC;EAEAC,IAAIA,CAAA;IACF,OAAO,IAAI,CAACD,mBAAmB,CAACC,IAAI,CAACJ,YAAY,CAAC;EACpD;;AAPWC,YAAY,C;mBAAZA,YAAY,EAAAI,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;AAAA;AAAZP,YAAY,C;SAAZA,YAAY;EAAAQ,OAAA,EAAZR,YAAY,CAAAS,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPV,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}