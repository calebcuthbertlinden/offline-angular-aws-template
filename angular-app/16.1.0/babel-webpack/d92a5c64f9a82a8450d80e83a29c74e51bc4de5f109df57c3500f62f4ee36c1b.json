{"ast":null,"code":"import _asyncToGenerator from \"/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { NUGGET_TABLE } from \"../data/local-storage\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data/local-storage\";\nclass TrackService {\n  constructor(localstorageService) {\n    this.localstorageService = localstorageService;\n  }\n  /**\n   * Inserts a new record into the NUGGET_TABLE table in the local offline storage.\n   *\n   * @param body - The data object representing the record to be inserted.\n   * @returns A Promise that resolves to void once the record has been successfully inserted.\n   * @example\n   * await post({ id: 1, product: 'Phone', quantity: 2 });\n   */\n  post(body) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.localstorageService.post(NUGGET_TABLE, body);\n    })();\n  }\n  get$() {\n    return this.localstorageService.get$(NUGGET_TABLE);\n  }\n}\nTrackService.ɵfac = function TrackService_Factory(t) {\n  return new (t || TrackService)(i0.ɵɵinject(i1.LocalStorageService));\n};\nTrackService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrackService,\n  factory: TrackService.ɵfac,\n  providedIn: 'root'\n});\nexport { TrackService };","map":{"version":3,"names":["NUGGET_TABLE","TrackService","constructor","localstorageService","post","body","_this","_asyncToGenerator","get$","i0","ɵɵinject","i1","LocalStorageService","factory","ɵfac","providedIn"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/src/app/repository/track-repository.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { LocalStorageService, NUGGET_TABLE } from \"../data/local-storage\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackService {\n\n  constructor(private localstorageService: LocalStorageService) {}\n\n  /**\n   * Inserts a new record into the NUGGET_TABLE table in the local offline storage.\n   *\n   * @param body - The data object representing the record to be inserted.\n   * @returns A Promise that resolves to void once the record has been successfully inserted.\n   * @example\n   * await post({ id: 1, product: 'Phone', quantity: 2 });\n   */\n  async post(body: any): Promise<void> {\n    await this.localstorageService.post(NUGGET_TABLE, body)\n  }\n\n  get$(): Observable<any> {\n    return this.localstorageService.get$(NUGGET_TABLE)\n  }\n\n}"],"mappings":";AAEA,SAA8BA,YAAY,QAAQ,uBAAuB;;;AAEzE,MAGaC,YAAY;EAEvBC,YAAoBC,mBAAwC;IAAxC,KAAAA,mBAAmB,GAAnBA,mBAAmB;EAAwB;EAE/D;;;;;;;;EAQMC,IAAIA,CAACC,IAAS;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClB,MAAMD,KAAI,CAACH,mBAAmB,CAACC,IAAI,CAACJ,YAAY,EAAEK,IAAI,CAAC;IAAA;EACzD;EAEAG,IAAIA,CAAA;IACF,OAAO,IAAI,CAACL,mBAAmB,CAACK,IAAI,CAACR,YAAY,CAAC;EACpD;;AAlBWC,YAAY,C;mBAAZA,YAAY,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;AAAA;AAAZX,YAAY,C;SAAZA,YAAY;EAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPd,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}