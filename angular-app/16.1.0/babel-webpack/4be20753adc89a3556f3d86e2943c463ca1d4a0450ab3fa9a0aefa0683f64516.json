{"ast":null,"code":"import { hasLimit, isFindOne, hasSkip, wasResultsEmpty, isDelete, isInsert, isUpdate, previousUnknown, wasLimitReached, sortParamsChanged, wasInResult, wasFirst, wasLast, wasSortedBeforeFirst, wasSortedAfterLast, isSortedBeforeFirst, isSortedAfterLast, wasMatching, doesMatchNow } from './state-resolver';\nexport * from './state-resolver';\n/**\n * all states ordered by performance-cost\n * cheapest first\n * TODO run tests on which is really the fastest\n */\nexport const orderedStateList = ['isInsert', 'isUpdate', 'isDelete', 'hasLimit', 'isFindOne', 'hasSkip', 'wasResultsEmpty', 'previousUnknown', 'wasLimitReached', 'wasFirst', 'wasLast', 'sortParamsChanged', 'wasInResult', 'wasSortedBeforeFirst', 'wasSortedAfterLast', 'isSortedBeforeFirst', 'isSortedAfterLast', 'wasMatching', 'doesMatchNow'];\nexport const stateResolveFunctions = {\n  isInsert,\n  isUpdate,\n  isDelete,\n  hasLimit,\n  isFindOne,\n  hasSkip,\n  wasResultsEmpty,\n  previousUnknown,\n  wasLimitReached,\n  wasFirst,\n  wasLast,\n  sortParamsChanged,\n  wasInResult,\n  wasSortedBeforeFirst,\n  wasSortedAfterLast,\n  isSortedBeforeFirst,\n  isSortedAfterLast,\n  wasMatching,\n  doesMatchNow\n};\nexport const stateResolveFunctionByIndex = {\n  0: isInsert,\n  1: isUpdate,\n  2: isDelete,\n  3: hasLimit,\n  4: isFindOne,\n  5: hasSkip,\n  6: wasResultsEmpty,\n  7: previousUnknown,\n  8: wasLimitReached,\n  9: wasFirst,\n  10: wasLast,\n  11: sortParamsChanged,\n  12: wasInResult,\n  13: wasSortedBeforeFirst,\n  14: wasSortedAfterLast,\n  15: isSortedBeforeFirst,\n  16: isSortedAfterLast,\n  17: wasMatching,\n  18: doesMatchNow\n};\nexport function resolveState(stateName, input) {\n  const fn = stateResolveFunctions[stateName];\n  if (!fn) {\n    throw new Error('resolveState() has no function for ' + stateName);\n  }\n  return fn(input);\n}\nexport function getStateSet(input) {\n  let set = '';\n  for (let i = 0; i < orderedStateList.length; i++) {\n    const name = orderedStateList[i];\n    const value = resolveState(name, input);\n    const add = value ? '1' : '0';\n    set += add;\n  }\n  return set;\n}\nexport function logStateSet(stateSet) {\n  orderedStateList.forEach((state, index) => {\n    console.log('state: ' + state + ' : ' + stateSet[index]);\n  });\n}","map":{"version":3,"names":["hasLimit","isFindOne","hasSkip","wasResultsEmpty","isDelete","isInsert","isUpdate","previousUnknown","wasLimitReached","sortParamsChanged","wasInResult","wasFirst","wasLast","wasSortedBeforeFirst","wasSortedAfterLast","isSortedBeforeFirst","isSortedAfterLast","wasMatching","doesMatchNow","orderedStateList","stateResolveFunctions","stateResolveFunctionByIndex","resolveState","stateName","input","fn","Error","getStateSet","set","i","length","name","value","add","logStateSet","stateSet","forEach","state","index","console","log"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/event-reduce-js/dist/es/states/index.js"],"sourcesContent":["import { hasLimit, isFindOne, hasSkip, wasResultsEmpty, isDelete, isInsert, isUpdate, previousUnknown, wasLimitReached, sortParamsChanged, wasInResult, wasFirst, wasLast, wasSortedBeforeFirst, wasSortedAfterLast, isSortedBeforeFirst, isSortedAfterLast, wasMatching, doesMatchNow } from './state-resolver';\nexport * from './state-resolver';\n/**\n * all states ordered by performance-cost\n * cheapest first\n * TODO run tests on which is really the fastest\n */\nexport const orderedStateList = [\n    'isInsert',\n    'isUpdate',\n    'isDelete',\n    'hasLimit',\n    'isFindOne',\n    'hasSkip',\n    'wasResultsEmpty',\n    'previousUnknown',\n    'wasLimitReached',\n    'wasFirst',\n    'wasLast',\n    'sortParamsChanged',\n    'wasInResult',\n    'wasSortedBeforeFirst',\n    'wasSortedAfterLast',\n    'isSortedBeforeFirst',\n    'isSortedAfterLast',\n    'wasMatching',\n    'doesMatchNow'\n];\nexport const stateResolveFunctions = {\n    isInsert,\n    isUpdate,\n    isDelete,\n    hasLimit,\n    isFindOne,\n    hasSkip,\n    wasResultsEmpty,\n    previousUnknown,\n    wasLimitReached,\n    wasFirst,\n    wasLast,\n    sortParamsChanged,\n    wasInResult,\n    wasSortedBeforeFirst,\n    wasSortedAfterLast,\n    isSortedBeforeFirst,\n    isSortedAfterLast,\n    wasMatching,\n    doesMatchNow\n};\nexport const stateResolveFunctionByIndex = {\n    0: isInsert,\n    1: isUpdate,\n    2: isDelete,\n    3: hasLimit,\n    4: isFindOne,\n    5: hasSkip,\n    6: wasResultsEmpty,\n    7: previousUnknown,\n    8: wasLimitReached,\n    9: wasFirst,\n    10: wasLast,\n    11: sortParamsChanged,\n    12: wasInResult,\n    13: wasSortedBeforeFirst,\n    14: wasSortedAfterLast,\n    15: isSortedBeforeFirst,\n    16: isSortedAfterLast,\n    17: wasMatching,\n    18: doesMatchNow\n};\nexport function resolveState(stateName, input) {\n    const fn = stateResolveFunctions[stateName];\n    if (!fn) {\n        throw new Error('resolveState() has no function for ' + stateName);\n    }\n    return fn(input);\n}\nexport function getStateSet(input) {\n    let set = '';\n    for (let i = 0; i < orderedStateList.length; i++) {\n        const name = orderedStateList[i];\n        const value = resolveState(name, input);\n        const add = value ? '1' : '0';\n        set += add;\n    }\n    return set;\n}\nexport function logStateSet(stateSet) {\n    orderedStateList.forEach((state, index) => {\n        console.log('state: ' + state + ' : ' + stateSet[index]);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}