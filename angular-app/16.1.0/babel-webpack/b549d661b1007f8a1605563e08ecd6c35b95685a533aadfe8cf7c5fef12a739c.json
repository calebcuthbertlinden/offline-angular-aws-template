{"ast":null,"code":"export function parseRevision(revision) {\n  var split = revision.split('-');\n  if (split.length !== 2) {\n    throw new Error('malformatted revision: ' + revision);\n  }\n  return {\n    height: parseInt(split[0], 10),\n    hash: split[1]\n  };\n}\n\n/**\n * @hotPath\n */\nexport function getHeightOfRevision(revision) {\n  var ret = parseInt(revision.split('-')[0], 10);\n  return ret;\n}\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision(databaseInstanceToken, previousDocData) {\n  var previousRevision = previousDocData ? previousDocData._rev : null;\n  var previousRevisionHeight = previousRevision ? parseRevision(previousRevision).height : 0;\n  var newRevisionHeight = previousRevisionHeight + 1;\n  return newRevisionHeight + '-' + databaseInstanceToken;\n}","map":{"version":3,"names":["parseRevision","revision","split","length","Error","height","parseInt","hash","getHeightOfRevision","ret","createRevision","databaseInstanceToken","previousDocData","previousRevision","_rev","previousRevisionHeight","newRevisionHeight"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/rxdb/dist/es/plugins/utils/utils-revision.js"],"sourcesContent":["export function parseRevision(revision) {\n  var split = revision.split('-');\n  if (split.length !== 2) {\n    throw new Error('malformatted revision: ' + revision);\n  }\n  return {\n    height: parseInt(split[0], 10),\n    hash: split[1]\n  };\n}\n\n/**\n * @hotPath\n */\nexport function getHeightOfRevision(revision) {\n  var ret = parseInt(revision.split('-')[0], 10);\n  return ret;\n}\n\n/**\n * Creates the next write revision for a given document.\n */\nexport function createRevision(databaseInstanceToken, previousDocData) {\n  var previousRevision = previousDocData ? previousDocData._rev : null;\n  var previousRevisionHeight = previousRevision ? parseRevision(previousRevision).height : 0;\n  var newRevisionHeight = previousRevisionHeight + 1;\n  return newRevisionHeight + '-' + databaseInstanceToken;\n}\n"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,QAAQ,EAAE;EACtC,IAAIC,KAAK,GAAGD,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;EAC/B,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGH,QAAQ,CAAC;EACvD;EACA,OAAO;IACLI,MAAM,EAAEC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC9BK,IAAI,EAAEL,KAAK,CAAC,CAAC;EACf,CAAC;AACH;;AAEA;AACA;AACA;AACA,OAAO,SAASM,mBAAmBA,CAACP,QAAQ,EAAE;EAC5C,IAAIQ,GAAG,GAAGH,QAAQ,CAACL,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC9C,OAAOO,GAAG;AACZ;;AAEA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,qBAAqB,EAAEC,eAAe,EAAE;EACrE,IAAIC,gBAAgB,GAAGD,eAAe,GAAGA,eAAe,CAACE,IAAI,GAAG,IAAI;EACpE,IAAIC,sBAAsB,GAAGF,gBAAgB,GAAGb,aAAa,CAACa,gBAAgB,CAAC,CAACR,MAAM,GAAG,CAAC;EAC1F,IAAIW,iBAAiB,GAAGD,sBAAsB,GAAG,CAAC;EAClD,OAAOC,iBAAiB,GAAG,GAAG,GAAGL,qBAAqB;AACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}