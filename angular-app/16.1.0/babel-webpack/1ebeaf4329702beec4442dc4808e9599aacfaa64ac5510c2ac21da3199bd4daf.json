{"ast":null,"code":"import { ensureNotFalsy } from './utils-other';\nexport var REGEX_ALL_DOTS = /\\./g;\nexport var REGEX_ALL_PIPES = /\\|/g;\n/**\n * @link https://stackoverflow.com/a/26034888/3443137\n*/\nexport var REGEX_PARSE_REGEX_EXPRESSION = /(\\/?)(.+)\\1([a-z]*)/i;\nexport function parseRegex(regex) {\n  var matches = ensureNotFalsy(regex.toString().match(REGEX_PARSE_REGEX_EXPRESSION));\n  return {\n    pattern: matches[2],\n    flags: matches[3]\n  };\n}","map":{"version":3,"names":["ensureNotFalsy","REGEX_ALL_DOTS","REGEX_ALL_PIPES","REGEX_PARSE_REGEX_EXPRESSION","parseRegex","regex","matches","toString","match","pattern","flags"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/rxdb/dist/es/plugins/utils/utils-regex.js"],"sourcesContent":["import { ensureNotFalsy } from './utils-other';\nexport var REGEX_ALL_DOTS = /\\./g;\nexport var REGEX_ALL_PIPES = /\\|/g;\n/**\n * @link https://stackoverflow.com/a/26034888/3443137\n*/\nexport var REGEX_PARSE_REGEX_EXPRESSION = /(\\/?)(.+)\\1([a-z]*)/i;\nexport function parseRegex(regex) {\n  var matches = ensureNotFalsy(regex.toString().match(REGEX_PARSE_REGEX_EXPRESSION));\n  return {\n    pattern: matches[2],\n    flags: matches[3]\n  };\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,eAAe;AAC9C,OAAO,IAAIC,cAAc,GAAG,KAAK;AACjC,OAAO,IAAIC,eAAe,GAAG,KAAK;AAClC;AACA;AACA;AACA,OAAO,IAAIC,4BAA4B,GAAG,sBAAsB;AAChE,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAE;EAChC,IAAIC,OAAO,GAAGN,cAAc,CAACK,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACC,KAAK,CAACL,4BAA4B,CAAC,CAAC;EAClF,OAAO;IACLM,OAAO,EAAEH,OAAO,CAAC,CAAC,CAAC;IACnBI,KAAK,EAAEJ,OAAO,CAAC,CAAC;EAClB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}