{"ast":null,"code":"/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}","map":{"version":3,"names":["addBrowser","fn","WorkerGlobalScope","self","oldClose","close","bind","window","addEventListener"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/unload/dist/es/browser.js"],"sourcesContent":["/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}"],"mappings":"AAAA;;AAEA,OAAO,SAASA,UAAUA,CAACC,EAAE,EAAE;EAC7B,IAAI,OAAOC,iBAAiB,KAAK,UAAU,IAAIC,IAAI,YAAYD,iBAAiB,EAAE;IAChF;AACJ;AACA;AACA;AACA;AACA;IACI,IAAIE,QAAQ,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;IACpCA,IAAI,CAACE,KAAK,GAAG,YAAY;MACvBJ,EAAE,CAAC,CAAC;MACJ,OAAOG,QAAQ,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,MAAM;IACL;AACJ;AACA;AACA;IACI,IAAI,OAAOG,MAAM,CAACC,gBAAgB,KAAK,UAAU,EAAE;MACjD;IACF;;IAEA;AACJ;AACA;IACID,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAE,YAAY;MAClDP,EAAE,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;;IAER;AACJ;AACA;AACA;IACIM,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAY;MAC5CP,EAAE,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;EACV;;EAEA;AACF;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}