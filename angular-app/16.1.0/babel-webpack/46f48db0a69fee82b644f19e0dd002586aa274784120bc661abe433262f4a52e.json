{"ast":null,"code":"import _asyncToGenerator from \"/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { NUGGET_TABLE } from \"../local-storage/local-storage\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../sync-service\";\nclass TrackService {\n  constructor(syncService) {\n    this.syncService = syncService;\n  }\n  /**\n   * Inserts a new record into the NUGGET table in the local offline storage.\n   *\n   * @param body - The data object representing the record to be inserted.\n   * @returns A Promise that resolves to void once the record has been successfully inserted.\n   * @example\n   * await post({ id: 1, product: 'Phone', quantity: 2 });\n   */\n  markNuggetComplete(body) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.syncService.post(NUGGET_TABLE, \"\", body);\n    })();\n  }\n  get$() {\n    return this.syncService.get$(NUGGET_TABLE);\n  }\n  getNuggets() {\n    return this.syncService.getCollection(NUGGET_TABLE);\n  }\n}\nTrackService.ɵfac = function TrackService_Factory(t) {\n  return new (t || TrackService)(i0.ɵɵinject(i1.SyncService));\n};\nTrackService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrackService,\n  factory: TrackService.ɵfac,\n  providedIn: 'root'\n});\nexport { TrackService };","map":{"version":3,"names":["NUGGET_TABLE","TrackService","constructor","syncService","markNuggetComplete","body","_this","_asyncToGenerator","post","get$","getNuggets","getCollection","i0","ɵɵinject","i1","SyncService","factory","ɵfac","providedIn"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/src/app/repository/api/track-repository.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { NUGGET_TABLE } from \"../local-storage/local-storage\";\nimport { SyncService } from \"../sync-service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackService {\n\n  constructor(private syncService: SyncService) {}\n\n  /**\n   * Inserts a new record into the NUGGET table in the local offline storage.\n   *\n   * @param body - The data object representing the record to be inserted.\n   * @returns A Promise that resolves to void once the record has been successfully inserted.\n   * @example\n   * await post({ id: 1, product: 'Phone', quantity: 2 });\n   */\n  async markNuggetComplete(body: any): Promise<void> {\n    await this.syncService.post(NUGGET_TABLE, \"\", body)\n  }\n\n  get$(): Observable<any> {\n    return this.syncService.get$(NUGGET_TABLE)\n  }\n\n  getNuggets(): Promise<any> {\n    return this.syncService.getCollection(NUGGET_TABLE)\n  }\n\n}"],"mappings":";AAEA,SAASA,YAAY,QAAQ,gCAAgC;;;AAG7D,MAGaC,YAAY;EAEvBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/C;;;;;;;;EAQMC,kBAAkBA,CAACC,IAAS;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAChC,MAAMD,KAAI,CAACH,WAAW,CAACK,IAAI,CAACR,YAAY,EAAE,EAAE,EAAEK,IAAI,CAAC;IAAA;EACrD;EAEAI,IAAIA,CAAA;IACF,OAAO,IAAI,CAACN,WAAW,CAACM,IAAI,CAACT,YAAY,CAAC;EAC5C;EAEAU,UAAUA,CAAA;IACR,OAAO,IAAI,CAACP,WAAW,CAACQ,aAAa,CAACX,YAAY,CAAC;EACrD;;AAtBWC,YAAY,C;mBAAZA,YAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAZd,YAAY,C;SAAZA,YAAY;EAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPjB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}