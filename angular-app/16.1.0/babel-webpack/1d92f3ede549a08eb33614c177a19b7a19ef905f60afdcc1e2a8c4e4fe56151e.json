{"ast":null,"code":"import _asyncToGenerator from \"/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Dexie } from 'dexie';\nimport { flatClone, getFromMapOrCreate, toArray } from '../utils';\nimport { newRxError } from '../../rx-error';\nimport { getPrimaryFieldOfPrimaryKey, getSchemaByObjectPath } from '../../rx-schema-helper';\nimport { RxStorageDefaultStatics } from '../../rx-storage-statics';\nexport var DEXIE_DOCS_TABLE_NAME = 'docs';\nexport var DEXIE_DELETED_DOCS_TABLE_NAME = 'deleted-docs';\nexport var DEXIE_CHANGES_TABLE_NAME = 'changes';\nexport var RX_STORAGE_NAME_DEXIE = 'dexie';\nexport var RxStorageDexieStatics = RxStorageDefaultStatics;\nvar DEXIE_STATE_DB_BY_NAME = new Map();\nvar REF_COUNT_PER_DEXIE_DB = new Map();\nexport function getDexieDbWithTables(databaseName, collectionName, settings, schema) {\n  var primaryPath = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n  var dexieDbName = 'rxdb-dexie-' + databaseName + '--' + schema.version + '--' + collectionName;\n  var state = getFromMapOrCreate(DEXIE_STATE_DB_BY_NAME, dexieDbName, () => {\n    var value = _asyncToGenerator(function* () {\n      /**\n       * IndexedDB was not designed for dynamically adding tables on the fly,\n       * so we create one dexie database per RxDB storage instance.\n       * @link https://github.com/dexie/Dexie.js/issues/684#issuecomment-373224696\n       */\n      var useSettings = flatClone(settings);\n      useSettings.autoOpen = false;\n      var dexieDb = new Dexie(dexieDbName, useSettings);\n      var dexieStoresSettings = {\n        [DEXIE_DOCS_TABLE_NAME]: getDexieStoreSchema(schema),\n        [DEXIE_CHANGES_TABLE_NAME]: '++sequence, id',\n        /**\n         * Instead of adding {deleted: false} to every query we run over the document store,\n         * we move deleted documents into a separate store where they can only be queried\n         * by primary key.\n         * This increases performance because it is way easier for the query planner to select\n         * a good index and we also do not have to add the _deleted field to every index.\n         *\n         * We also need the [_meta.lwt+' + primaryPath + '] index for getChangedDocumentsSince()\n         */\n        [DEXIE_DELETED_DOCS_TABLE_NAME]: primaryPath + ',_meta.lwt,[_meta.lwt+' + primaryPath + ']'\n      };\n      dexieDb.version(1).stores(dexieStoresSettings);\n      yield dexieDb.open();\n      return {\n        dexieDb,\n        dexieTable: dexieDb[DEXIE_DOCS_TABLE_NAME],\n        dexieDeletedTable: dexieDb[DEXIE_DELETED_DOCS_TABLE_NAME]\n      };\n    })();\n    DEXIE_STATE_DB_BY_NAME.set(dexieDbName, state);\n    REF_COUNT_PER_DEXIE_DB.set(state, 0);\n    return value;\n  });\n  return state;\n}\nexport function closeDexieDb(_x) {\n  return _closeDexieDb.apply(this, arguments);\n}\nfunction _closeDexieDb() {\n  _closeDexieDb = _asyncToGenerator(function* (statePromise) {\n    var state = yield statePromise;\n    var prevCount = REF_COUNT_PER_DEXIE_DB.get(statePromise);\n    var newCount = prevCount - 1;\n    if (newCount === 0) {\n      state.dexieDb.close();\n      REF_COUNT_PER_DEXIE_DB.delete(statePromise);\n    } else {\n      REF_COUNT_PER_DEXIE_DB.set(statePromise, newCount);\n    }\n  });\n  return _closeDexieDb.apply(this, arguments);\n}\nexport function ensureNoBooleanIndex(schema) {\n  if (!schema.indexes) {\n    return;\n  }\n  var checkedFields = new Set();\n  schema.indexes.forEach(index => {\n    var fields = toArray(index);\n    fields.forEach(field => {\n      if (checkedFields.has(field)) {\n        return;\n      }\n      checkedFields.add(field);\n      var schemaObj = getSchemaByObjectPath(schema, field);\n      if (schemaObj.type === 'boolean') {\n        throw newRxError('DXE1', {\n          schema,\n          index,\n          field\n        });\n      }\n    });\n  });\n}\n\n/**\n * It is not possible to set non-javascript-variable-syntax\n * keys as IndexedDB indexes. So we have to substitute the pipe-char\n * which comes from the key-compression plugin.\n */\nexport var DEXIE_PIPE_SUBSTITUTE = '__';\nexport function dexieReplaceIfStartsWithPipe(str) {\n  var split = str.split('.');\n  if (split.length > 1) {\n    return split.map(part => dexieReplaceIfStartsWithPipe(part)).join('.');\n  }\n  if (str.startsWith('|')) {\n    var withoutFirst = str.substring(1);\n    return DEXIE_PIPE_SUBSTITUTE + withoutFirst;\n  } else {\n    return str;\n  }\n}\nexport function dexieReplaceIfStartsWithPipeRevert(str) {\n  var split = str.split('.');\n  if (split.length > 1) {\n    return split.map(part => dexieReplaceIfStartsWithPipeRevert(part)).join('.');\n  }\n  if (str.startsWith(DEXIE_PIPE_SUBSTITUTE)) {\n    var withoutFirst = str.substring(DEXIE_PIPE_SUBSTITUTE.length);\n    return '|' + withoutFirst;\n  } else {\n    return str;\n  }\n}\n\n/**\n * @recursive\n */\nexport function fromStorageToDexie(documentData) {\n  if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n    return documentData;\n  } else if (Array.isArray(documentData)) {\n    return documentData.map(row => fromStorageToDexie(row));\n  } else if (typeof documentData === 'object') {\n    var ret = {};\n    Object.entries(documentData).forEach(([key, value]) => {\n      if (typeof value === 'object') {\n        value = fromStorageToDexie(value);\n      }\n      ret[dexieReplaceIfStartsWithPipe(key)] = value;\n    });\n    return ret;\n  }\n}\nexport function fromDexieToStorage(documentData) {\n  if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n    return documentData;\n  } else if (Array.isArray(documentData)) {\n    return documentData.map(row => fromDexieToStorage(row));\n  } else if (typeof documentData === 'object') {\n    var ret = {};\n    Object.entries(documentData).forEach(([key, value]) => {\n      if (typeof value === 'object' || Array.isArray(documentData)) {\n        value = fromDexieToStorage(value);\n      }\n      ret[dexieReplaceIfStartsWithPipeRevert(key)] = value;\n    });\n    return ret;\n  }\n}\n\n/**\n * Creates a string that can be used to create the dexie store.\n * @link https://dexie.org/docs/API-Reference#quick-reference\n */\nexport function getDexieStoreSchema(rxJsonSchema) {\n  var parts = [];\n\n  /**\n   * First part must be the primary key\n   * @link https://github.com/dexie/Dexie.js/issues/1307#issuecomment-846590912\n   */\n  var primaryKey = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\n  parts.push([primaryKey]);\n\n  // add other indexes\n  if (rxJsonSchema.indexes) {\n    rxJsonSchema.indexes.forEach(index => {\n      var arIndex = toArray(index);\n      parts.push(arIndex);\n    });\n  }\n\n  // we also need the _meta.lwt+primaryKey index for the getChangedDocumentsSince() method.\n  parts.push(['_meta.lwt', primaryKey]);\n\n  /**\n   * It is not possible to set non-javascript-variable-syntax\n   * keys as IndexedDB indexes. So we have to substitute the pipe-char\n   * which comes from the key-compression plugin.\n   */\n  parts = parts.map(part => {\n    return part.map(str => dexieReplaceIfStartsWithPipe(str));\n  });\n  return parts.map(part => {\n    if (part.length === 1) {\n      return part[0];\n    } else {\n      return '[' + part.join('+') + ']';\n    }\n  }).join(', ');\n}\n\n/**\n * Returns all documents in the database.\n * Non-deleted plus deleted ones.\n */\nexport function getDocsInDb(_x2, _x3) {\n  return _getDocsInDb.apply(this, arguments);\n}\nfunction _getDocsInDb() {\n  _getDocsInDb = _asyncToGenerator(function* (internals, docIds) {\n    var state = yield internals;\n    var [nonDeletedDocsInDb, deletedDocsInDb] = yield Promise.all([state.dexieTable.bulkGet(docIds), state.dexieDeletedTable.bulkGet(docIds)]);\n    var docsInDb = deletedDocsInDb.slice(0);\n    nonDeletedDocsInDb.forEach((doc, idx) => {\n      if (doc) {\n        docsInDb[idx] = doc;\n      }\n    });\n    return docsInDb;\n  });\n  return _getDocsInDb.apply(this, arguments);\n}","map":{"version":3,"names":["Dexie","flatClone","getFromMapOrCreate","toArray","newRxError","getPrimaryFieldOfPrimaryKey","getSchemaByObjectPath","RxStorageDefaultStatics","DEXIE_DOCS_TABLE_NAME","DEXIE_DELETED_DOCS_TABLE_NAME","DEXIE_CHANGES_TABLE_NAME","RX_STORAGE_NAME_DEXIE","RxStorageDexieStatics","DEXIE_STATE_DB_BY_NAME","Map","REF_COUNT_PER_DEXIE_DB","getDexieDbWithTables","databaseName","collectionName","settings","schema","primaryPath","primaryKey","dexieDbName","version","state","value","_asyncToGenerator","useSettings","autoOpen","dexieDb","dexieStoresSettings","getDexieStoreSchema","stores","open","dexieTable","dexieDeletedTable","set","closeDexieDb","_x","_closeDexieDb","apply","arguments","statePromise","prevCount","get","newCount","close","delete","ensureNoBooleanIndex","indexes","checkedFields","Set","forEach","index","fields","field","has","add","schemaObj","type","DEXIE_PIPE_SUBSTITUTE","dexieReplaceIfStartsWithPipe","str","split","length","map","part","join","startsWith","withoutFirst","substring","dexieReplaceIfStartsWithPipeRevert","fromStorageToDexie","documentData","Array","isArray","row","ret","Object","entries","key","fromDexieToStorage","rxJsonSchema","parts","push","arIndex","getDocsInDb","_x2","_x3","_getDocsInDb","internals","docIds","nonDeletedDocsInDb","deletedDocsInDb","Promise","all","bulkGet","docsInDb","slice","doc","idx"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/rxdb/dist/es/plugins/storage-dexie/dexie-helper.js"],"sourcesContent":["import { Dexie } from 'dexie';\nimport { flatClone, getFromMapOrCreate, toArray } from '../utils';\nimport { newRxError } from '../../rx-error';\nimport { getPrimaryFieldOfPrimaryKey, getSchemaByObjectPath } from '../../rx-schema-helper';\nimport { RxStorageDefaultStatics } from '../../rx-storage-statics';\nexport var DEXIE_DOCS_TABLE_NAME = 'docs';\nexport var DEXIE_DELETED_DOCS_TABLE_NAME = 'deleted-docs';\nexport var DEXIE_CHANGES_TABLE_NAME = 'changes';\nexport var RX_STORAGE_NAME_DEXIE = 'dexie';\nexport var RxStorageDexieStatics = RxStorageDefaultStatics;\nvar DEXIE_STATE_DB_BY_NAME = new Map();\nvar REF_COUNT_PER_DEXIE_DB = new Map();\nexport function getDexieDbWithTables(databaseName, collectionName, settings, schema) {\n  var primaryPath = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n  var dexieDbName = 'rxdb-dexie-' + databaseName + '--' + schema.version + '--' + collectionName;\n  var state = getFromMapOrCreate(DEXIE_STATE_DB_BY_NAME, dexieDbName, () => {\n    var value = (async () => {\n      /**\n       * IndexedDB was not designed for dynamically adding tables on the fly,\n       * so we create one dexie database per RxDB storage instance.\n       * @link https://github.com/dexie/Dexie.js/issues/684#issuecomment-373224696\n       */\n      var useSettings = flatClone(settings);\n      useSettings.autoOpen = false;\n      var dexieDb = new Dexie(dexieDbName, useSettings);\n      var dexieStoresSettings = {\n        [DEXIE_DOCS_TABLE_NAME]: getDexieStoreSchema(schema),\n        [DEXIE_CHANGES_TABLE_NAME]: '++sequence, id',\n        /**\n         * Instead of adding {deleted: false} to every query we run over the document store,\n         * we move deleted documents into a separate store where they can only be queried\n         * by primary key.\n         * This increases performance because it is way easier for the query planner to select\n         * a good index and we also do not have to add the _deleted field to every index.\n         *\n         * We also need the [_meta.lwt+' + primaryPath + '] index for getChangedDocumentsSince()\n         */\n        [DEXIE_DELETED_DOCS_TABLE_NAME]: primaryPath + ',_meta.lwt,[_meta.lwt+' + primaryPath + ']'\n      };\n      dexieDb.version(1).stores(dexieStoresSettings);\n      await dexieDb.open();\n      return {\n        dexieDb,\n        dexieTable: dexieDb[DEXIE_DOCS_TABLE_NAME],\n        dexieDeletedTable: dexieDb[DEXIE_DELETED_DOCS_TABLE_NAME]\n      };\n    })();\n    DEXIE_STATE_DB_BY_NAME.set(dexieDbName, state);\n    REF_COUNT_PER_DEXIE_DB.set(state, 0);\n    return value;\n  });\n  return state;\n}\nexport async function closeDexieDb(statePromise) {\n  var state = await statePromise;\n  var prevCount = REF_COUNT_PER_DEXIE_DB.get(statePromise);\n  var newCount = prevCount - 1;\n  if (newCount === 0) {\n    state.dexieDb.close();\n    REF_COUNT_PER_DEXIE_DB.delete(statePromise);\n  } else {\n    REF_COUNT_PER_DEXIE_DB.set(statePromise, newCount);\n  }\n}\nexport function ensureNoBooleanIndex(schema) {\n  if (!schema.indexes) {\n    return;\n  }\n  var checkedFields = new Set();\n  schema.indexes.forEach(index => {\n    var fields = toArray(index);\n    fields.forEach(field => {\n      if (checkedFields.has(field)) {\n        return;\n      }\n      checkedFields.add(field);\n      var schemaObj = getSchemaByObjectPath(schema, field);\n      if (schemaObj.type === 'boolean') {\n        throw newRxError('DXE1', {\n          schema,\n          index,\n          field\n        });\n      }\n    });\n  });\n}\n\n/**\n * It is not possible to set non-javascript-variable-syntax\n * keys as IndexedDB indexes. So we have to substitute the pipe-char\n * which comes from the key-compression plugin.\n */\nexport var DEXIE_PIPE_SUBSTITUTE = '__';\nexport function dexieReplaceIfStartsWithPipe(str) {\n  var split = str.split('.');\n  if (split.length > 1) {\n    return split.map(part => dexieReplaceIfStartsWithPipe(part)).join('.');\n  }\n  if (str.startsWith('|')) {\n    var withoutFirst = str.substring(1);\n    return DEXIE_PIPE_SUBSTITUTE + withoutFirst;\n  } else {\n    return str;\n  }\n}\nexport function dexieReplaceIfStartsWithPipeRevert(str) {\n  var split = str.split('.');\n  if (split.length > 1) {\n    return split.map(part => dexieReplaceIfStartsWithPipeRevert(part)).join('.');\n  }\n  if (str.startsWith(DEXIE_PIPE_SUBSTITUTE)) {\n    var withoutFirst = str.substring(DEXIE_PIPE_SUBSTITUTE.length);\n    return '|' + withoutFirst;\n  } else {\n    return str;\n  }\n}\n\n/**\n * @recursive\n */\nexport function fromStorageToDexie(documentData) {\n  if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n    return documentData;\n  } else if (Array.isArray(documentData)) {\n    return documentData.map(row => fromStorageToDexie(row));\n  } else if (typeof documentData === 'object') {\n    var ret = {};\n    Object.entries(documentData).forEach(([key, value]) => {\n      if (typeof value === 'object') {\n        value = fromStorageToDexie(value);\n      }\n      ret[dexieReplaceIfStartsWithPipe(key)] = value;\n    });\n    return ret;\n  }\n}\nexport function fromDexieToStorage(documentData) {\n  if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n    return documentData;\n  } else if (Array.isArray(documentData)) {\n    return documentData.map(row => fromDexieToStorage(row));\n  } else if (typeof documentData === 'object') {\n    var ret = {};\n    Object.entries(documentData).forEach(([key, value]) => {\n      if (typeof value === 'object' || Array.isArray(documentData)) {\n        value = fromDexieToStorage(value);\n      }\n      ret[dexieReplaceIfStartsWithPipeRevert(key)] = value;\n    });\n    return ret;\n  }\n}\n\n/**\n * Creates a string that can be used to create the dexie store.\n * @link https://dexie.org/docs/API-Reference#quick-reference\n */\nexport function getDexieStoreSchema(rxJsonSchema) {\n  var parts = [];\n\n  /**\n   * First part must be the primary key\n   * @link https://github.com/dexie/Dexie.js/issues/1307#issuecomment-846590912\n   */\n  var primaryKey = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\n  parts.push([primaryKey]);\n\n  // add other indexes\n  if (rxJsonSchema.indexes) {\n    rxJsonSchema.indexes.forEach(index => {\n      var arIndex = toArray(index);\n      parts.push(arIndex);\n    });\n  }\n\n  // we also need the _meta.lwt+primaryKey index for the getChangedDocumentsSince() method.\n  parts.push(['_meta.lwt', primaryKey]);\n\n  /**\n   * It is not possible to set non-javascript-variable-syntax\n   * keys as IndexedDB indexes. So we have to substitute the pipe-char\n   * which comes from the key-compression plugin.\n   */\n  parts = parts.map(part => {\n    return part.map(str => dexieReplaceIfStartsWithPipe(str));\n  });\n  return parts.map(part => {\n    if (part.length === 1) {\n      return part[0];\n    } else {\n      return '[' + part.join('+') + ']';\n    }\n  }).join(', ');\n}\n\n/**\n * Returns all documents in the database.\n * Non-deleted plus deleted ones.\n */\nexport async function getDocsInDb(internals, docIds) {\n  var state = await internals;\n  var [nonDeletedDocsInDb, deletedDocsInDb] = await Promise.all([state.dexieTable.bulkGet(docIds), state.dexieDeletedTable.bulkGet(docIds)]);\n  var docsInDb = deletedDocsInDb.slice(0);\n  nonDeletedDocsInDb.forEach((doc, idx) => {\n    if (doc) {\n      docsInDb[idx] = doc;\n    }\n  });\n  return docsInDb;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}