{"ast":null,"code":"/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 4.0.0-alpha.4, Tue May 31 2022\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : global;\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n  _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n  if (typeof extension !== 'object') return obj;\n  keys(extension).forEach(function (key) {\n    obj[key] = extension[key];\n  });\n  return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n  return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n  if (typeof extension === 'function') extension = extension(getProto(proto));\n  (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n    setProp(proto, key, extension[key]);\n  });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n  defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ? {\n    get: functionOrGetSet.get,\n    set: functionOrGetSet.set,\n    configurable: true\n  } : {\n    value: functionOrGetSet,\n    configurable: true,\n    writable: true\n  }, options));\n}\nfunction derive(Child) {\n  return {\n    from: function (Parent) {\n      Child.prototype = Object.create(Parent.prototype);\n      setProp(Child.prototype, \"constructor\", Child);\n      return {\n        extend: props.bind(null, Child.prototype)\n      };\n    }\n  };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n  const pd = getOwnPropertyDescriptor(obj, prop);\n  let proto;\n  return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n  return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n  return overridedFactory(origFunc);\n}\nfunction assert(b) {\n  if (!b) throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n  if (_global.setImmediate) setImmediate(fn);else setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n  return array.reduce((result, item, i) => {\n    var nameAndValue = extractor(item, i);\n    if (nameAndValue) result[nameAndValue[0]] = nameAndValue[1];\n    return result;\n  }, {});\n}\nfunction tryCatch(fn, onerror, args) {\n  try {\n    fn.apply(null, args);\n  } catch (ex) {\n    onerror && onerror(ex);\n  }\n}\nfunction getByKeyPath(obj, keyPath) {\n  if (hasOwn(obj, keyPath)) return obj[keyPath];\n  if (!keyPath) return obj;\n  if (typeof keyPath !== 'string') {\n    var rv = [];\n    for (var i = 0, l = keyPath.length; i < l; ++i) {\n      var val = getByKeyPath(obj, keyPath[i]);\n      rv.push(val);\n    }\n    return rv;\n  }\n  var period = keyPath.indexOf('.');\n  if (period !== -1) {\n    var innerObj = obj[keyPath.substr(0, period)];\n    return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n  }\n  return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n  if (!obj || keyPath === undefined) return;\n  if ('isFrozen' in Object && Object.isFrozen(obj)) return;\n  if (typeof keyPath !== 'string' && 'length' in keyPath) {\n    assert(typeof value !== 'string' && 'length' in value);\n    for (var i = 0, l = keyPath.length; i < l; ++i) {\n      setByKeyPath(obj, keyPath[i], value[i]);\n    }\n  } else {\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n      var currentKeyPath = keyPath.substr(0, period);\n      var remainingKeyPath = keyPath.substr(period + 1);\n      if (remainingKeyPath === \"\") {\n        if (value === undefined) {\n          if (isArray(obj) && !isNaN(parseInt(currentKeyPath))) obj.splice(currentKeyPath, 1);else delete obj[currentKeyPath];\n        } else obj[currentKeyPath] = value;\n      } else {\n        var innerObj = obj[currentKeyPath];\n        if (!innerObj || !hasOwn(obj, currentKeyPath)) innerObj = obj[currentKeyPath] = {};\n        setByKeyPath(innerObj, remainingKeyPath, value);\n      }\n    } else {\n      if (value === undefined) {\n        if (isArray(obj) && !isNaN(parseInt(keyPath))) obj.splice(keyPath, 1);else delete obj[keyPath];\n      } else obj[keyPath] = value;\n    }\n  }\n}\nfunction delByKeyPath(obj, keyPath) {\n  if (typeof keyPath === 'string') setByKeyPath(obj, keyPath, undefined);else if ('length' in keyPath) [].map.call(keyPath, function (kp) {\n    setByKeyPath(obj, kp, undefined);\n  });\n}\nfunction shallowClone(obj) {\n  var rv = {};\n  for (var m in obj) {\n    if (hasOwn(obj, m)) rv[m] = obj[m];\n  }\n  return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n  return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\".split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = intrinsicTypeNames.map(t => _global[t]);\narrayToObject(intrinsicTypeNames, x => [x, true]);\nlet circularRefs = null;\nfunction deepClone(any) {\n  circularRefs = typeof WeakMap !== 'undefined' && new WeakMap();\n  const rv = innerDeepClone(any);\n  circularRefs = null;\n  return rv;\n}\nfunction innerDeepClone(any) {\n  if (!any || typeof any !== 'object') return any;\n  let rv = circularRefs && circularRefs.get(any);\n  if (rv) return rv;\n  if (isArray(any)) {\n    rv = [];\n    circularRefs && circularRefs.set(any, rv);\n    for (var i = 0, l = any.length; i < l; ++i) {\n      rv.push(innerDeepClone(any[i]));\n    }\n  } else if (intrinsicTypes.indexOf(any.constructor) >= 0) {\n    rv = any;\n  } else {\n    const proto = getProto(any);\n    rv = proto === Object.prototype ? {} : Object.create(proto);\n    circularRefs && circularRefs.set(any, rv);\n    for (var prop in any) {\n      if (hasOwn(any, prop)) {\n        rv[prop] = innerDeepClone(any[prop]);\n      }\n    }\n  }\n  return rv;\n}\nconst {\n  toString\n} = {};\nfunction toStringTag(o) {\n  return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n  var i;\n  return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () {\n  return null;\n};\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n  var i, a, x, it;\n  if (arguments.length === 1) {\n    if (isArray(arrayLike)) return arrayLike.slice();\n    if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string') return [arrayLike];\n    if (it = getIteratorOf(arrayLike)) {\n      a = [];\n      while (x = it.next(), !x.done) a.push(x.value);\n      return a;\n    }\n    if (arrayLike == null) return [arrayLike];\n    i = arrayLike.length;\n    if (typeof i === 'number') {\n      a = new Array(i);\n      while (i--) a[i] = arrayLike[i];\n      return a;\n    }\n    return [arrayLike];\n  }\n  i = arguments.length;\n  a = new Array(i);\n  while (i--) a[i] = arguments[i];\n  return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined' ? fn => fn[Symbol.toStringTag] === 'AsyncFunction' : () => false;\nvar debug = typeof location !== 'undefined' && /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n  debug = value;\n  libraryFilter = filter;\n}\nvar libraryFilter = () => true;\nconst NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\nfunction getErrorWithStack() {\n  if (NEEDS_THROW_FOR_STACK) try {\n    getErrorWithStack.arguments;\n    throw new Error();\n  } catch (e) {\n    return e;\n  }\n  return new Error();\n}\nfunction prettyStack(exception, numIgnoredFrames) {\n  var stack = exception.stack;\n  if (!stack) return \"\";\n  numIgnoredFrames = numIgnoredFrames || 0;\n  if (stack.indexOf(exception.name) === 0) numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n  return stack.split('\\n').slice(numIgnoredFrames).filter(libraryFilter).map(frame => \"\\n\" + frame).join('');\n}\nvar dexieErrorNames = ['Modify', 'Bulk', 'OpenFailed', 'VersionChange', 'Schema', 'Upgrade', 'InvalidTable', 'MissingAPI', 'NoSuchDatabase', 'InvalidArgument', 'SubTransaction', 'Unsupported', 'Internal', 'DatabaseClosed', 'PrematureCommit', 'ForeignAwait'];\nvar idbDomErrorNames = ['Unknown', 'Constraint', 'Data', 'TransactionInactive', 'ReadOnly', 'Version', 'NotFound', 'InvalidState', 'InvalidAccess', 'Abort', 'Timeout', 'QuotaExceeded', 'Syntax', 'DataClone'];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n  VersionChanged: \"Database version changed by other database connection\",\n  DatabaseClosed: \"Database has been closed\",\n  Abort: \"Transaction aborted\",\n  TransactionInactive: \"Transaction has already completed or failed\",\n  MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n  this._e = getErrorWithStack();\n  this.name = name;\n  this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n  stack: {\n    get: function () {\n      return this._stack || (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n    }\n  },\n  toString: function () {\n    return this.name + \": \" + this.message;\n  }\n});\nfunction getMultiErrorMessage(msg, failures) {\n  return msg + \". Errors: \" + Object.keys(failures).map(key => failures[key].toString()).filter((v, i, s) => s.indexOf(v) === i).join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n  this._e = getErrorWithStack();\n  this.failures = failures;\n  this.failedKeys = failedKeys;\n  this.successCount = successCount;\n  this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n  this._e = getErrorWithStack();\n  this.name = \"BulkError\";\n  this.failures = Object.keys(failures).map(pos => failures[pos]);\n  this.failuresByPos = failures;\n  this.message = getMultiErrorMessage(msg, failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n  var fullName = name + \"Error\";\n  function DexieError(msgOrInner, inner) {\n    this._e = getErrorWithStack();\n    this.name = fullName;\n    if (!msgOrInner) {\n      this.message = defaultTexts[name] || fullName;\n      this.inner = null;\n    } else if (typeof msgOrInner === 'string') {\n      this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n      this.inner = inner || null;\n    } else if (typeof msgOrInner === 'object') {\n      this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n      this.inner = msgOrInner;\n    }\n  }\n  derive(DexieError).from(BaseException);\n  obj[name] = DexieError;\n  return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n  obj[name + \"Error\"] = exceptions[name];\n  return obj;\n}, {});\nfunction mapError(domError, message) {\n  if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name]) return domError;\n  var rv = new exceptionMap[domError.name](message || domError.message, domError);\n  if (\"stack\" in domError) {\n    setProp(rv, \"stack\", {\n      get: function () {\n        return this.inner.stack;\n      }\n    });\n  }\n  return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n  if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1) obj[name + \"Error\"] = exceptions[name];\n  return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\nfunction nop() {}\nfunction mirror(val) {\n  return val;\n}\nfunction pureFunctionChain(f1, f2) {\n  if (f1 == null || f1 === mirror) return f2;\n  return function (val) {\n    return f2(f1(val));\n  };\n}\nfunction callBoth(on1, on2) {\n  return function () {\n    on1.apply(this, arguments);\n    on2.apply(this, arguments);\n  };\n}\nfunction hookCreatingChain(f1, f2) {\n  if (f1 === nop) return f2;\n  return function () {\n    var res = f1.apply(this, arguments);\n    if (res !== undefined) arguments[0] = res;\n    var onsuccess = this.onsuccess,\n      onerror = this.onerror;\n    this.onsuccess = null;\n    this.onerror = null;\n    var res2 = f2.apply(this, arguments);\n    if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n    if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    return res2 !== undefined ? res2 : res;\n  };\n}\nfunction hookDeletingChain(f1, f2) {\n  if (f1 === nop) return f2;\n  return function () {\n    f1.apply(this, arguments);\n    var onsuccess = this.onsuccess,\n      onerror = this.onerror;\n    this.onsuccess = this.onerror = null;\n    f2.apply(this, arguments);\n    if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n    if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n  };\n}\nfunction hookUpdatingChain(f1, f2) {\n  if (f1 === nop) return f2;\n  return function (modifications) {\n    var res = f1.apply(this, arguments);\n    extend(modifications, res);\n    var onsuccess = this.onsuccess,\n      onerror = this.onerror;\n    this.onsuccess = null;\n    this.onerror = null;\n    var res2 = f2.apply(this, arguments);\n    if (onsuccess) this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n    if (onerror) this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    return res === undefined ? res2 === undefined ? undefined : res2 : extend(res, res2);\n  };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n  if (f1 === nop) return f2;\n  return function () {\n    if (f2.apply(this, arguments) === false) return false;\n    return f1.apply(this, arguments);\n  };\n}\nfunction promisableChain(f1, f2) {\n  if (f1 === nop) return f2;\n  return function () {\n    var res = f1.apply(this, arguments);\n    if (res && typeof res.then === 'function') {\n      var thiz = this,\n        i = arguments.length,\n        args = new Array(i);\n      while (i--) args[i] = arguments[i];\n      return res.then(function () {\n        return f2.apply(thiz, args);\n      });\n    }\n    return f2.apply(this, arguments);\n  };\n}\nvar INTERNAL = {};\nconst LONG_STACKS_CLIP_LIMIT = 100,\n  MAX_LONG_STACKS = 20,\n  ZONE_ECHO_LIMIT = 100,\n  [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ? [] : (() => {\n    let globalP = Promise.resolve();\n    if (typeof crypto === 'undefined' || !crypto.subtle) return [globalP, getProto(globalP), globalP];\n    const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n    return [nativeP, getProto(nativeP), globalP];\n  })(),\n  nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nvar stack_being_generated = false;\nvar schedulePhysicalTick = resolvedGlobalPromise ? () => {\n  resolvedGlobalPromise.then(physicalTick);\n} : _global.setImmediate ? setImmediate.bind(null, physicalTick) : _global.MutationObserver ? () => {\n  var hiddenDiv = document.createElement(\"div\");\n  new MutationObserver(() => {\n    physicalTick();\n    hiddenDiv = null;\n  }).observe(hiddenDiv, {\n    attributes: true\n  });\n  hiddenDiv.setAttribute('i', '1');\n} : () => {\n  setTimeout(physicalTick, 0);\n};\nvar asap = function (callback, args) {\n  microtickQueue.push([callback, args]);\n  if (needsNewPhysicalTick) {\n    schedulePhysicalTick();\n    needsNewPhysicalTick = false;\n  }\n};\nvar isOutsideMicroTick = true,\n  needsNewPhysicalTick = true,\n  unhandledErrors = [],\n  rejectingErrors = [],\n  currentFulfiller = null,\n  rejectionMapper = mirror;\nvar globalPSD = {\n  id: 'global',\n  global: true,\n  ref: 0,\n  unhandleds: [],\n  onunhandled: globalError,\n  pgp: false,\n  env: {},\n  finalize: function () {\n    this.unhandleds.forEach(uh => {\n      try {\n        globalError(uh[0], uh[1]);\n      } catch (e) {}\n    });\n  }\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n  if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n  this._listeners = [];\n  this.onuncatched = nop;\n  this._lib = false;\n  var psd = this._PSD = PSD;\n  if (debug) {\n    this._stackHolder = getErrorWithStack();\n    this._prev = null;\n    this._numPrev = 0;\n  }\n  if (typeof fn !== 'function') {\n    if (fn !== INTERNAL) throw new TypeError('Not a function');\n    this._state = arguments[1];\n    this._value = arguments[2];\n    if (this._state === false) handleRejection(this, this._value);\n    return;\n  }\n  this._state = null;\n  this._value = null;\n  ++psd.ref;\n  executePromiseTask(this, fn);\n}\nconst thenProp = {\n  get: function () {\n    var psd = PSD,\n      microTaskId = totalEchoes;\n    function then(onFulfilled, onRejected) {\n      var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n      const cleanup = possibleAwait && !decrementExpectedAwaits();\n      var rv = new DexiePromise((resolve, reject) => {\n        propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n      });\n      debug && linkToPreviousPromise(rv, this);\n      return rv;\n    }\n    then.prototype = INTERNAL;\n    return then;\n  },\n  set: function (value) {\n    setProp(this, 'then', value && value.prototype === INTERNAL ? thenProp : {\n      get: function () {\n        return value;\n      },\n      set: thenProp.set\n    });\n  }\n};\nprops(DexiePromise.prototype, {\n  then: thenProp,\n  _then: function (onFulfilled, onRejected) {\n    propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n  },\n  catch: function (onRejected) {\n    if (arguments.length === 1) return this.then(null, onRejected);\n    var type = arguments[0],\n      handler = arguments[1];\n    return typeof type === 'function' ? this.then(null, err => err instanceof type ? handler(err) : PromiseReject(err)) : this.then(null, err => err && err.name === type ? handler(err) : PromiseReject(err));\n  },\n  finally: function (onFinally) {\n    return this.then(value => {\n      onFinally();\n      return value;\n    }, err => {\n      onFinally();\n      return PromiseReject(err);\n    });\n  },\n  stack: {\n    get: function () {\n      if (this._stack) return this._stack;\n      try {\n        stack_being_generated = true;\n        var stacks = getStack(this, [], MAX_LONG_STACKS);\n        var stack = stacks.join(\"\\nFrom previous: \");\n        if (this._state !== null) this._stack = stack;\n        return stack;\n      } finally {\n        stack_being_generated = false;\n      }\n    }\n  },\n  timeout: function (ms, msg) {\n    return ms < Infinity ? new DexiePromise((resolve, reject) => {\n      var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n      this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n    }) : this;\n  }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag) setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.resolve = resolve;\n  this.reject = reject;\n  this.psd = zone;\n}\nprops(DexiePromise, {\n  all: function () {\n    var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n    return new DexiePromise(function (resolve, reject) {\n      if (values.length === 0) resolve([]);\n      var remaining = values.length;\n      values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n        values[i] = x;\n        if (! --remaining) resolve(values);\n      }, reject));\n    });\n  },\n  resolve: value => {\n    if (value instanceof DexiePromise) return value;\n    if (value && typeof value.then === 'function') return new DexiePromise((resolve, reject) => {\n      value.then(resolve, reject);\n    });\n    var rv = new DexiePromise(INTERNAL, true, value);\n    linkToPreviousPromise(rv, currentFulfiller);\n    return rv;\n  },\n  reject: PromiseReject,\n  race: function () {\n    var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n    return new DexiePromise((resolve, reject) => {\n      values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n    });\n  },\n  PSD: {\n    get: () => PSD,\n    set: value => PSD = value\n  },\n  totalEchoes: {\n    get: () => totalEchoes\n  },\n  newPSD: newScope,\n  usePSD: usePSD,\n  scheduler: {\n    get: () => asap,\n    set: value => {\n      asap = value;\n    }\n  },\n  rejectionMapper: {\n    get: () => rejectionMapper,\n    set: value => {\n      rejectionMapper = value;\n    }\n  },\n  follow: (fn, zoneProps) => {\n    return new DexiePromise((resolve, reject) => {\n      return newScope((resolve, reject) => {\n        var psd = PSD;\n        psd.unhandleds = [];\n        psd.onunhandled = reject;\n        psd.finalize = callBoth(function () {\n          run_at_end_of_this_or_next_physical_tick(() => {\n            this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n          });\n        }, psd.finalize);\n        fn();\n      }, zoneProps, resolve, reject);\n    });\n  }\n});\nif (NativePromise) {\n  if (NativePromise.allSettled) setProp(DexiePromise, \"allSettled\", function () {\n    const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n    return new DexiePromise(resolve => {\n      if (possiblePromises.length === 0) resolve([]);\n      let remaining = possiblePromises.length;\n      const results = new Array(remaining);\n      possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = {\n        status: \"fulfilled\",\n        value\n      }, reason => results[i] = {\n        status: \"rejected\",\n        reason\n      }).then(() => --remaining || resolve(results)));\n    });\n  });\n  if (NativePromise.any && typeof AggregateError !== 'undefined') setProp(DexiePromise, \"any\", function () {\n    const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n    return new DexiePromise((resolve, reject) => {\n      if (possiblePromises.length === 0) reject(new AggregateError([]));\n      let remaining = possiblePromises.length;\n      const failures = new Array(remaining);\n      possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n        failures[i] = failure;\n        if (! --remaining) reject(new AggregateError(failures));\n      }));\n    });\n  });\n}\nfunction executePromiseTask(promise, fn) {\n  try {\n    fn(value => {\n      if (promise._state !== null) return;\n      if (value === promise) throw new TypeError('A promise cannot be resolved with itself.');\n      var shouldExecuteTick = promise._lib && beginMicroTickScope();\n      if (value && typeof value.then === 'function') {\n        executePromiseTask(promise, (resolve, reject) => {\n          value instanceof DexiePromise ? value._then(resolve, reject) : value.then(resolve, reject);\n        });\n      } else {\n        promise._state = true;\n        promise._value = value;\n        propagateAllListeners(promise);\n      }\n      if (shouldExecuteTick) endMicroTickScope();\n    }, handleRejection.bind(null, promise));\n  } catch (ex) {\n    handleRejection(promise, ex);\n  }\n}\nfunction handleRejection(promise, reason) {\n  rejectingErrors.push(reason);\n  if (promise._state !== null) return;\n  var shouldExecuteTick = promise._lib && beginMicroTickScope();\n  reason = rejectionMapper(reason);\n  promise._state = false;\n  promise._value = reason;\n  debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(() => {\n    var origProp = getPropertyDescriptor(reason, \"stack\");\n    reason._promise = promise;\n    setProp(reason, \"stack\", {\n      get: () => stack_being_generated ? origProp && (origProp.get ? origProp.get.apply(reason) : origProp.value) : promise.stack\n    });\n  });\n  addPossiblyUnhandledError(promise);\n  propagateAllListeners(promise);\n  if (shouldExecuteTick) endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n  var listeners = promise._listeners;\n  promise._listeners = [];\n  for (var i = 0, len = listeners.length; i < len; ++i) {\n    propagateToListener(promise, listeners[i]);\n  }\n  var psd = promise._PSD;\n  --psd.ref || psd.finalize();\n  if (numScheduledCalls === 0) {\n    ++numScheduledCalls;\n    asap(() => {\n      if (--numScheduledCalls === 0) finalizePhysicalTick();\n    }, []);\n  }\n}\nfunction propagateToListener(promise, listener) {\n  if (promise._state === null) {\n    promise._listeners.push(listener);\n    return;\n  }\n  var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n  if (cb === null) {\n    return (promise._state ? listener.resolve : listener.reject)(promise._value);\n  }\n  ++listener.psd.ref;\n  ++numScheduledCalls;\n  asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n  try {\n    currentFulfiller = promise;\n    var ret,\n      value = promise._value;\n    if (promise._state) {\n      ret = cb(value);\n    } else {\n      if (rejectingErrors.length) rejectingErrors = [];\n      ret = cb(value);\n      if (rejectingErrors.indexOf(value) === -1) markErrorAsHandled(promise);\n    }\n    listener.resolve(ret);\n  } catch (e) {\n    listener.reject(e);\n  } finally {\n    currentFulfiller = null;\n    if (--numScheduledCalls === 0) finalizePhysicalTick();\n    --listener.psd.ref || listener.psd.finalize();\n  }\n}\nfunction getStack(promise, stacks, limit) {\n  if (stacks.length === limit) return stacks;\n  var stack = \"\";\n  if (promise._state === false) {\n    var failure = promise._value,\n      errorName,\n      message;\n    if (failure != null) {\n      errorName = failure.name || \"Error\";\n      message = failure.message || failure;\n      stack = prettyStack(failure, 0);\n    } else {\n      errorName = failure;\n      message = \"\";\n    }\n    stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n  }\n  if (debug) {\n    stack = prettyStack(promise._stackHolder, 2);\n    if (stack && stacks.indexOf(stack) === -1) stacks.push(stack);\n    if (promise._prev) getStack(promise._prev, stacks, limit);\n  }\n  return stacks;\n}\nfunction linkToPreviousPromise(promise, prev) {\n  var numPrev = prev ? prev._numPrev + 1 : 0;\n  if (numPrev < LONG_STACKS_CLIP_LIMIT) {\n    promise._prev = prev;\n    promise._numPrev = numPrev;\n  }\n}\nfunction physicalTick() {\n  beginMicroTickScope() && endMicroTickScope();\n}\nfunction beginMicroTickScope() {\n  var wasRootExec = isOutsideMicroTick;\n  isOutsideMicroTick = false;\n  needsNewPhysicalTick = false;\n  return wasRootExec;\n}\nfunction endMicroTickScope() {\n  var callbacks, i, l;\n  do {\n    while (microtickQueue.length > 0) {\n      callbacks = microtickQueue;\n      microtickQueue = [];\n      l = callbacks.length;\n      for (i = 0; i < l; ++i) {\n        var item = callbacks[i];\n        item[0].apply(null, item[1]);\n      }\n    }\n  } while (microtickQueue.length > 0);\n  isOutsideMicroTick = true;\n  needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n  var unhandledErrs = unhandledErrors;\n  unhandledErrors = [];\n  unhandledErrs.forEach(p => {\n    p._PSD.onunhandled.call(null, p._value, p);\n  });\n  var finalizers = tickFinalizers.slice(0);\n  var i = finalizers.length;\n  while (i) finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n  function finalizer() {\n    fn();\n    tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n  }\n  tickFinalizers.push(finalizer);\n  ++numScheduledCalls;\n  asap(() => {\n    if (--numScheduledCalls === 0) finalizePhysicalTick();\n  }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n  if (!unhandledErrors.some(p => p._value === promise._value)) unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n  var i = unhandledErrors.length;\n  while (i) if (unhandledErrors[--i]._value === promise._value) {\n    unhandledErrors.splice(i, 1);\n    return;\n  }\n}\nfunction PromiseReject(reason) {\n  return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n  var psd = PSD;\n  return function () {\n    var wasRootExec = beginMicroTickScope(),\n      outerScope = PSD;\n    try {\n      switchToZone(psd, true);\n      return fn.apply(this, arguments);\n    } catch (e) {\n      errorCatcher && errorCatcher(e);\n    } finally {\n      switchToZone(outerScope, false);\n      if (wasRootExec) endMicroTickScope();\n    }\n  };\n}\nconst task = {\n  awaits: 0,\n  echoes: 0,\n  id: 0\n};\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n  var parent = PSD,\n    psd = Object.create(parent);\n  psd.parent = parent;\n  psd.ref = 0;\n  psd.global = false;\n  psd.id = ++zone_id_counter;\n  var globalEnv = globalPSD.env;\n  psd.env = patchGlobalPromise ? {\n    Promise: DexiePromise,\n    PromiseProp: {\n      value: DexiePromise,\n      configurable: true,\n      writable: true\n    },\n    all: DexiePromise.all,\n    race: DexiePromise.race,\n    allSettled: DexiePromise.allSettled,\n    any: DexiePromise.any,\n    resolve: DexiePromise.resolve,\n    reject: DexiePromise.reject,\n    nthen: getPatchedPromiseThen(globalEnv.nthen, psd),\n    gthen: getPatchedPromiseThen(globalEnv.gthen, psd)\n  } : {};\n  if (props) extend(psd, props);\n  ++parent.ref;\n  psd.finalize = function () {\n    --this.parent.ref || this.parent.finalize();\n  };\n  var rv = usePSD(psd, fn, a1, a2);\n  if (psd.ref === 0) psd.finalize();\n  return rv;\n}\nfunction incrementExpectedAwaits() {\n  if (!task.id) task.id = ++taskCounter;\n  ++task.awaits;\n  task.echoes += ZONE_ECHO_LIMIT;\n  return task.id;\n}\nfunction decrementExpectedAwaits() {\n  if (!task.awaits) return false;\n  if (--task.awaits === 0) task.id = 0;\n  task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n  return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n  incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n  if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n    incrementExpectedAwaits();\n    return possiblePromise.then(x => {\n      decrementExpectedAwaits();\n      return x;\n    }, e => {\n      decrementExpectedAwaits();\n      return rejection(e);\n    });\n  }\n  return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n  ++totalEchoes;\n  if (!task.echoes || --task.echoes === 0) {\n    task.echoes = task.id = 0;\n  }\n  zoneStack.push(PSD);\n  switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n  var zone = zoneStack[zoneStack.length - 1];\n  zoneStack.pop();\n  switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n  var currentZone = PSD;\n  if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (! --zoneEchoes || targetZone !== PSD)) {\n    enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n  }\n  if (targetZone === PSD) return;\n  PSD = targetZone;\n  if (currentZone === globalPSD) globalPSD.env = snapShot();\n  if (patchGlobalPromise) {\n    var GlobalPromise = globalPSD.env.Promise;\n    var targetEnv = targetZone.env;\n    nativePromiseProto.then = targetEnv.nthen;\n    GlobalPromise.prototype.then = targetEnv.gthen;\n    if (currentZone.global || targetZone.global) {\n      Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n      GlobalPromise.all = targetEnv.all;\n      GlobalPromise.race = targetEnv.race;\n      GlobalPromise.resolve = targetEnv.resolve;\n      GlobalPromise.reject = targetEnv.reject;\n      if (targetEnv.allSettled) GlobalPromise.allSettled = targetEnv.allSettled;\n      if (targetEnv.any) GlobalPromise.any = targetEnv.any;\n    }\n  }\n}\nfunction snapShot() {\n  var GlobalPromise = _global.Promise;\n  return patchGlobalPromise ? {\n    Promise: GlobalPromise,\n    PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n    all: GlobalPromise.all,\n    race: GlobalPromise.race,\n    allSettled: GlobalPromise.allSettled,\n    any: GlobalPromise.any,\n    resolve: GlobalPromise.resolve,\n    reject: GlobalPromise.reject,\n    nthen: nativePromiseProto.then,\n    gthen: GlobalPromise.prototype.then\n  } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n  var outerScope = PSD;\n  try {\n    switchToZone(psd, true);\n    return fn(a1, a2, a3);\n  } finally {\n    switchToZone(outerScope, false);\n  }\n}\nfunction enqueueNativeMicroTask(job) {\n  nativePromiseThen.call(resolvedNativePromise, job);\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n  return typeof fn !== 'function' ? fn : function () {\n    var outerZone = PSD;\n    if (possibleAwait) incrementExpectedAwaits();\n    switchToZone(zone, true);\n    try {\n      return fn.apply(this, arguments);\n    } finally {\n      switchToZone(outerZone, false);\n      if (cleanup) enqueueNativeMicroTask(decrementExpectedAwaits);\n    }\n  };\n}\nfunction getPatchedPromiseThen(origThen, zone) {\n  return function (onResolved, onRejected) {\n    return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone), nativeAwaitCompatibleWrap(onRejected, zone));\n  };\n}\nconst UNHANDLEDREJECTION = \"unhandledrejection\";\nfunction globalError(err, promise) {\n  var rv;\n  try {\n    rv = promise.onuncatched(err);\n  } catch (e) {}\n  if (rv !== false) try {\n    var event,\n      eventData = {\n        promise: promise,\n        reason: err\n      };\n    if (_global.document && document.createEvent) {\n      event = document.createEvent('Event');\n      event.initEvent(UNHANDLEDREJECTION, true, true);\n      extend(event, eventData);\n    } else if (_global.CustomEvent) {\n      event = new CustomEvent(UNHANDLEDREJECTION, {\n        detail: eventData\n      });\n      extend(event, eventData);\n    }\n    if (event && _global.dispatchEvent) {\n      dispatchEvent(event);\n      if (!_global.PromiseRejectionEvent && _global.onunhandledrejection) try {\n        _global.onunhandledrejection(event);\n      } catch (_) {}\n    }\n    if (debug && event && !event.defaultPrevented) {\n      console.warn(`Unhandled rejection: ${err.stack || err}`);\n    }\n  } catch (e) {}\n}\nvar rejection = DexiePromise.reject;\nfunction tempTransaction(db, mode, storeNames, fn) {\n  if (!db.idbdb || !db._state.openComplete && !PSD.letThrough && !db._vip) {\n    if (db._state.openComplete) {\n      return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n    }\n    if (!db._state.isBeingOpened) {\n      if (!db._options.autoOpen) return rejection(new exceptions.DatabaseClosed());\n      db.open().catch(nop);\n    }\n    return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n  } else {\n    var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n    try {\n      trans.create();\n      db._state.PR1398_maxLoop = 3;\n    } catch (ex) {\n      if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n        console.warn('Dexie: Need to reopen db');\n        db._close();\n        return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n      }\n      return rejection(ex);\n    }\n    return trans._promise(mode, (resolve, reject) => {\n      return newScope(() => {\n        PSD.trans = trans;\n        return fn(resolve, reject, trans);\n      });\n    }).then(result => {\n      return trans._completion.then(() => result);\n    });\n  }\n}\nconst DEXIE_VERSION = '4.0.0-alpha.4';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nconst hasIEDeleteObjectStoreBug = isIEOrEdge;\nconst hangsOnDeleteLargeKeyRange = isIEOrEdge;\nconst dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\nfunction combine(filter1, filter2) {\n  return filter1 ? filter2 ? function () {\n    return filter1.apply(this, arguments) && filter2.apply(this, arguments);\n  } : filter1 : filter2;\n}\nconst AnyRange = {\n  type: 3,\n  lower: -Infinity,\n  lowerOpen: false,\n  upper: [[]],\n  upperOpen: false\n};\nfunction workaroundForUndefinedPrimKey(keyPath) {\n  return typeof keyPath === \"string\" && !/\\./.test(keyPath) ? obj => {\n    if (obj[keyPath] === undefined && keyPath in obj) {\n      obj = deepClone(obj);\n      delete obj[keyPath];\n    }\n    return obj;\n  } : obj => obj;\n}\nfunction Entity() {\n  throw exceptions.Type();\n}\nclass Table {\n  _trans(mode, fn, writeLocked) {\n    const trans = this._tx || PSD.trans;\n    const tableName = this.name;\n    function checkTableInTransaction(resolve, reject, trans) {\n      if (!trans.schema[tableName]) throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n      return fn(trans.idbtrans, trans);\n    }\n    const wasRootExec = beginMicroTickScope();\n    try {\n      return trans && trans.db === this.db ? trans === PSD.trans ? trans._promise(mode, checkTableInTransaction, writeLocked) : newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), {\n        trans: trans,\n        transless: PSD.transless || PSD\n      }) : tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n    } finally {\n      if (wasRootExec) endMicroTickScope();\n    }\n  }\n  get(keyOrCrit, cb) {\n    if (keyOrCrit && keyOrCrit.constructor === Object) return this.where(keyOrCrit).first(cb);\n    return this._trans('readonly', trans => {\n      return this.core.get({\n        trans,\n        key: keyOrCrit\n      }).then(res => this.hook.reading.fire(res));\n    }).then(cb);\n  }\n  where(indexOrCrit) {\n    if (typeof indexOrCrit === 'string') return new this.db.WhereClause(this, indexOrCrit);\n    if (isArray(indexOrCrit)) return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n    const keyPaths = keys(indexOrCrit);\n    if (keyPaths.length === 1) return this.where(keyPaths[0]).equals(indexOrCrit[keyPaths[0]]);\n    const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => ix.compound && keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0) && ix.keyPath.every(keyPath => keyPaths.indexOf(keyPath) >= 0))[0];\n    if (compoundIndex && this.db._maxKey !== maxString) return this.where(compoundIndex.name).equals(compoundIndex.keyPath.map(kp => indexOrCrit[kp]));\n    if (!compoundIndex && debug) console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` + `compound index [${keyPaths.join('+')}]`);\n    const {\n      idxByName\n    } = this.schema;\n    const idb = this.db._deps.indexedDB;\n    function equals(a, b) {\n      try {\n        return idb.cmp(a, b) === 0;\n      } catch (e) {\n        return false;\n      }\n    }\n    const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n      const index = idxByName[keyPath];\n      const value = indexOrCrit[keyPath];\n      return [prevIndex || index, prevIndex || !index ? combine(prevFilterFn, index && index.multi ? x => {\n        const prop = getByKeyPath(x, keyPath);\n        return isArray(prop) && prop.some(item => equals(value, item));\n      } : x => equals(value, getByKeyPath(x, keyPath))) : prevFilterFn];\n    }, [null, null]);\n    return idx ? this.where(idx.name).equals(indexOrCrit[idx.keyPath]).filter(filterFunction) : compoundIndex ? this.filter(filterFunction) : this.where(keyPaths).equals('');\n  }\n  filter(filterFunction) {\n    return this.toCollection().and(filterFunction);\n  }\n  count(thenShortcut) {\n    return this.toCollection().count(thenShortcut);\n  }\n  offset(offset) {\n    return this.toCollection().offset(offset);\n  }\n  limit(numRows) {\n    return this.toCollection().limit(numRows);\n  }\n  each(callback) {\n    return this.toCollection().each(callback);\n  }\n  toArray(thenShortcut) {\n    return this.toCollection().toArray(thenShortcut);\n  }\n  toCollection() {\n    return new this.db.Collection(new this.db.WhereClause(this));\n  }\n  orderBy(index) {\n    return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ? `[${index.join('+')}]` : index));\n  }\n  reverse() {\n    return this.toCollection().reverse();\n  }\n  mapToClass(constructor) {\n    const {\n      db,\n      name: tableName\n    } = this;\n    this.schema.mappedClass = constructor;\n    if (constructor.prototype instanceof Entity) {\n      constructor = class extends constructor {\n        get db() {\n          return db;\n        }\n        table() {\n          return tableName;\n        }\n      };\n    }\n    const inheritedProps = new Set();\n    for (let proto = constructor.prototype; proto; proto = getProto(proto)) {\n      Object.getOwnPropertyNames(proto).forEach(propName => inheritedProps.add(propName));\n    }\n    const readHook = obj => {\n      if (!obj) return obj;\n      const res = Object.create(constructor.prototype);\n      for (let m in obj) if (!inheritedProps.has(m)) try {\n        res[m] = obj[m];\n      } catch (_) {}\n      return res;\n    };\n    if (this.schema.readHook) {\n      this.hook.reading.unsubscribe(this.schema.readHook);\n    }\n    this.schema.readHook = readHook;\n    this.hook(\"reading\", readHook);\n    return constructor;\n  }\n  defineClass() {\n    function Class(content) {\n      extend(this, content);\n    }\n    return this.mapToClass(Class);\n  }\n  add(obj, key) {\n    const {\n      auto,\n      keyPath\n    } = this.schema.primKey;\n    let objToAdd = obj;\n    if (keyPath && auto) {\n      objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n    }\n    return this._trans('readwrite', trans => {\n      return this.core.mutate({\n        trans,\n        type: 'add',\n        keys: key != null ? [key] : null,\n        values: [objToAdd]\n      });\n    }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult).then(lastResult => {\n      if (keyPath) {\n        try {\n          setByKeyPath(obj, keyPath, lastResult);\n        } catch (_) {}\n      }\n      return lastResult;\n    });\n  }\n  update(keyOrObject, modifications) {\n    if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n      const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n      if (key === undefined) return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n      try {\n        if (typeof modifications !== \"function\") {\n          keys(modifications).forEach(keyPath => {\n            setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n          });\n        } else {\n          modifications(keyOrObject, {\n            value: keyOrObject,\n            primKey: key\n          });\n        }\n      } catch (_a) {}\n      return this.where(\":id\").equals(key).modify(modifications);\n    } else {\n      return this.where(\":id\").equals(keyOrObject).modify(modifications);\n    }\n  }\n  put(obj, key) {\n    const {\n      auto,\n      keyPath\n    } = this.schema.primKey;\n    let objToAdd = obj;\n    if (keyPath && auto) {\n      objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n    }\n    return this._trans('readwrite', trans => this.core.mutate({\n      trans,\n      type: 'put',\n      values: [objToAdd],\n      keys: key != null ? [key] : null\n    })).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult).then(lastResult => {\n      if (keyPath) {\n        try {\n          setByKeyPath(obj, keyPath, lastResult);\n        } catch (_) {}\n      }\n      return lastResult;\n    });\n  }\n  delete(key) {\n    return this._trans('readwrite', trans => this.core.mutate({\n      trans,\n      type: 'delete',\n      keys: [key]\n    })).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n  }\n  clear() {\n    return this._trans('readwrite', trans => this.core.mutate({\n      trans,\n      type: 'deleteRange',\n      range: AnyRange\n    })).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n  }\n  bulkGet(keys) {\n    return this._trans('readonly', trans => {\n      return this.core.getMany({\n        keys,\n        trans\n      }).then(result => result.map(res => this.hook.reading.fire(res)));\n    });\n  }\n  bulkAdd(objects, keysOrOptions, options) {\n    const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n    options = options || (keys ? undefined : keysOrOptions);\n    const wantResults = options ? options.allKeys : undefined;\n    return this._trans('readwrite', trans => {\n      const {\n        auto,\n        keyPath\n      } = this.schema.primKey;\n      if (keyPath && keys) throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n      if (keys && keys.length !== objects.length) throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n      const numObjects = objects.length;\n      let objectsToAdd = keyPath && auto ? objects.map(workaroundForUndefinedPrimKey(keyPath)) : objects;\n      return this.core.mutate({\n        trans,\n        type: 'add',\n        keys: keys,\n        values: objectsToAdd,\n        wantResults\n      }).then(({\n        numFailures,\n        results,\n        lastResult,\n        failures\n      }) => {\n        const result = wantResults ? results : lastResult;\n        if (numFailures === 0) return result;\n        throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n      });\n    });\n  }\n  bulkPut(objects, keysOrOptions, options) {\n    const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n    options = options || (keys ? undefined : keysOrOptions);\n    const wantResults = options ? options.allKeys : undefined;\n    return this._trans('readwrite', trans => {\n      const {\n        auto,\n        keyPath\n      } = this.schema.primKey;\n      if (keyPath && keys) throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n      if (keys && keys.length !== objects.length) throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n      const numObjects = objects.length;\n      let objectsToPut = keyPath && auto ? objects.map(workaroundForUndefinedPrimKey(keyPath)) : objects;\n      return this.core.mutate({\n        trans,\n        type: 'put',\n        keys: keys,\n        values: objectsToPut,\n        wantResults\n      }).then(({\n        numFailures,\n        results,\n        lastResult,\n        failures\n      }) => {\n        const result = wantResults ? results : lastResult;\n        if (numFailures === 0) return result;\n        throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n      });\n    });\n  }\n  bulkDelete(keys) {\n    const numKeys = keys.length;\n    return this._trans('readwrite', trans => {\n      return this.core.mutate({\n        trans,\n        type: 'delete',\n        keys: keys\n      });\n    }).then(({\n      numFailures,\n      lastResult,\n      failures\n    }) => {\n      if (numFailures === 0) return lastResult;\n      throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n    });\n  }\n}\nfunction Events(ctx) {\n  var evs = {};\n  var rv = function (eventName, subscriber) {\n    if (subscriber) {\n      var i = arguments.length,\n        args = new Array(i - 1);\n      while (--i) args[i - 1] = arguments[i];\n      evs[eventName].subscribe.apply(null, args);\n      return ctx;\n    } else if (typeof eventName === 'string') {\n      return evs[eventName];\n    }\n  };\n  rv.addEventType = add;\n  for (var i = 1, l = arguments.length; i < l; ++i) {\n    add(arguments[i]);\n  }\n  return rv;\n  function add(eventName, chainFunction, defaultFunction) {\n    if (typeof eventName === 'object') return addConfiguredEvents(eventName);\n    if (!chainFunction) chainFunction = reverseStoppableEventChain;\n    if (!defaultFunction) defaultFunction = nop;\n    var context = {\n      subscribers: [],\n      fire: defaultFunction,\n      subscribe: function (cb) {\n        if (context.subscribers.indexOf(cb) === -1) {\n          context.subscribers.push(cb);\n          context.fire = chainFunction(context.fire, cb);\n        }\n      },\n      unsubscribe: function (cb) {\n        context.subscribers = context.subscribers.filter(function (fn) {\n          return fn !== cb;\n        });\n        context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n      }\n    };\n    evs[eventName] = rv[eventName] = context;\n    return context;\n  }\n  function addConfiguredEvents(cfg) {\n    keys(cfg).forEach(function (eventName) {\n      var args = cfg[eventName];\n      if (isArray(args)) {\n        add(eventName, cfg[eventName][0], cfg[eventName][1]);\n      } else if (args === 'asap') {\n        var context = add(eventName, mirror, function fire() {\n          var i = arguments.length,\n            args = new Array(i);\n          while (i--) args[i] = arguments[i];\n          context.subscribers.forEach(function (fn) {\n            asap$1(function fireEvent() {\n              fn.apply(null, args);\n            });\n          });\n        });\n      } else throw new exceptions.InvalidArgument(\"Invalid event config\");\n    });\n  }\n}\nfunction makeClassConstructor(prototype, constructor) {\n  derive(constructor).from({\n    prototype\n  });\n  return constructor;\n}\nfunction createTableConstructor(db) {\n  return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n    this.db = db;\n    this._tx = trans;\n    this.name = name;\n    this.schema = tableSchema;\n    this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n      \"creating\": [hookCreatingChain, nop],\n      \"reading\": [pureFunctionChain, mirror],\n      \"updating\": [hookUpdatingChain, nop],\n      \"deleting\": [hookDeletingChain, nop]\n    });\n  });\n}\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n  return !(ctx.filter || ctx.algorithm || ctx.or) && (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n  ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n  var curr = ctx.replayFilter;\n  ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n  ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n  ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n  if (ctx.isPrimKey) return coreSchema.primaryKey;\n  const index = coreSchema.getIndexByKeyPath(ctx.index);\n  if (!index) throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n  return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n  const index = getIndexOrStore(ctx, coreTable.schema);\n  return coreTable.openCursor({\n    trans,\n    values: !ctx.keysOnly,\n    reverse: ctx.dir === 'prev',\n    unique: !!ctx.unique,\n    query: {\n      index,\n      range: ctx.range\n    }\n  });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n  const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n  if (!ctx.or) {\n    return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n  } else {\n    const set = {};\n    const union = (item, cursor, advance) => {\n      if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n        var primaryKey = cursor.primaryKey;\n        var key = '' + primaryKey;\n        if (key === '[object ArrayBuffer]') key = '' + new Uint8Array(primaryKey);\n        if (!hasOwn(set, key)) {\n          set[key] = true;\n          fn(item, cursor, advance);\n        }\n      }\n    };\n    return Promise.all([ctx.or._iterate(union, coreTrans), iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)]);\n  }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n  var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n  var wrappedFn = wrap(mappedFn);\n  return cursorPromise.then(cursor => {\n    if (cursor) {\n      return cursor.start(() => {\n        var c = () => cursor.continue();\n        if (!filter || filter(cursor, advancer => c = advancer, val => {\n          cursor.stop(val);\n          c = nop;\n        }, e => {\n          cursor.fail(e);\n          c = nop;\n        })) wrappedFn(cursor.value, cursor, advancer => c = advancer);\n        c();\n      });\n    }\n  });\n}\nfunction cmp(a, b) {\n  try {\n    const ta = type(a);\n    const tb = type(b);\n    if (ta !== tb) {\n      if (ta === 'Array') return 1;\n      if (tb === 'Array') return -1;\n      if (ta === 'binary') return 1;\n      if (tb === 'binary') return -1;\n      if (ta === 'string') return 1;\n      if (tb === 'string') return -1;\n      if (ta === 'Date') return 1;\n      if (tb !== 'Date') return NaN;\n      return -1;\n    }\n    switch (ta) {\n      case 'number':\n      case 'Date':\n      case 'string':\n        return a > b ? 1 : a < b ? -1 : 0;\n      case 'binary':\n        {\n          return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n        }\n      case 'Array':\n        return compareArrays(a, b);\n    }\n  } catch (_a) {}\n  return NaN;\n}\nfunction compareArrays(a, b) {\n  const al = a.length;\n  const bl = b.length;\n  const l = al < bl ? al : bl;\n  for (let i = 0; i < l; ++i) {\n    const res = cmp(a[i], b[i]);\n    if (res !== 0) return res;\n  }\n  return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n  const al = a.length;\n  const bl = b.length;\n  const l = al < bl ? al : bl;\n  for (let i = 0; i < l; ++i) {\n    if (a[i] !== b[i]) return a[i] < b[i] ? -1 : 1;\n  }\n  return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n  const t = typeof x;\n  if (t !== 'object') return t;\n  if (ArrayBuffer.isView(x)) return 'binary';\n  const tsTag = toStringTag(x);\n  return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n  if (a instanceof Uint8Array) return a;\n  if (ArrayBuffer.isView(a)) return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n  return new Uint8Array(a);\n}\nclass Collection {\n  _read(fn, cb) {\n    var ctx = this._ctx;\n    return ctx.error ? ctx.table._trans(null, rejection.bind(null, ctx.error)) : ctx.table._trans('readonly', fn).then(cb);\n  }\n  _write(fn) {\n    var ctx = this._ctx;\n    return ctx.error ? ctx.table._trans(null, rejection.bind(null, ctx.error)) : ctx.table._trans('readwrite', fn, \"locked\");\n  }\n  _addAlgorithm(fn) {\n    var ctx = this._ctx;\n    ctx.algorithm = combine(ctx.algorithm, fn);\n  }\n  _iterate(fn, coreTrans) {\n    return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n  }\n  clone(props) {\n    var rv = Object.create(this.constructor.prototype),\n      ctx = Object.create(this._ctx);\n    if (props) extend(ctx, props);\n    rv._ctx = ctx;\n    return rv;\n  }\n  raw() {\n    this._ctx.valueMapper = null;\n    return this;\n  }\n  each(fn) {\n    var ctx = this._ctx;\n    return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n  }\n  count(cb) {\n    return this._read(trans => {\n      const ctx = this._ctx;\n      const coreTable = ctx.table.core;\n      if (isPlainKeyRange(ctx, true)) {\n        return coreTable.count({\n          trans,\n          query: {\n            index: getIndexOrStore(ctx, coreTable.schema),\n            range: ctx.range\n          }\n        }).then(count => Math.min(count, ctx.limit));\n      } else {\n        var count = 0;\n        return iter(ctx, () => {\n          ++count;\n          return false;\n        }, trans, coreTable).then(() => count);\n      }\n    }).then(cb);\n  }\n  sortBy(keyPath, cb) {\n    const parts = keyPath.split('.').reverse(),\n      lastPart = parts[0],\n      lastIndex = parts.length - 1;\n    function getval(obj, i) {\n      if (i) return getval(obj[parts[i]], i - 1);\n      return obj[lastPart];\n    }\n    var order = this._ctx.dir === \"next\" ? 1 : -1;\n    function sorter(a, b) {\n      var aVal = getval(a, lastIndex),\n        bVal = getval(b, lastIndex);\n      return aVal < bVal ? -order : aVal > bVal ? order : 0;\n    }\n    return this.toArray(function (a) {\n      return a.sort(sorter);\n    }).then(cb);\n  }\n  toArray(cb) {\n    return this._read(trans => {\n      var ctx = this._ctx;\n      if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n        const {\n          valueMapper\n        } = ctx;\n        const index = getIndexOrStore(ctx, ctx.table.core.schema);\n        return ctx.table.core.query({\n          trans,\n          limit: ctx.limit,\n          values: true,\n          query: {\n            index,\n            range: ctx.range\n          }\n        }).then(({\n          result\n        }) => valueMapper ? result.map(valueMapper) : result);\n      } else {\n        const a = [];\n        return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n      }\n    }, cb);\n  }\n  offset(offset) {\n    var ctx = this._ctx;\n    if (offset <= 0) return this;\n    ctx.offset += offset;\n    if (isPlainKeyRange(ctx)) {\n      addReplayFilter(ctx, () => {\n        var offsetLeft = offset;\n        return (cursor, advance) => {\n          if (offsetLeft === 0) return true;\n          if (offsetLeft === 1) {\n            --offsetLeft;\n            return false;\n          }\n          advance(() => {\n            cursor.advance(offsetLeft);\n            offsetLeft = 0;\n          });\n          return false;\n        };\n      });\n    } else {\n      addReplayFilter(ctx, () => {\n        var offsetLeft = offset;\n        return () => --offsetLeft < 0;\n      });\n    }\n    return this;\n  }\n  limit(numRows) {\n    this._ctx.limit = Math.min(this._ctx.limit, numRows);\n    addReplayFilter(this._ctx, () => {\n      var rowsLeft = numRows;\n      return function (cursor, advance, resolve) {\n        if (--rowsLeft <= 0) advance(resolve);\n        return rowsLeft >= 0;\n      };\n    }, true);\n    return this;\n  }\n  until(filterFunction, bIncludeStopEntry) {\n    addFilter(this._ctx, function (cursor, advance, resolve) {\n      if (filterFunction(cursor.value)) {\n        advance(resolve);\n        return bIncludeStopEntry;\n      } else {\n        return true;\n      }\n    });\n    return this;\n  }\n  first(cb) {\n    return this.limit(1).toArray(function (a) {\n      return a[0];\n    }).then(cb);\n  }\n  last(cb) {\n    return this.reverse().first(cb);\n  }\n  filter(filterFunction) {\n    addFilter(this._ctx, function (cursor) {\n      return filterFunction(cursor.value);\n    });\n    addMatchFilter(this._ctx, filterFunction);\n    return this;\n  }\n  and(filter) {\n    return this.filter(filter);\n  }\n  or(indexName) {\n    return new this.db.WhereClause(this._ctx.table, indexName, this);\n  }\n  reverse() {\n    this._ctx.dir = this._ctx.dir === \"prev\" ? \"next\" : \"prev\";\n    if (this._ondirectionchange) this._ondirectionchange(this._ctx.dir);\n    return this;\n  }\n  desc() {\n    return this.reverse();\n  }\n  eachKey(cb) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    return this.each(function (val, cursor) {\n      cb(cursor.key, cursor);\n    });\n  }\n  eachUniqueKey(cb) {\n    this._ctx.unique = \"unique\";\n    return this.eachKey(cb);\n  }\n  eachPrimaryKey(cb) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    return this.each(function (val, cursor) {\n      cb(cursor.primaryKey, cursor);\n    });\n  }\n  keys(cb) {\n    var ctx = this._ctx;\n    ctx.keysOnly = !ctx.isMatch;\n    var a = [];\n    return this.each(function (item, cursor) {\n      a.push(cursor.key);\n    }).then(function () {\n      return a;\n    }).then(cb);\n  }\n  primaryKeys(cb) {\n    var ctx = this._ctx;\n    if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n      return this._read(trans => {\n        var index = getIndexOrStore(ctx, ctx.table.core.schema);\n        return ctx.table.core.query({\n          trans,\n          values: false,\n          limit: ctx.limit,\n          query: {\n            index,\n            range: ctx.range\n          }\n        });\n      }).then(({\n        result\n      }) => result).then(cb);\n    }\n    ctx.keysOnly = !ctx.isMatch;\n    var a = [];\n    return this.each(function (item, cursor) {\n      a.push(cursor.primaryKey);\n    }).then(function () {\n      return a;\n    }).then(cb);\n  }\n  uniqueKeys(cb) {\n    this._ctx.unique = \"unique\";\n    return this.keys(cb);\n  }\n  firstKey(cb) {\n    return this.limit(1).keys(function (a) {\n      return a[0];\n    }).then(cb);\n  }\n  lastKey(cb) {\n    return this.reverse().firstKey(cb);\n  }\n  distinct() {\n    var ctx = this._ctx,\n      idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n    if (!idx || !idx.multi) return this;\n    var set = {};\n    addFilter(this._ctx, function (cursor) {\n      var strKey = cursor.primaryKey.toString();\n      var found = hasOwn(set, strKey);\n      set[strKey] = true;\n      return !found;\n    });\n    return this;\n  }\n  modify(changes) {\n    var ctx = this._ctx;\n    return this._write(trans => {\n      var modifyer;\n      if (typeof changes === 'function') {\n        modifyer = changes;\n      } else {\n        var keyPaths = keys(changes);\n        var numKeys = keyPaths.length;\n        modifyer = function (item) {\n          var anythingModified = false;\n          for (var i = 0; i < numKeys; ++i) {\n            var keyPath = keyPaths[i],\n              val = changes[keyPath];\n            if (getByKeyPath(item, keyPath) !== val) {\n              setByKeyPath(item, keyPath, val);\n              anythingModified = true;\n            }\n          }\n          return anythingModified;\n        };\n      }\n      const coreTable = ctx.table.core;\n      const {\n        outbound,\n        extractKey\n      } = coreTable.schema.primaryKey;\n      const limit = this.db._options.modifyChunkSize || 200;\n      const totalFailures = [];\n      let successCount = 0;\n      const failedKeys = [];\n      const applyMutateResult = (expectedCount, res) => {\n        const {\n          failures,\n          numFailures\n        } = res;\n        successCount += expectedCount - numFailures;\n        for (let pos of keys(failures)) {\n          totalFailures.push(failures[pos]);\n        }\n      };\n      return this.clone().primaryKeys().then(keys => {\n        const nextChunk = offset => {\n          const count = Math.min(limit, keys.length - offset);\n          return coreTable.getMany({\n            trans,\n            keys: keys.slice(offset, offset + count),\n            cache: \"immutable\"\n          }).then(values => {\n            const addValues = [];\n            const putValues = [];\n            const putKeys = outbound ? [] : null;\n            const deleteKeys = [];\n            for (let i = 0; i < count; ++i) {\n              const origValue = values[i];\n              const ctx = {\n                value: deepClone(origValue),\n                primKey: keys[offset + i]\n              };\n              if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                if (ctx.value == null) {\n                  deleteKeys.push(keys[offset + i]);\n                } else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                  deleteKeys.push(keys[offset + i]);\n                  addValues.push(ctx.value);\n                } else {\n                  putValues.push(ctx.value);\n                  if (outbound) putKeys.push(keys[offset + i]);\n                }\n              }\n            }\n            const criteria = isPlainKeyRange(ctx) && ctx.limit === Infinity && (typeof changes !== 'function' || changes === deleteCallback) && {\n              index: ctx.index,\n              range: ctx.range\n            };\n            return Promise.resolve(addValues.length > 0 && coreTable.mutate({\n              trans,\n              type: 'add',\n              values: addValues\n            }).then(res => {\n              for (let pos in res.failures) {\n                deleteKeys.splice(parseInt(pos), 1);\n              }\n              applyMutateResult(addValues.length, res);\n            })).then(() => (putValues.length > 0 || criteria && typeof changes === 'object') && coreTable.mutate({\n              trans,\n              type: 'put',\n              keys: putKeys,\n              values: putValues,\n              criteria,\n              changeSpec: typeof changes !== 'function' && changes\n            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || criteria && changes === deleteCallback) && coreTable.mutate({\n              trans,\n              type: 'delete',\n              keys: deleteKeys,\n              criteria\n            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n              return keys.length > offset + count && nextChunk(offset + limit);\n            });\n          });\n        };\n        return nextChunk(0).then(() => {\n          if (totalFailures.length > 0) throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n          return keys.length;\n        });\n      });\n    });\n  }\n  delete() {\n    var ctx = this._ctx,\n      range = ctx.range;\n    if (isPlainKeyRange(ctx) && (ctx.isPrimKey && !hangsOnDeleteLargeKeyRange || range.type === 3)) {\n      return this._write(trans => {\n        const {\n          primaryKey\n        } = ctx.table.core.schema;\n        const coreRange = range;\n        return ctx.table.core.count({\n          trans,\n          query: {\n            index: primaryKey,\n            range: coreRange\n          }\n        }).then(count => {\n          return ctx.table.core.mutate({\n            trans,\n            type: 'deleteRange',\n            range: coreRange\n          }).then(({\n            failures,\n            lastResult,\n            results,\n            numFailures\n          }) => {\n            if (numFailures) throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n            return count - numFailures;\n          });\n        });\n      });\n    }\n    return this.modify(deleteCallback);\n  }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\nfunction createCollectionConstructor(db) {\n  return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n    this.db = db;\n    let keyRange = AnyRange,\n      error = null;\n    if (keyRangeGenerator) try {\n      keyRange = keyRangeGenerator();\n    } catch (ex) {\n      error = ex;\n    }\n    const whereCtx = whereClause._ctx;\n    const table = whereCtx.table;\n    const readingHook = table.hook.reading.fire;\n    this._ctx = {\n      table: table,\n      index: whereCtx.index,\n      isPrimKey: !whereCtx.index || table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name,\n      range: keyRange,\n      keysOnly: false,\n      dir: \"next\",\n      unique: \"\",\n      algorithm: null,\n      filter: null,\n      replayFilter: null,\n      justLimit: true,\n      isMatch: null,\n      offset: 0,\n      limit: Infinity,\n      error: error,\n      or: whereCtx.or,\n      valueMapper: readingHook !== mirror ? readingHook : null\n    };\n  });\n}\nfunction simpleCompare(a, b) {\n  return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n  return a > b ? -1 : a === b ? 0 : 1;\n}\nfunction fail(collectionOrWhereClause, err, T) {\n  var collection = collectionOrWhereClause instanceof WhereClause ? new collectionOrWhereClause.Collection(collectionOrWhereClause) : collectionOrWhereClause;\n  collection._ctx.error = T ? new T(err) : new TypeError(err);\n  return collection;\n}\nfunction emptyCollection(whereClause) {\n  return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n  return dir === \"next\" ? s => s.toUpperCase() : s => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n  return dir === \"next\" ? s => s.toLowerCase() : s => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n  var length = Math.min(key.length, lowerNeedle.length);\n  var llp = -1;\n  for (var i = 0; i < length; ++i) {\n    var lwrKeyChar = lowerKey[i];\n    if (lwrKeyChar !== lowerNeedle[i]) {\n      if (cmp(key[i], upperNeedle[i]) < 0) return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n      if (cmp(key[i], lowerNeedle[i]) < 0) return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n      if (llp >= 0) return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n      return null;\n    }\n    if (cmp(key[i], lwrKeyChar) < 0) llp = i;\n  }\n  if (length < lowerNeedle.length && dir === \"next\") return key + upperNeedle.substr(key.length);\n  if (length < key.length && dir === \"prev\") return key.substr(0, upperNeedle.length);\n  return llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1);\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n  var upper,\n    lower,\n    compare,\n    upperNeedles,\n    lowerNeedles,\n    direction,\n    nextKeySuffix,\n    needlesLen = needles.length;\n  if (!needles.every(s => typeof s === 'string')) {\n    return fail(whereClause, STRING_EXPECTED);\n  }\n  function initDirection(dir) {\n    upper = upperFactory(dir);\n    lower = lowerFactory(dir);\n    compare = dir === \"next\" ? simpleCompare : simpleCompareReverse;\n    var needleBounds = needles.map(function (needle) {\n      return {\n        lower: lower(needle),\n        upper: upper(needle)\n      };\n    }).sort(function (a, b) {\n      return compare(a.lower, b.lower);\n    });\n    upperNeedles = needleBounds.map(function (nb) {\n      return nb.upper;\n    });\n    lowerNeedles = needleBounds.map(function (nb) {\n      return nb.lower;\n    });\n    direction = dir;\n    nextKeySuffix = dir === \"next\" ? \"\" : suffix;\n  }\n  initDirection(\"next\");\n  var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n  c._ondirectionchange = function (direction) {\n    initDirection(direction);\n  };\n  var firstPossibleNeedle = 0;\n  c._addAlgorithm(function (cursor, advance, resolve) {\n    var key = cursor.key;\n    if (typeof key !== 'string') return false;\n    var lowerKey = lower(key);\n    if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n      return true;\n    } else {\n      var lowestPossibleCasing = null;\n      for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n        var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n        if (casing === null && lowestPossibleCasing === null) firstPossibleNeedle = i + 1;else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n          lowestPossibleCasing = casing;\n        }\n      }\n      if (lowestPossibleCasing !== null) {\n        advance(function () {\n          cursor.continue(lowestPossibleCasing + nextKeySuffix);\n        });\n      } else {\n        advance(resolve);\n      }\n      return false;\n    }\n  });\n  return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n  return {\n    type: 2,\n    lower,\n    upper,\n    lowerOpen,\n    upperOpen\n  };\n}\nfunction rangeEqual(value) {\n  return {\n    type: 1,\n    lower: value,\n    upper: value\n  };\n}\nclass WhereClause {\n  get Collection() {\n    return this._ctx.table.db.Collection;\n  }\n  between(lower, upper, includeLower, includeUpper) {\n    includeLower = includeLower !== false;\n    includeUpper = includeUpper === true;\n    try {\n      if (this._cmp(lower, upper) > 0 || this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)) return emptyCollection(this);\n      return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n    } catch (e) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n  }\n  equals(value) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => rangeEqual(value));\n  }\n  above(value) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(value, undefined, true));\n  }\n  aboveOrEqual(value) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(value, undefined, false));\n  }\n  below(value) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(undefined, value, false, true));\n  }\n  belowOrEqual(value) {\n    if (value == null) return fail(this, INVALID_KEY_ARGUMENT);\n    return new this.Collection(this, () => createRange(undefined, value));\n  }\n  startsWith(str) {\n    if (typeof str !== 'string') return fail(this, STRING_EXPECTED);\n    return this.between(str, str + maxString, true, true);\n  }\n  startsWithIgnoreCase(str) {\n    if (str === \"\") return this.startsWith(str);\n    return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n  }\n  equalsIgnoreCase(str) {\n    return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n  }\n  anyOfIgnoreCase() {\n    var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return emptyCollection(this);\n    return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n  }\n  startsWithAnyOfIgnoreCase() {\n    var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return emptyCollection(this);\n    return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n  }\n  anyOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    let compare = this._cmp;\n    try {\n      set.sort(compare);\n    } catch (e) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n    if (set.length === 0) return emptyCollection(this);\n    const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n    c._ondirectionchange = direction => {\n      compare = direction === \"next\" ? this._ascending : this._descending;\n      set.sort(compare);\n    };\n    let i = 0;\n    c._addAlgorithm((cursor, advance, resolve) => {\n      const key = cursor.key;\n      while (compare(key, set[i]) > 0) {\n        ++i;\n        if (i === set.length) {\n          advance(resolve);\n          return false;\n        }\n      }\n      if (compare(key, set[i]) === 0) {\n        return true;\n      } else {\n        advance(() => {\n          cursor.continue(set[i]);\n        });\n        return false;\n      }\n    });\n    return c;\n  }\n  notEqual(value) {\n    return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], {\n      includeLowers: false,\n      includeUppers: false\n    });\n  }\n  noneOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (set.length === 0) return new this.Collection(this);\n    try {\n      set.sort(this._ascending);\n    } catch (e) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n    const ranges = set.reduce((res, val) => res ? res.concat([[res[res.length - 1][1], val]]) : [[minKey, val]], null);\n    ranges.push([set[set.length - 1], this.db._maxKey]);\n    return this.inAnyRange(ranges, {\n      includeLowers: false,\n      includeUppers: false\n    });\n  }\n  inAnyRange(ranges, options) {\n    const cmp = this._cmp,\n      ascending = this._ascending,\n      descending = this._descending,\n      min = this._min,\n      max = this._max;\n    if (ranges.length === 0) return emptyCollection(this);\n    if (!ranges.every(range => range[0] !== undefined && range[1] !== undefined && ascending(range[0], range[1]) <= 0)) {\n      return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n    }\n    const includeLowers = !options || options.includeLowers !== false;\n    const includeUppers = options && options.includeUppers === true;\n    function addRange(ranges, newRange) {\n      let i = 0,\n        l = ranges.length;\n      for (; i < l; ++i) {\n        const range = ranges[i];\n        if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n          range[0] = min(range[0], newRange[0]);\n          range[1] = max(range[1], newRange[1]);\n          break;\n        }\n      }\n      if (i === l) ranges.push(newRange);\n      return ranges;\n    }\n    let sortDirection = ascending;\n    function rangeSorter(a, b) {\n      return sortDirection(a[0], b[0]);\n    }\n    let set;\n    try {\n      set = ranges.reduce(addRange, []);\n      set.sort(rangeSorter);\n    } catch (ex) {\n      return fail(this, INVALID_KEY_ARGUMENT);\n    }\n    let rangePos = 0;\n    const keyIsBeyondCurrentEntry = includeUppers ? key => ascending(key, set[rangePos][1]) > 0 : key => ascending(key, set[rangePos][1]) >= 0;\n    const keyIsBeforeCurrentEntry = includeLowers ? key => descending(key, set[rangePos][0]) > 0 : key => descending(key, set[rangePos][0]) >= 0;\n    function keyWithinCurrentRange(key) {\n      return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n    }\n    let checkKey = keyIsBeyondCurrentEntry;\n    const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n    c._ondirectionchange = direction => {\n      if (direction === \"next\") {\n        checkKey = keyIsBeyondCurrentEntry;\n        sortDirection = ascending;\n      } else {\n        checkKey = keyIsBeforeCurrentEntry;\n        sortDirection = descending;\n      }\n      set.sort(rangeSorter);\n    };\n    c._addAlgorithm((cursor, advance, resolve) => {\n      var key = cursor.key;\n      while (checkKey(key)) {\n        ++rangePos;\n        if (rangePos === set.length) {\n          advance(resolve);\n          return false;\n        }\n      }\n      if (keyWithinCurrentRange(key)) {\n        return true;\n      } else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n        return false;\n      } else {\n        advance(() => {\n          if (sortDirection === ascending) cursor.continue(set[rangePos][0]);else cursor.continue(set[rangePos][1]);\n        });\n        return false;\n      }\n    });\n    return c;\n  }\n  startsWithAnyOf() {\n    const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n    if (!set.every(s => typeof s === 'string')) {\n      return fail(this, \"startsWithAnyOf() only works with strings\");\n    }\n    if (set.length === 0) return emptyCollection(this);\n    return this.inAnyRange(set.map(str => [str, str + maxString]));\n  }\n}\nfunction createWhereClauseConstructor(db) {\n  return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n    this.db = db;\n    this._ctx = {\n      table: table,\n      index: index === \":id\" ? null : index,\n      or: orCollection\n    };\n    const indexedDB = db._deps.indexedDB;\n    if (!indexedDB) throw new exceptions.MissingAPI();\n    this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);\n    this._descending = (a, b) => indexedDB.cmp(b, a);\n    this._max = (a, b) => indexedDB.cmp(a, b) > 0 ? a : b;\n    this._min = (a, b) => indexedDB.cmp(a, b) < 0 ? a : b;\n    this._IDBKeyRange = db._deps.IDBKeyRange;\n  });\n}\nfunction eventRejectHandler(reject) {\n  return wrap(function (event) {\n    preventDefault(event);\n    reject(event.target.error);\n    return false;\n  });\n}\nfunction preventDefault(event) {\n  if (event.stopPropagation) event.stopPropagation();\n  if (event.preventDefault) event.preventDefault();\n}\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\nclass Transaction {\n  _lock() {\n    assert(!PSD.global);\n    ++this._reculock;\n    if (this._reculock === 1 && !PSD.global) PSD.lockOwnerFor = this;\n    return this;\n  }\n  _unlock() {\n    assert(!PSD.global);\n    if (--this._reculock === 0) {\n      if (!PSD.global) PSD.lockOwnerFor = null;\n      while (this._blockedFuncs.length > 0 && !this._locked()) {\n        var fnAndPSD = this._blockedFuncs.shift();\n        try {\n          usePSD(fnAndPSD[1], fnAndPSD[0]);\n        } catch (e) {}\n      }\n    }\n    return this;\n  }\n  _locked() {\n    return this._reculock && PSD.lockOwnerFor !== this;\n  }\n  create(idbtrans) {\n    if (!this.mode) return this;\n    const idbdb = this.db.idbdb;\n    const dbOpenError = this.db._state.dbOpenError;\n    assert(!this.idbtrans);\n    if (!idbtrans && !idbdb) {\n      switch (dbOpenError && dbOpenError.name) {\n        case \"DatabaseClosedError\":\n          throw new exceptions.DatabaseClosed(dbOpenError);\n        case \"MissingAPIError\":\n          throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n        default:\n          throw new exceptions.OpenFailed(dbOpenError);\n      }\n    }\n    if (!this.active) throw new exceptions.TransactionInactive();\n    assert(this._completion._state === null);\n    idbtrans = this.idbtrans = idbtrans || (this.db.core ? this.db.core.transaction(this.storeNames, this.mode, {\n      durability: this.chromeTransactionDurability\n    }) : idbdb.transaction(this.storeNames, this.mode, {\n      durability: this.chromeTransactionDurability\n    }));\n    idbtrans.onerror = wrap(ev => {\n      preventDefault(ev);\n      this._reject(idbtrans.error);\n    });\n    idbtrans.onabort = wrap(ev => {\n      preventDefault(ev);\n      this.active && this._reject(new exceptions.Abort(idbtrans.error));\n      this.active = false;\n      this.on(\"abort\").fire(ev);\n    });\n    idbtrans.oncomplete = wrap(() => {\n      this.active = false;\n      this._resolve();\n      if ('mutatedParts' in idbtrans) {\n        globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n      }\n    });\n    return this;\n  }\n  _promise(mode, fn, bWriteLock) {\n    if (mode === 'readwrite' && this.mode !== 'readwrite') return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n    if (!this.active) return rejection(new exceptions.TransactionInactive());\n    if (this._locked()) {\n      return new DexiePromise((resolve, reject) => {\n        this._blockedFuncs.push([() => {\n          this._promise(mode, fn, bWriteLock).then(resolve, reject);\n        }, PSD]);\n      });\n    } else if (bWriteLock) {\n      return newScope(() => {\n        var p = new DexiePromise((resolve, reject) => {\n          this._lock();\n          const rv = fn(resolve, reject, this);\n          if (rv && rv.then) rv.then(resolve, reject);\n        });\n        p.finally(() => this._unlock());\n        p._lib = true;\n        return p;\n      });\n    } else {\n      var p = new DexiePromise((resolve, reject) => {\n        var rv = fn(resolve, reject, this);\n        if (rv && rv.then) rv.then(resolve, reject);\n      });\n      p._lib = true;\n      return p;\n    }\n  }\n  _root() {\n    return this.parent ? this.parent._root() : this;\n  }\n  waitFor(promiseLike) {\n    var root = this._root();\n    const promise = DexiePromise.resolve(promiseLike);\n    if (root._waitingFor) {\n      root._waitingFor = root._waitingFor.then(() => promise);\n    } else {\n      root._waitingFor = promise;\n      root._waitingQueue = [];\n      var store = root.idbtrans.objectStore(root.storeNames[0]);\n      (function spin() {\n        ++root._spinCount;\n        while (root._waitingQueue.length) root._waitingQueue.shift()();\n        if (root._waitingFor) store.get(-Infinity).onsuccess = spin;\n      })();\n    }\n    var currentWaitPromise = root._waitingFor;\n    return new DexiePromise((resolve, reject) => {\n      promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n        if (root._waitingFor === currentWaitPromise) {\n          root._waitingFor = null;\n        }\n      });\n    });\n  }\n  abort() {\n    if (this.active) {\n      this.active = false;\n      if (this.idbtrans) this.idbtrans.abort();\n      this._reject(new exceptions.Abort());\n    }\n  }\n  table(tableName) {\n    const memoizedTables = this._memoizedTables || (this._memoizedTables = {});\n    if (hasOwn(memoizedTables, tableName)) return memoizedTables[tableName];\n    const tableSchema = this.schema[tableName];\n    if (!tableSchema) {\n      throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n    }\n    const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n    transactionBoundTable.core = this.db.core.table(tableName);\n    memoizedTables[tableName] = transactionBoundTable;\n    return transactionBoundTable;\n  }\n}\nfunction createTransactionConstructor(db) {\n  return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n    this.db = db;\n    this.mode = mode;\n    this.storeNames = storeNames;\n    this.schema = dbschema;\n    this.chromeTransactionDurability = chromeTransactionDurability;\n    this.idbtrans = null;\n    this.on = Events(this, \"complete\", \"error\", \"abort\");\n    this.parent = parent || null;\n    this.active = true;\n    this._reculock = 0;\n    this._blockedFuncs = [];\n    this._resolve = null;\n    this._reject = null;\n    this._waitingFor = null;\n    this._waitingQueue = null;\n    this._spinCount = 0;\n    this._completion = new DexiePromise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this._completion.then(() => {\n      this.active = false;\n      this.on.complete.fire();\n    }, e => {\n      var wasActive = this.active;\n      this.active = false;\n      this.on.error.fire(e);\n      this.parent ? this.parent._reject(e) : wasActive && this.idbtrans && this.idbtrans.abort();\n      return rejection(e);\n    });\n  });\n}\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n  return {\n    name,\n    keyPath,\n    unique,\n    multi,\n    auto,\n    compound,\n    src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n  };\n}\nfunction nameFromKeyPath(keyPath) {\n  return typeof keyPath === 'string' ? keyPath : keyPath ? '[' + [].join.call(keyPath, '+') + ']' : \"\";\n}\nfunction createTableSchema(name, primKey, indexes) {\n  return {\n    name,\n    primKey,\n    indexes,\n    mappedClass: null,\n    idxByName: arrayToObject(indexes, index => [index.name, index])\n  };\n}\nfunction safariMultiStoreFix(storeNames) {\n  return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = IdbKeyRange => {\n  try {\n    IdbKeyRange.only([[]]);\n    getMaxKey = () => [[]];\n    return [[]];\n  } catch (e) {\n    getMaxKey = () => maxString;\n    return maxString;\n  }\n};\nfunction getKeyExtractor(keyPath) {\n  if (keyPath == null) {\n    return () => undefined;\n  } else if (typeof keyPath === 'string') {\n    return getSinglePathKeyExtractor(keyPath);\n  } else {\n    return obj => getByKeyPath(obj, keyPath);\n  }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n  const split = keyPath.split('.');\n  if (split.length === 1) {\n    return obj => obj[keyPath];\n  } else {\n    return obj => getByKeyPath(obj, keyPath);\n  }\n}\nfunction arrayify(arrayLike) {\n  return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n  return keyPath == null ? \":id\" : typeof keyPath === 'string' ? keyPath : `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n  function extractSchema(db, trans) {\n    const tables = arrayify(db.objectStoreNames);\n    return {\n      schema: {\n        name: db.name,\n        tables: tables.map(table => trans.objectStore(table)).map(store => {\n          const {\n            keyPath,\n            autoIncrement\n          } = store;\n          const compound = isArray(keyPath);\n          const outbound = keyPath == null;\n          const indexByKeyPath = {};\n          const result = {\n            name: store.name,\n            primaryKey: {\n              name: null,\n              isPrimaryKey: true,\n              outbound,\n              compound,\n              keyPath,\n              autoIncrement,\n              unique: true,\n              extractKey: getKeyExtractor(keyPath)\n            },\n            indexes: arrayify(store.indexNames).map(indexName => store.index(indexName)).map(index => {\n              const {\n                name,\n                unique,\n                multiEntry,\n                keyPath\n              } = index;\n              const compound = isArray(keyPath);\n              const result = {\n                name,\n                compound,\n                keyPath,\n                unique,\n                multiEntry,\n                extractKey: getKeyExtractor(keyPath)\n              };\n              indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n              return result;\n            }),\n            getIndexByKeyPath: keyPath => indexByKeyPath[getKeyPathAlias(keyPath)]\n          };\n          indexByKeyPath[\":id\"] = result.primaryKey;\n          if (keyPath != null) {\n            indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n          }\n          return result;\n        })\n      },\n      hasGetAll: tables.length > 0 && 'getAll' in trans.objectStore(tables[0]) && !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) && !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) && [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n    };\n  }\n  function makeIDBKeyRange(range) {\n    if (range.type === 3) return null;\n    if (range.type === 4) throw new Error(\"Cannot convert never type to IDBKeyRange\");\n    const {\n      lower,\n      upper,\n      lowerOpen,\n      upperOpen\n    } = range;\n    const idbRange = lower === undefined ? upper === undefined ? null : IdbKeyRange.upperBound(upper, !!upperOpen) : upper === undefined ? IdbKeyRange.lowerBound(lower, !!lowerOpen) : IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n    return idbRange;\n  }\n  function createDbCoreTable(tableSchema) {\n    const tableName = tableSchema.name;\n    function mutate({\n      trans,\n      type,\n      keys,\n      values,\n      range\n    }) {\n      return new Promise((resolve, reject) => {\n        resolve = wrap(resolve);\n        const store = trans.objectStore(tableName);\n        const outbound = store.keyPath == null;\n        const isAddOrPut = type === \"put\" || type === \"add\";\n        if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange') throw new Error(\"Invalid operation type: \" + type);\n        const {\n          length\n        } = keys || values || {\n          length: 1\n        };\n        if (keys && values && keys.length !== values.length) {\n          throw new Error(\"Given keys array must have same length as given values array.\");\n        }\n        if (length === 0) return resolve({\n          numFailures: 0,\n          failures: {},\n          results: [],\n          lastResult: undefined\n        });\n        let req;\n        const reqs = [];\n        const failures = [];\n        let numFailures = 0;\n        const errorHandler = event => {\n          ++numFailures;\n          preventDefault(event);\n        };\n        if (type === 'deleteRange') {\n          if (range.type === 4) return resolve({\n            numFailures,\n            failures,\n            results: [],\n            lastResult: undefined\n          });\n          if (range.type === 3) reqs.push(req = store.clear());else reqs.push(req = store.delete(makeIDBKeyRange(range)));\n        } else {\n          const [args1, args2] = isAddOrPut ? outbound ? [values, keys] : [values, null] : [keys, null];\n          if (isAddOrPut) {\n            for (let i = 0; i < length; ++i) {\n              reqs.push(req = args2 && args2[i] !== undefined ? store[type](args1[i], args2[i]) : store[type](args1[i]));\n              req.onerror = errorHandler;\n            }\n          } else {\n            for (let i = 0; i < length; ++i) {\n              reqs.push(req = store[type](args1[i]));\n              req.onerror = errorHandler;\n            }\n          }\n        }\n        const done = event => {\n          const lastResult = event.target.result;\n          reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n          resolve({\n            numFailures,\n            failures,\n            results: type === \"delete\" ? keys : reqs.map(req => req.result),\n            lastResult\n          });\n        };\n        req.onerror = event => {\n          errorHandler(event);\n          done(event);\n        };\n        req.onsuccess = done;\n      });\n    }\n    function openCursor({\n      trans,\n      values,\n      query,\n      reverse,\n      unique\n    }) {\n      return new Promise((resolve, reject) => {\n        resolve = wrap(resolve);\n        const {\n          index,\n          range\n        } = query;\n        const store = trans.objectStore(tableName);\n        const source = index.isPrimaryKey ? store : store.index(index.name);\n        const direction = reverse ? unique ? \"prevunique\" : \"prev\" : unique ? \"nextunique\" : \"next\";\n        const req = values || !('openKeyCursor' in source) ? source.openCursor(makeIDBKeyRange(range), direction) : source.openKeyCursor(makeIDBKeyRange(range), direction);\n        req.onerror = eventRejectHandler(reject);\n        req.onsuccess = wrap(ev => {\n          const cursor = req.result;\n          if (!cursor) {\n            resolve(null);\n            return;\n          }\n          cursor.___id = ++_id_counter;\n          cursor.done = false;\n          const _cursorContinue = cursor.continue.bind(cursor);\n          let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n          if (_cursorContinuePrimaryKey) _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n          const _cursorAdvance = cursor.advance.bind(cursor);\n          const doThrowCursorIsNotStarted = () => {\n            throw new Error(\"Cursor not started\");\n          };\n          const doThrowCursorIsStopped = () => {\n            throw new Error(\"Cursor not stopped\");\n          };\n          cursor.trans = trans;\n          cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n          cursor.fail = wrap(reject);\n          cursor.next = function () {\n            let gotOne = 1;\n            return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n          };\n          cursor.start = callback => {\n            const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n              resolveIteration = wrap(resolveIteration);\n              req.onerror = eventRejectHandler(rejectIteration);\n              cursor.fail = rejectIteration;\n              cursor.stop = value => {\n                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                resolveIteration(value);\n              };\n            });\n            const guardedCallback = () => {\n              if (req.result) {\n                try {\n                  callback();\n                } catch (err) {\n                  cursor.fail(err);\n                }\n              } else {\n                cursor.done = true;\n                cursor.start = () => {\n                  throw new Error(\"Cursor behind last entry\");\n                };\n                cursor.stop();\n              }\n            };\n            req.onsuccess = wrap(ev => {\n              req.onsuccess = guardedCallback;\n              guardedCallback();\n            });\n            cursor.continue = _cursorContinue;\n            cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n            cursor.advance = _cursorAdvance;\n            guardedCallback();\n            return iterationPromise;\n          };\n          resolve(cursor);\n        }, reject);\n      });\n    }\n    function query(hasGetAll) {\n      return request => {\n        return new Promise((resolve, reject) => {\n          resolve = wrap(resolve);\n          const {\n            trans,\n            values,\n            limit,\n            query\n          } = request;\n          const nonInfinitLimit = limit === Infinity ? undefined : limit;\n          const {\n            index,\n            range\n          } = query;\n          const store = trans.objectStore(tableName);\n          const source = index.isPrimaryKey ? store : store.index(index.name);\n          const idbKeyRange = makeIDBKeyRange(range);\n          if (limit === 0) return resolve({\n            result: []\n          });\n          if (hasGetAll) {\n            const req = values ? source.getAll(idbKeyRange, nonInfinitLimit) : source.getAllKeys(idbKeyRange, nonInfinitLimit);\n            req.onsuccess = event => resolve({\n              result: event.target.result\n            });\n            req.onerror = eventRejectHandler(reject);\n          } else {\n            let count = 0;\n            const req = values || !('openKeyCursor' in source) ? source.openCursor(idbKeyRange) : source.openKeyCursor(idbKeyRange);\n            const result = [];\n            req.onsuccess = event => {\n              const cursor = req.result;\n              if (!cursor) return resolve({\n                result\n              });\n              result.push(values ? cursor.value : cursor.primaryKey);\n              if (++count === limit) return resolve({\n                result\n              });\n              cursor.continue();\n            };\n            req.onerror = eventRejectHandler(reject);\n          }\n        });\n      };\n    }\n    return {\n      name: tableName,\n      schema: tableSchema,\n      mutate,\n      getMany({\n        trans,\n        keys\n      }) {\n        return new Promise((resolve, reject) => {\n          resolve = wrap(resolve);\n          const store = trans.objectStore(tableName);\n          const length = keys.length;\n          const result = new Array(length);\n          let keyCount = 0;\n          let callbackCount = 0;\n          let req;\n          const successHandler = event => {\n            const req = event.target;\n            if ((result[req._pos] = req.result) != null) ;\n            if (++callbackCount === keyCount) resolve(result);\n          };\n          const errorHandler = eventRejectHandler(reject);\n          for (let i = 0; i < length; ++i) {\n            const key = keys[i];\n            if (key != null) {\n              req = store.get(keys[i]);\n              req._pos = i;\n              req.onsuccess = successHandler;\n              req.onerror = errorHandler;\n              ++keyCount;\n            }\n          }\n          if (keyCount === 0) resolve(result);\n        });\n      },\n      get({\n        trans,\n        key\n      }) {\n        return new Promise((resolve, reject) => {\n          resolve = wrap(resolve);\n          const store = trans.objectStore(tableName);\n          const req = store.get(key);\n          req.onsuccess = event => resolve(event.target.result);\n          req.onerror = eventRejectHandler(reject);\n        });\n      },\n      query: query(hasGetAll),\n      openCursor,\n      count({\n        query,\n        trans\n      }) {\n        const {\n          index,\n          range\n        } = query;\n        return new Promise((resolve, reject) => {\n          const store = trans.objectStore(tableName);\n          const source = index.isPrimaryKey ? store : store.index(index.name);\n          const idbKeyRange = makeIDBKeyRange(range);\n          const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n          req.onsuccess = wrap(ev => resolve(ev.target.result));\n          req.onerror = eventRejectHandler(reject);\n        });\n      }\n    };\n  }\n  const {\n    schema,\n    hasGetAll\n  } = extractSchema(db, tmpTrans);\n  const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n  const tableMap = {};\n  tables.forEach(table => tableMap[table.name] = table);\n  return {\n    stack: \"dbcore\",\n    transaction: db.transaction.bind(db),\n    table(name) {\n      const result = tableMap[name];\n      if (!result) throw new Error(`Table '${name}' not found`);\n      return tableMap[name];\n    },\n    MIN_KEY: -Infinity,\n    MAX_KEY: getMaxKey(IdbKeyRange),\n    schema\n  };\n}\nfunction createMiddlewareStack(stackImpl, middlewares) {\n  return middlewares.reduce((down, {\n    create\n  }) => ({\n    ...down,\n    ...create(down)\n  }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, {\n  IDBKeyRange,\n  indexedDB\n}, tmpTrans) {\n  const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n  return {\n    dbcore\n  };\n}\nfunction generateMiddlewareStacks({\n  _novip: db\n}, tmpTrans) {\n  const idbdb = tmpTrans.db;\n  const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n  db.core = stacks.dbcore;\n  db.tables.forEach(table => {\n    const tableName = table.name;\n    if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n      table.core = db.core.table(tableName);\n      if (db[tableName] instanceof db.Table) {\n        db[tableName].core = table.core;\n      }\n    }\n  });\n}\nfunction setApiOnPlace({\n  _novip: db\n}, objs, tableNames, dbschema) {\n  tableNames.forEach(tableName => {\n    const schema = dbschema[tableName];\n    objs.forEach(obj => {\n      const propDesc = getPropertyDescriptor(obj, tableName);\n      if (!propDesc || \"value\" in propDesc && propDesc.value === undefined) {\n        if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n          setProp(obj, tableName, {\n            get() {\n              return this.table(tableName);\n            },\n            set(value) {\n              defineProperty(this, tableName, {\n                value,\n                writable: true,\n                configurable: true,\n                enumerable: true\n              });\n            }\n          });\n        } else {\n          obj[tableName] = new db.Table(tableName, schema);\n        }\n      }\n    });\n  });\n}\nfunction removeTablesApi({\n  _novip: db\n}, objs) {\n  objs.forEach(obj => {\n    for (let key in obj) {\n      if (obj[key] instanceof db.Table) delete obj[key];\n    }\n  });\n}\nfunction lowerVersionFirst(a, b) {\n  return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n  const globalSchema = db._dbSchema;\n  const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n  trans.create(idbUpgradeTrans);\n  trans._completion.catch(reject);\n  const rejectTransaction = trans._reject.bind(trans);\n  const transless = PSD.transless || PSD;\n  newScope(() => {\n    PSD.trans = trans;\n    PSD.transless = transless;\n    if (oldVersion === 0) {\n      keys(globalSchema).forEach(tableName => {\n        createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n      });\n      generateMiddlewareStacks(db, idbUpgradeTrans);\n      DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n    } else updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n  });\n}\nfunction updateTablesAndIndexes({\n  _novip: db\n}, oldVersion, trans, idbUpgradeTrans) {\n  const queue = [];\n  const versions = db._versions;\n  let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n  let anyContentUpgraderHasRun = false;\n  const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n  versToRun.forEach(version => {\n    queue.push(() => {\n      const oldSchema = globalSchema;\n      const newSchema = version._cfg.dbschema;\n      adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n      adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n      globalSchema = db._dbSchema = newSchema;\n      const diff = getSchemaDiff(oldSchema, newSchema);\n      diff.add.forEach(tuple => {\n        createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n      });\n      diff.change.forEach(change => {\n        if (change.recreate) {\n          throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n        } else {\n          const store = idbUpgradeTrans.objectStore(change.name);\n          change.add.forEach(idx => addIndex(store, idx));\n          change.change.forEach(idx => {\n            store.deleteIndex(idx.name);\n            addIndex(store, idx);\n          });\n          change.del.forEach(idxName => store.deleteIndex(idxName));\n        }\n      });\n      const contentUpgrade = version._cfg.contentUpgrade;\n      if (contentUpgrade && version._cfg.version > oldVersion) {\n        generateMiddlewareStacks(db, idbUpgradeTrans);\n        trans._memoizedTables = {};\n        anyContentUpgraderHasRun = true;\n        let upgradeSchema = shallowClone(newSchema);\n        diff.del.forEach(table => {\n          upgradeSchema[table] = oldSchema[table];\n        });\n        removeTablesApi(db, [db.Transaction.prototype]);\n        setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n        trans.schema = upgradeSchema;\n        const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n        if (contentUpgradeIsAsync) {\n          incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n          returnValue = contentUpgrade(trans);\n          if (returnValue) {\n            if (contentUpgradeIsAsync) {\n              var decrementor = decrementExpectedAwaits.bind(null, null);\n              returnValue.then(decrementor, decrementor);\n            }\n          }\n        });\n        return returnValue && typeof returnValue.then === 'function' ? DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue);\n      }\n    });\n    queue.push(idbtrans => {\n      if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {\n        const newSchema = version._cfg.dbschema;\n        deleteRemovedTables(newSchema, idbtrans);\n      }\n      removeTablesApi(db, [db.Transaction.prototype]);\n      setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n      trans.schema = db._dbSchema;\n    });\n  });\n  function runQueue() {\n    return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) : DexiePromise.resolve();\n  }\n  return runQueue().then(() => {\n    createMissingTables(globalSchema, idbUpgradeTrans);\n  });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n  const diff = {\n    del: [],\n    add: [],\n    change: []\n  };\n  let table;\n  for (table in oldSchema) {\n    if (!newSchema[table]) diff.del.push(table);\n  }\n  for (table in newSchema) {\n    const oldDef = oldSchema[table],\n      newDef = newSchema[table];\n    if (!oldDef) {\n      diff.add.push([table, newDef]);\n    } else {\n      const change = {\n        name: table,\n        def: newDef,\n        recreate: false,\n        del: [],\n        add: [],\n        change: []\n      };\n      if ('' + (oldDef.primKey.keyPath || '') !== '' + (newDef.primKey.keyPath || '') || oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge) {\n        change.recreate = true;\n        diff.change.push(change);\n      } else {\n        const oldIndexes = oldDef.idxByName;\n        const newIndexes = newDef.idxByName;\n        let idxName;\n        for (idxName in oldIndexes) {\n          if (!newIndexes[idxName]) change.del.push(idxName);\n        }\n        for (idxName in newIndexes) {\n          const oldIdx = oldIndexes[idxName],\n            newIdx = newIndexes[idxName];\n          if (!oldIdx) change.add.push(newIdx);else if (oldIdx.src !== newIdx.src) change.change.push(newIdx);\n        }\n        if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n          diff.change.push(change);\n        }\n      }\n    }\n  }\n  return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n  const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ? {\n    keyPath: primKey.keyPath,\n    autoIncrement: primKey.auto\n  } : {\n    autoIncrement: primKey.auto\n  });\n  indexes.forEach(idx => addIndex(store, idx));\n  return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n  keys(newSchema).forEach(tableName => {\n    if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n      createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n    }\n  });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n  [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n  store.createIndex(idx.name, idx.keyPath, {\n    unique: idx.unique,\n    multiEntry: idx.multi\n  });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n  const globalSchema = {};\n  const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n  dbStoreNames.forEach(storeName => {\n    const store = tmpTrans.objectStore(storeName);\n    let keyPath = store.keyPath;\n    const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n    const indexes = [];\n    for (let j = 0; j < store.indexNames.length; ++j) {\n      const idbindex = store.index(store.indexNames[j]);\n      keyPath = idbindex.keyPath;\n      var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n      indexes.push(index);\n    }\n    globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n  });\n  return globalSchema;\n}\nfunction readGlobalSchema({\n  _novip: db\n}, idbdb, tmpTrans) {\n  db.verno = idbdb.version / 10;\n  const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n  db._storeNames = slice(idbdb.objectStoreNames, 0);\n  setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n  const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n  const diff = getSchemaDiff(installedSchema, db._dbSchema);\n  return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames({\n  _novip: db\n}, schema, idbtrans) {\n  const storeNames = idbtrans.db.objectStoreNames;\n  for (let i = 0; i < storeNames.length; ++i) {\n    const storeName = storeNames[i];\n    const store = idbtrans.objectStore(storeName);\n    db._hasGetAll = 'getAll' in store;\n    for (let j = 0; j < store.indexNames.length; ++j) {\n      const indexName = store.indexNames[j];\n      const keyPath = store.index(indexName).keyPath;\n      const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n      if (schema[storeName]) {\n        const indexSpec = schema[storeName].idxByName[dexieName];\n        if (indexSpec) {\n          indexSpec.name = indexName;\n          delete schema[storeName].idxByName[dexieName];\n          schema[storeName].idxByName[indexName] = indexSpec;\n        }\n      }\n    }\n  }\n  if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) && !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) && _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope && [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n    db._hasGetAll = false;\n  }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n  return primKeyAndIndexes.split(',').map((index, indexNum) => {\n    index = index.trim();\n    const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n    const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n    return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n  });\n}\nclass Version {\n  _parseStoresSpec(stores, outSchema) {\n    keys(stores).forEach(tableName => {\n      if (stores[tableName] !== null) {\n        var indexes = parseIndexSyntax(stores[tableName]);\n        var primKey = indexes.shift();\n        if (primKey.multi) throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n        indexes.forEach(idx => {\n          if (idx.auto) throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n          if (!idx.keyPath) throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n        });\n        outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n      }\n    });\n  }\n  stores(stores) {\n    const db = this.db;\n    this._cfg.storesSource = this._cfg.storesSource ? extend(this._cfg.storesSource, stores) : stores;\n    const versions = db._versions;\n    const storesSpec = {};\n    let dbschema = {};\n    versions.forEach(version => {\n      extend(storesSpec, version._cfg.storesSource);\n      dbschema = version._cfg.dbschema = {};\n      version._parseStoresSpec(storesSpec, dbschema);\n    });\n    db._dbSchema = dbschema;\n    removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n    setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n    db._storeNames = keys(dbschema);\n    return this;\n  }\n  upgrade(upgradeFunction) {\n    this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n    return this;\n  }\n}\nfunction createVersionConstructor(db) {\n  return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n    this.db = db;\n    this._cfg = {\n      version: versionNumber,\n      storesSource: null,\n      dbschema: {},\n      tables: {},\n      contentUpgrade: null\n    };\n  });\n}\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n  let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n  if (!dbNamesDB) {\n    dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n      addons: [],\n      indexedDB,\n      IDBKeyRange\n    });\n    dbNamesDB.version(1).stores({\n      dbnames: \"name\"\n    });\n  }\n  return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n  return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({\n  indexedDB,\n  IDBKeyRange\n}) {\n  return hasDatabasesNative(indexedDB) ? Promise.resolve(indexedDB.databases()).then(infos => infos.map(info => info.name).filter(name => name !== DBNAMES_DB)) : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({\n  indexedDB,\n  IDBKeyRange\n}, name) {\n  !hasDatabasesNative(indexedDB) && name !== DBNAMES_DB && getDbNamesTable(indexedDB, IDBKeyRange).put({\n    name\n  }).catch(nop);\n}\nfunction _onDatabaseDeleted({\n  indexedDB,\n  IDBKeyRange\n}, name) {\n  !hasDatabasesNative(indexedDB) && name !== DBNAMES_DB && getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\nfunction vip(fn) {\n  return newScope(function () {\n    PSD.letThrough = true;\n    return fn();\n  });\n}\nfunction idbReady() {\n  var isSafari = !navigator.userAgentData && /Safari\\//.test(navigator.userAgent) && !/Chrom(e|ium)\\//.test(navigator.userAgent);\n  if (!isSafari || !indexedDB.databases) return Promise.resolve();\n  var intervalId;\n  return new Promise(function (resolve) {\n    var tryIdb = function () {\n      return indexedDB.databases().finally(resolve);\n    };\n    intervalId = setInterval(tryIdb, 100);\n    tryIdb();\n  }).finally(function () {\n    return clearInterval(intervalId);\n  });\n}\nfunction dexieOpen(db) {\n  const state = db._state;\n  const {\n    indexedDB\n  } = db._deps;\n  if (state.isBeingOpened || db.idbdb) return state.dbReadyPromise.then(() => state.dbOpenError ? rejection(state.dbOpenError) : db);\n  debug && (state.openCanceller._stackHolder = getErrorWithStack());\n  state.isBeingOpened = true;\n  state.dbOpenError = null;\n  state.openComplete = false;\n  const openCanceller = state.openCanceller;\n  function throwIfCancelled() {\n    if (state.openCanceller !== openCanceller) throw new exceptions.DatabaseClosed('db.open() was cancelled');\n  }\n  let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null,\n    wasCreated = false;\n  return DexiePromise.race([openCanceller, (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(() => new DexiePromise((resolve, reject) => {\n    throwIfCancelled();\n    if (!indexedDB) throw new exceptions.MissingAPI();\n    const dbName = db.name;\n    const req = state.autoSchema ? indexedDB.open(dbName) : indexedDB.open(dbName, Math.round(db.verno * 10));\n    if (!req) throw new exceptions.MissingAPI();\n    req.onerror = eventRejectHandler(reject);\n    req.onblocked = wrap(db._fireOnBlocked);\n    req.onupgradeneeded = wrap(e => {\n      upgradeTransaction = req.transaction;\n      if (state.autoSchema && !db._options.allowEmptyDB) {\n        req.onerror = preventDefault;\n        upgradeTransaction.abort();\n        req.result.close();\n        const delreq = indexedDB.deleteDatabase(dbName);\n        delreq.onsuccess = delreq.onerror = wrap(() => {\n          reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n        });\n      } else {\n        upgradeTransaction.onerror = eventRejectHandler(reject);\n        var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n        wasCreated = oldVer < 1;\n        db._novip.idbdb = req.result;\n        runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n      }\n    }, reject);\n    req.onsuccess = wrap(() => {\n      upgradeTransaction = null;\n      const idbdb = db._novip.idbdb = req.result;\n      const objectStoreNames = slice(idbdb.objectStoreNames);\n      if (objectStoreNames.length > 0) try {\n        const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n        if (state.autoSchema) readGlobalSchema(db, idbdb, tmpTrans);else {\n          adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n          if (!verifyInstalledSchema(db, tmpTrans)) {\n            console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n          }\n        }\n        generateMiddlewareStacks(db, tmpTrans);\n      } catch (e) {}\n      connections.push(db);\n      idbdb.onversionchange = wrap(ev => {\n        state.vcFired = true;\n        db.on(\"versionchange\").fire(ev);\n      });\n      idbdb.onclose = wrap(ev => {\n        db.on(\"close\").fire(ev);\n      });\n      if (wasCreated) _onDatabaseCreated(db._deps, dbName);\n      resolve();\n    }, reject);\n  }))]).then(() => {\n    throwIfCancelled();\n    state.onReadyBeingFired = [];\n    return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n      if (state.onReadyBeingFired.length > 0) {\n        let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n      }\n    });\n  }).finally(() => {\n    state.onReadyBeingFired = null;\n    state.isBeingOpened = false;\n  }).then(() => {\n    return db;\n  }).catch(err => {\n    state.dbOpenError = err;\n    try {\n      upgradeTransaction && upgradeTransaction.abort();\n    } catch (_a) {}\n    if (openCanceller === state.openCanceller) {\n      db._close();\n    }\n    return rejection(err);\n  }).finally(() => {\n    state.openComplete = true;\n    resolveDbReady();\n  });\n}\nfunction awaitIterator(iterator) {\n  var callNext = result => iterator.next(result),\n    doThrow = error => iterator.throw(error),\n    onSuccess = step(callNext),\n    onError = step(doThrow);\n  function step(getNext) {\n    return val => {\n      var next = getNext(val),\n        value = next.value;\n      return next.done ? value : !value || typeof value.then !== 'function' ? isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) : value.then(onSuccess, onError);\n    };\n  }\n  return step(callNext)();\n}\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n  var i = arguments.length;\n  if (i < 2) throw new exceptions.InvalidArgument(\"Too few arguments\");\n  var args = new Array(i - 1);\n  while (--i) args[i - 1] = arguments[i];\n  scopeFunc = args.pop();\n  var tables = flatten(args);\n  return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n  return DexiePromise.resolve().then(() => {\n    const transless = PSD.transless || PSD;\n    const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n    const zoneProps = {\n      trans: trans,\n      transless: transless\n    };\n    if (parentTransaction) {\n      trans.idbtrans = parentTransaction.idbtrans;\n    } else {\n      try {\n        trans.create();\n        db._state.PR1398_maxLoop = 3;\n      } catch (ex) {\n        if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n          console.warn('Dexie: Need to reopen db');\n          db._close();\n          return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n        }\n        return rejection(ex);\n      }\n    }\n    const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n    if (scopeFuncIsAsync) {\n      incrementExpectedAwaits();\n    }\n    let returnValue;\n    const promiseFollowed = DexiePromise.follow(() => {\n      returnValue = scopeFunc.call(trans, trans);\n      if (returnValue) {\n        if (scopeFuncIsAsync) {\n          var decrementor = decrementExpectedAwaits.bind(null, null);\n          returnValue.then(decrementor, decrementor);\n        } else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n          returnValue = awaitIterator(returnValue);\n        }\n      }\n    }, zoneProps);\n    return (returnValue && typeof returnValue.then === 'function' ? DexiePromise.resolve(returnValue).then(x => trans.active ? x : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\"))) : promiseFollowed.then(() => returnValue)).then(x => {\n      if (parentTransaction) trans._resolve();\n      return trans._completion.then(() => x);\n    }).catch(e => {\n      trans._reject(e);\n      return rejection(e);\n    });\n  });\n}\nfunction pad(a, value, count) {\n  const result = isArray(a) ? a.slice() : [a];\n  for (let i = 0; i < count; ++i) result.push(value);\n  return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n  return {\n    ...down,\n    table(tableName) {\n      const table = down.table(tableName);\n      const {\n        schema\n      } = table;\n      const indexLookup = {};\n      const allVirtualIndexes = [];\n      function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n        const keyPathAlias = getKeyPathAlias(keyPath);\n        const indexList = indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || [];\n        const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n        const isVirtual = keyTail > 0;\n        const virtualIndex = {\n          ...lowLevelIndex,\n          isVirtual,\n          keyTail,\n          keyLength,\n          extractKey: getKeyExtractor(keyPath),\n          unique: !isVirtual && lowLevelIndex.unique\n        };\n        indexList.push(virtualIndex);\n        if (!virtualIndex.isPrimaryKey) {\n          allVirtualIndexes.push(virtualIndex);\n        }\n        if (keyLength > 1) {\n          const virtualKeyPath = keyLength === 2 ? keyPath[0] : keyPath.slice(0, keyLength - 1);\n          addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n        }\n        indexList.sort((a, b) => a.keyTail - b.keyTail);\n        return virtualIndex;\n      }\n      const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n      indexLookup[\":id\"] = [primaryKey];\n      for (const index of schema.indexes) {\n        addVirtualIndexes(index.keyPath, 0, index);\n      }\n      function findBestIndex(keyPath) {\n        const result = indexLookup[getKeyPathAlias(keyPath)];\n        return result && result[0];\n      }\n      function translateRange(range, keyTail) {\n        return {\n          type: range.type === 1 ? 2 : range.type,\n          lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n          lowerOpen: true,\n          upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n          upperOpen: true\n        };\n      }\n      function translateRequest(req) {\n        const index = req.query.index;\n        return index.isVirtual ? {\n          ...req,\n          query: {\n            index,\n            range: translateRange(req.query.range, index.keyTail)\n          }\n        } : req;\n      }\n      const result = {\n        ...table,\n        schema: {\n          ...schema,\n          primaryKey,\n          indexes: allVirtualIndexes,\n          getIndexByKeyPath: findBestIndex\n        },\n        count(req) {\n          return table.count(translateRequest(req));\n        },\n        query(req) {\n          return table.query(translateRequest(req));\n        },\n        openCursor(req) {\n          const {\n            keyTail,\n            isVirtual,\n            keyLength\n          } = req.query.index;\n          if (!isVirtual) return table.openCursor(req);\n          function createVirtualCursor(cursor) {\n            function _continue(key) {\n              key != null ? cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) : req.unique ? cursor.continue(cursor.key.slice(0, keyLength).concat(req.reverse ? down.MIN_KEY : down.MAX_KEY, keyTail)) : cursor.continue();\n            }\n            const virtualCursor = Object.create(cursor, {\n              continue: {\n                value: _continue\n              },\n              continuePrimaryKey: {\n                value(key, primaryKey) {\n                  cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                }\n              },\n              primaryKey: {\n                get() {\n                  return cursor.primaryKey;\n                }\n              },\n              key: {\n                get() {\n                  const key = cursor.key;\n                  return keyLength === 1 ? key[0] : key.slice(0, keyLength);\n                }\n              },\n              value: {\n                get() {\n                  return cursor.value;\n                }\n              }\n            });\n            return virtualCursor;\n          }\n          return table.openCursor(translateRequest(req)).then(cursor => cursor && createVirtualCursor(cursor));\n        }\n      };\n      return result;\n    }\n  };\n}\nconst virtualIndexMiddleware = {\n  stack: \"dbcore\",\n  name: \"VirtualIndexMiddleware\",\n  level: 1,\n  create: createVirtualIndexMiddleware\n};\nfunction getObjectDiff(a, b, rv, prfx) {\n  rv = rv || {};\n  prfx = prfx || '';\n  keys(a).forEach(prop => {\n    if (!hasOwn(b, prop)) {\n      rv[prfx + prop] = undefined;\n    } else {\n      var ap = a[prop],\n        bp = b[prop];\n      if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n        const apTypeName = toStringTag(ap);\n        const bpTypeName = toStringTag(bp);\n        if (apTypeName !== bpTypeName) {\n          rv[prfx + prop] = b[prop];\n        } else if (apTypeName === 'Object') {\n          getObjectDiff(ap, bp, rv, prfx + prop + '.');\n        } else if (ap !== bp) {\n          rv[prfx + prop] = b[prop];\n        }\n      } else if (ap !== bp) rv[prfx + prop] = b[prop];\n    }\n  });\n  keys(b).forEach(prop => {\n    if (!hasOwn(a, prop)) {\n      rv[prfx + prop] = b[prop];\n    }\n  });\n  return rv;\n}\nfunction getEffectiveKeys(primaryKey, req) {\n  if (req.type === 'delete') return req.keys;\n  return req.keys || req.values.map(primaryKey.extractKey);\n}\nconst hooksMiddleware = {\n  stack: \"dbcore\",\n  name: \"HooksMiddleware\",\n  level: 2,\n  create: downCore => ({\n    ...downCore,\n    table(tableName) {\n      const downTable = downCore.table(tableName);\n      const {\n        primaryKey\n      } = downTable.schema;\n      const tableMiddleware = {\n        ...downTable,\n        mutate(req) {\n          const dxTrans = PSD.trans;\n          const {\n            deleting,\n            creating,\n            updating\n          } = dxTrans.table(tableName).hook;\n          switch (req.type) {\n            case 'add':\n              if (creating.fire === nop) break;\n              return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n            case 'put':\n              if (creating.fire === nop && updating.fire === nop) break;\n              return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n            case 'delete':\n              if (deleting.fire === nop) break;\n              return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n            case 'deleteRange':\n              if (deleting.fire === nop) break;\n              return dxTrans._promise('readwrite', () => deleteRange(req), true);\n          }\n          return downTable.mutate(req);\n          function addPutOrDelete(req) {\n            const dxTrans = PSD.trans;\n            const keys = req.keys || getEffectiveKeys(primaryKey, req);\n            if (!keys) throw new Error(\"Keys missing\");\n            req = req.type === 'add' || req.type === 'put' ? {\n              ...req,\n              keys\n            } : {\n              ...req\n            };\n            if (req.type !== 'delete') req.values = [...req.values];\n            if (req.keys) req.keys = [...req.keys];\n            return getExistingValues(downTable, req, keys).then(existingValues => {\n              const contexts = keys.map((key, i) => {\n                const existingValue = existingValues[i];\n                const ctx = {\n                  onerror: null,\n                  onsuccess: null\n                };\n                if (req.type === 'delete') {\n                  deleting.fire.call(ctx, key, existingValue, dxTrans);\n                } else if (req.type === 'add' || existingValue === undefined) {\n                  const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                  if (key == null && generatedPrimaryKey != null) {\n                    key = generatedPrimaryKey;\n                    req.keys[i] = key;\n                    if (!primaryKey.outbound) {\n                      setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                    }\n                  }\n                } else {\n                  const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                  const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                  if (additionalChanges) {\n                    const requestedValue = req.values[i];\n                    Object.keys(additionalChanges).forEach(keyPath => {\n                      if (hasOwn(requestedValue, keyPath)) {\n                        requestedValue[keyPath] = additionalChanges[keyPath];\n                      } else {\n                        setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                      }\n                    });\n                  }\n                }\n                return ctx;\n              });\n              return downTable.mutate(req).then(({\n                failures,\n                results,\n                numFailures,\n                lastResult\n              }) => {\n                for (let i = 0; i < keys.length; ++i) {\n                  const primKey = results ? results[i] : keys[i];\n                  const ctx = contexts[i];\n                  if (primKey == null) {\n                    ctx.onerror && ctx.onerror(failures[i]);\n                  } else {\n                    ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ? req.values[i] : primKey);\n                  }\n                }\n                return {\n                  failures,\n                  results,\n                  numFailures,\n                  lastResult\n                };\n              }).catch(error => {\n                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                return Promise.reject(error);\n              });\n            });\n          }\n          function deleteRange(req) {\n            return deleteNextChunk(req.trans, req.range, 10000);\n          }\n          function deleteNextChunk(trans, range, limit) {\n            return downTable.query({\n              trans,\n              values: false,\n              query: {\n                index: primaryKey,\n                range\n              },\n              limit\n            }).then(({\n              result\n            }) => {\n              return addPutOrDelete({\n                type: 'delete',\n                keys: result,\n                trans\n              }).then(res => {\n                if (res.numFailures > 0) return Promise.reject(res.failures[0]);\n                if (result.length < limit) {\n                  return {\n                    failures: [],\n                    numFailures: 0,\n                    lastResult: undefined\n                  };\n                } else {\n                  return deleteNextChunk(trans, {\n                    ...range,\n                    lower: result[result.length - 1],\n                    lowerOpen: true\n                  }, limit);\n                }\n              });\n            });\n          }\n        }\n      };\n      return tableMiddleware;\n    }\n  })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n  return req.type === \"add\" ? Promise.resolve([]) : table.getMany({\n    trans: req.trans,\n    keys: effectiveKeys,\n    cache: \"immutable\"\n  });\n}\nfunction getFromTransactionCache(keys, cache, clone) {\n  try {\n    if (!cache) return null;\n    if (cache.keys.length < keys.length) return null;\n    const result = [];\n    for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n      if (cmp(cache.keys[i], keys[j]) !== 0) continue;\n      result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n      ++j;\n    }\n    return result.length === keys.length ? result : null;\n  } catch (_a) {\n    return null;\n  }\n}\nconst cacheExistingValuesMiddleware = {\n  stack: \"dbcore\",\n  level: -1,\n  create: core => {\n    return {\n      table: tableName => {\n        const table = core.table(tableName);\n        return {\n          ...table,\n          getMany: req => {\n            if (!req.cache) {\n              return table.getMany(req);\n            }\n            const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n            if (cachedResult) {\n              return DexiePromise.resolve(cachedResult);\n            }\n            return table.getMany(req).then(res => {\n              req.trans[\"_cache\"] = {\n                keys: req.keys,\n                values: req.cache === \"clone\" ? deepClone(res) : res\n              };\n              return res;\n            });\n          },\n          mutate: req => {\n            if (req.type !== \"add\") req.trans[\"_cache\"] = null;\n            return table.mutate(req);\n          }\n        };\n      }\n    };\n  }\n};\nfunction isEmptyRange(node) {\n  return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n  if (this) {\n    extend(this, arguments.length ? {\n      d: 1,\n      from: fromOrTree,\n      to: arguments.length > 1 ? to : fromOrTree\n    } : {\n      d: 0\n    });\n  } else {\n    const rv = new RangeSet();\n    if (fromOrTree && \"d\" in fromOrTree) {\n      extend(rv, fromOrTree);\n    }\n    return rv;\n  }\n};\nprops(RangeSet.prototype, {\n  add(rangeSet) {\n    mergeRanges(this, rangeSet);\n    return this;\n  },\n  addKey(key) {\n    addRange(this, key, key);\n    return this;\n  },\n  addKeys(keys) {\n    keys.forEach(key => addRange(this, key, key));\n    return this;\n  },\n  [iteratorSymbol]() {\n    return getRangeSetIterator(this);\n  }\n});\nfunction addRange(target, from, to) {\n  const diff = cmp(from, to);\n  if (isNaN(diff)) return;\n  if (diff > 0) throw RangeError();\n  if (isEmptyRange(target)) return extend(target, {\n    from,\n    to,\n    d: 1\n  });\n  const left = target.l;\n  const right = target.r;\n  if (cmp(to, target.from) < 0) {\n    left ? addRange(left, from, to) : target.l = {\n      from,\n      to,\n      d: 1,\n      l: null,\n      r: null\n    };\n    return rebalance(target);\n  }\n  if (cmp(from, target.to) > 0) {\n    right ? addRange(right, from, to) : target.r = {\n      from,\n      to,\n      d: 1,\n      l: null,\n      r: null\n    };\n    return rebalance(target);\n  }\n  if (cmp(from, target.from) < 0) {\n    target.from = from;\n    target.l = null;\n    target.d = right ? right.d + 1 : 1;\n  }\n  if (cmp(to, target.to) > 0) {\n    target.to = to;\n    target.r = null;\n    target.d = target.l ? target.l.d + 1 : 1;\n  }\n  const rightWasCutOff = !target.r;\n  if (left && !target.l) {\n    mergeRanges(target, left);\n  }\n  if (right && rightWasCutOff) {\n    mergeRanges(target, right);\n  }\n}\nfunction mergeRanges(target, newSet) {\n  function _addRangeSet(target, {\n    from,\n    to,\n    l,\n    r\n  }) {\n    addRange(target, from, to);\n    if (l) _addRangeSet(target, l);\n    if (r) _addRangeSet(target, r);\n  }\n  if (!isEmptyRange(newSet)) _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n  const i1 = getRangeSetIterator(rangeSet2);\n  let nextResult1 = i1.next();\n  if (nextResult1.done) return false;\n  let a = nextResult1.value;\n  const i2 = getRangeSetIterator(rangeSet1);\n  let nextResult2 = i2.next(a.from);\n  let b = nextResult2.value;\n  while (!nextResult1.done && !nextResult2.done) {\n    if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0) return true;\n    cmp(a.from, b.from) < 0 ? a = (nextResult1 = i1.next(b.from)).value : b = (nextResult2 = i2.next(a.from)).value;\n  }\n  return false;\n}\nfunction getRangeSetIterator(node) {\n  let state = isEmptyRange(node) ? null : {\n    s: 0,\n    n: node\n  };\n  return {\n    next(key) {\n      const keyProvided = arguments.length > 0;\n      while (state) {\n        switch (state.s) {\n          case 0:\n            state.s = 1;\n            if (keyProvided) {\n              while (state.n.l && cmp(key, state.n.from) < 0) state = {\n                up: state,\n                n: state.n.l,\n                s: 1\n              };\n            } else {\n              while (state.n.l) state = {\n                up: state,\n                n: state.n.l,\n                s: 1\n              };\n            }\n          case 1:\n            state.s = 2;\n            if (!keyProvided || cmp(key, state.n.to) <= 0) return {\n              value: state.n,\n              done: false\n            };\n          case 2:\n            if (state.n.r) {\n              state.s = 3;\n              state = {\n                up: state,\n                n: state.n.r,\n                s: 0\n              };\n              continue;\n            }\n          case 3:\n            state = state.up;\n        }\n      }\n      return {\n        done: true\n      };\n    }\n  };\n}\nfunction rebalance(target) {\n  var _a, _b;\n  const diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n  const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n  if (r) {\n    const l = r === \"r\" ? \"l\" : \"r\";\n    const rootClone = {\n      ...target\n    };\n    const oldRootRight = target[r];\n    target.from = oldRootRight.from;\n    target.to = oldRootRight.to;\n    target[r] = oldRootRight[r];\n    rootClone[r] = oldRootRight[l];\n    target[l] = rootClone;\n    rootClone.d = computeDepth(rootClone);\n  }\n  target.d = computeDepth(target);\n}\nfunction computeDepth({\n  r,\n  l\n}) {\n  return (r ? l ? Math.max(r.d, l.d) : r.d : l ? l.d : 0) + 1;\n}\nconst observabilityMiddleware = {\n  stack: \"dbcore\",\n  level: 0,\n  create: core => {\n    const dbName = core.schema.name;\n    const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n    return {\n      ...core,\n      table: tableName => {\n        const table = core.table(tableName);\n        const {\n          schema\n        } = table;\n        const {\n          primaryKey\n        } = schema;\n        const {\n          extractKey,\n          outbound\n        } = primaryKey;\n        const tableClone = {\n          ...table,\n          mutate: req => {\n            const trans = req.trans;\n            const mutatedParts = trans.mutatedParts || (trans.mutatedParts = {});\n            const getRangeSet = indexName => {\n              const part = `idb://${dbName}/${tableName}/${indexName}`;\n              return mutatedParts[part] || (mutatedParts[part] = new RangeSet());\n            };\n            const pkRangeSet = getRangeSet(\"\");\n            const delsRangeSet = getRangeSet(\":dels\");\n            const {\n              type\n            } = req;\n            let [keys, newObjs] = req.type === \"deleteRange\" ? [req.range] : req.type === \"delete\" ? [req.keys] : req.values.length < 50 ? [[], req.values] : [];\n            const oldCache = req.trans[\"_cache\"];\n            return table.mutate(req).then(res => {\n              if (isArray(keys)) {\n                if (type !== \"delete\") keys = res.results;\n                pkRangeSet.addKeys(keys);\n                const oldObjs = getFromTransactionCache(keys, oldCache);\n                if (!oldObjs && type !== \"add\") {\n                  delsRangeSet.addKeys(keys);\n                }\n                if (oldObjs || newObjs) {\n                  trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                }\n              } else if (keys) {\n                const range = {\n                  from: keys.lower,\n                  to: keys.upper\n                };\n                delsRangeSet.add(range);\n                pkRangeSet.add(range);\n              } else {\n                pkRangeSet.add(FULL_RANGE);\n                delsRangeSet.add(FULL_RANGE);\n                schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n              }\n              return res;\n            });\n          }\n        };\n        const getRange = ({\n          query: {\n            index,\n            range\n          }\n        }) => {\n          var _a, _b;\n          return [index, new RangeSet((_a = range.lower) !== null && _a !== void 0 ? _a : core.MIN_KEY, (_b = range.upper) !== null && _b !== void 0 ? _b : core.MAX_KEY)];\n        };\n        const readSubscribers = {\n          get: req => [primaryKey, new RangeSet(req.key)],\n          getMany: req => [primaryKey, new RangeSet().addKeys(req.keys)],\n          count: getRange,\n          query: getRange,\n          openCursor: getRange\n        };\n        keys(readSubscribers).forEach(method => {\n          tableClone[method] = function (req) {\n            const {\n              subscr\n            } = PSD;\n            if (subscr) {\n              const getRangeSet = indexName => {\n                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                return subscr[part] || (subscr[part] = new RangeSet());\n              };\n              const pkRangeSet = getRangeSet(\"\");\n              const delsRangeSet = getRangeSet(\":dels\");\n              const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n              getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n              if (!queriedIndex.isPrimaryKey) {\n                if (method === \"count\") {\n                  delsRangeSet.add(FULL_RANGE);\n                } else {\n                  const keysPromise = method === \"query\" && outbound && req.values && table.query({\n                    ...req,\n                    values: false\n                  });\n                  return table[method].apply(this, arguments).then(res => {\n                    if (method === \"query\") {\n                      if (outbound && req.values) {\n                        return keysPromise.then(({\n                          result: resultingKeys\n                        }) => {\n                          pkRangeSet.addKeys(resultingKeys);\n                          return res;\n                        });\n                      }\n                      const pKeys = req.values ? res.result.map(extractKey) : res.result;\n                      if (req.values) {\n                        pkRangeSet.addKeys(pKeys);\n                      } else {\n                        delsRangeSet.addKeys(pKeys);\n                      }\n                    } else if (method === \"openCursor\") {\n                      const cursor = res;\n                      const wantValues = req.values;\n                      return cursor && Object.create(cursor, {\n                        key: {\n                          get() {\n                            delsRangeSet.addKey(cursor.primaryKey);\n                            return cursor.key;\n                          }\n                        },\n                        primaryKey: {\n                          get() {\n                            const pkey = cursor.primaryKey;\n                            delsRangeSet.addKey(pkey);\n                            return pkey;\n                          }\n                        },\n                        value: {\n                          get() {\n                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                            return cursor.value;\n                          }\n                        }\n                      });\n                    }\n                    return res;\n                  });\n                }\n              }\n            }\n            return table[method].apply(this, arguments);\n          };\n        });\n        return tableClone;\n      }\n    };\n  }\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n  function addAffectedIndex(ix) {\n    const rangeSet = getRangeSet(ix.name || \"\");\n    function extractKey(obj) {\n      return obj != null ? ix.extractKey(obj) : null;\n    }\n    const addKeyOrKeys = key => ix.multiEntry && isArray(key) ? key.forEach(key => rangeSet.addKey(key)) : rangeSet.addKey(key);\n    (oldObjs || newObjs).forEach((_, i) => {\n      const oldKey = oldObjs && extractKey(oldObjs[i]);\n      const newKey = newObjs && extractKey(newObjs[i]);\n      if (cmp(oldKey, newKey) !== 0) {\n        if (oldKey != null) addKeyOrKeys(oldKey);\n        if (newKey != null) addKeyOrKeys(newKey);\n      }\n    });\n  }\n  schema.indexes.forEach(addAffectedIndex);\n}\nclass Dexie$1 {\n  constructor(name, options) {\n    this._middlewares = {};\n    this.verno = 0;\n    const deps = Dexie$1.dependencies;\n    this._options = options = {\n      addons: Dexie$1.addons,\n      autoOpen: true,\n      indexedDB: deps.indexedDB,\n      IDBKeyRange: deps.IDBKeyRange,\n      ...options\n    };\n    this._deps = {\n      indexedDB: options.indexedDB,\n      IDBKeyRange: options.IDBKeyRange\n    };\n    const {\n      addons\n    } = options;\n    this._dbSchema = {};\n    this._versions = [];\n    this._storeNames = [];\n    this._allTables = {};\n    this.idbdb = null;\n    this._novip = this;\n    const state = {\n      dbOpenError: null,\n      isBeingOpened: false,\n      onReadyBeingFired: null,\n      openComplete: false,\n      dbReadyResolve: nop,\n      dbReadyPromise: null,\n      cancelOpen: nop,\n      openCanceller: null,\n      autoSchema: true,\n      PR1398_maxLoop: 3\n    };\n    state.dbReadyPromise = new DexiePromise(resolve => {\n      state.dbReadyResolve = resolve;\n    });\n    state.openCanceller = new DexiePromise((_, reject) => {\n      state.cancelOpen = reject;\n    });\n    this._state = state;\n    this.name = name;\n    this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", {\n      ready: [promisableChain, nop]\n    });\n    this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n      return (subscriber, bSticky) => {\n        Dexie$1.vip(() => {\n          const state = this._state;\n          if (state.openComplete) {\n            if (!state.dbOpenError) DexiePromise.resolve().then(subscriber);\n            if (bSticky) subscribe(subscriber);\n          } else if (state.onReadyBeingFired) {\n            state.onReadyBeingFired.push(subscriber);\n            if (bSticky) subscribe(subscriber);\n          } else {\n            subscribe(subscriber);\n            const db = this;\n            if (!bSticky) subscribe(function unsubscribe() {\n              db.on.ready.unsubscribe(subscriber);\n              db.on.ready.unsubscribe(unsubscribe);\n            });\n          }\n        });\n      };\n    });\n    this.Collection = createCollectionConstructor(this);\n    this.Table = createTableConstructor(this);\n    this.Transaction = createTransactionConstructor(this);\n    this.Version = createVersionConstructor(this);\n    this.WhereClause = createWhereClauseConstructor(this);\n    this.on(\"versionchange\", ev => {\n      if (ev.newVersion > 0) console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);else console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n      this.close();\n    });\n    this.on(\"blocked\", ev => {\n      if (!ev.newVersion || ev.newVersion < ev.oldVersion) console.warn(`Dexie.delete('${this.name}') was blocked`);else console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n    });\n    this._maxKey = getMaxKey(options.IDBKeyRange);\n    this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n    this._fireOnBlocked = ev => {\n      this.on(\"blocked\").fire(ev);\n      connections.filter(c => c.name === this.name && c !== this && !c._state.vcFired).map(c => c.on(\"versionchange\").fire(ev));\n    };\n    this.use(virtualIndexMiddleware);\n    this.use(hooksMiddleware);\n    this.use(observabilityMiddleware);\n    this.use(cacheExistingValuesMiddleware);\n    this.vip = Object.create(this, {\n      _vip: {\n        value: true\n      }\n    });\n    addons.forEach(addon => addon(this));\n  }\n  version(versionNumber) {\n    if (isNaN(versionNumber) || versionNumber < 0.1) throw new exceptions.Type(`Given version is not a positive number`);\n    versionNumber = Math.round(versionNumber * 10) / 10;\n    if (this.idbdb || this._state.isBeingOpened) throw new exceptions.Schema(\"Cannot add version when database is open\");\n    this.verno = Math.max(this.verno, versionNumber);\n    const versions = this._versions;\n    var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n    if (versionInstance) return versionInstance;\n    versionInstance = new this.Version(versionNumber);\n    versions.push(versionInstance);\n    versions.sort(lowerVersionFirst);\n    versionInstance.stores({});\n    this._state.autoSchema = false;\n    return versionInstance;\n  }\n  _whenReady(fn) {\n    return this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip) ? fn() : new DexiePromise((resolve, reject) => {\n      if (this._state.openComplete) {\n        return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n      }\n      if (!this._state.isBeingOpened) {\n        if (!this._options.autoOpen) {\n          reject(new exceptions.DatabaseClosed());\n          return;\n        }\n        this.open().catch(nop);\n      }\n      this._state.dbReadyPromise.then(resolve, reject);\n    }).then(fn);\n  }\n  use({\n    stack,\n    create,\n    level,\n    name\n  }) {\n    if (name) this.unuse({\n      stack,\n      name\n    });\n    const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n    middlewares.push({\n      stack,\n      create,\n      level: level == null ? 10 : level,\n      name\n    });\n    middlewares.sort((a, b) => a.level - b.level);\n    return this;\n  }\n  unuse({\n    stack,\n    name,\n    create\n  }) {\n    if (stack && this._middlewares[stack]) {\n      this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create : name ? mw.name !== name : false);\n    }\n    return this;\n  }\n  open() {\n    return dexieOpen(this);\n  }\n  _close() {\n    const state = this._state;\n    const idx = connections.indexOf(this);\n    if (idx >= 0) connections.splice(idx, 1);\n    if (this.idbdb) {\n      try {\n        this.idbdb.close();\n      } catch (e) {}\n      this._novip.idbdb = null;\n    }\n    state.dbReadyPromise = new DexiePromise(resolve => {\n      state.dbReadyResolve = resolve;\n    });\n    state.openCanceller = new DexiePromise((_, reject) => {\n      state.cancelOpen = reject;\n    });\n  }\n  close() {\n    this._close();\n    const state = this._state;\n    this._options.autoOpen = false;\n    state.dbOpenError = new exceptions.DatabaseClosed();\n    if (state.isBeingOpened) state.cancelOpen(state.dbOpenError);\n  }\n  delete() {\n    const hasArguments = arguments.length > 0;\n    const state = this._state;\n    return new DexiePromise((resolve, reject) => {\n      const doDelete = () => {\n        this.close();\n        var req = this._deps.indexedDB.deleteDatabase(this.name);\n        req.onsuccess = wrap(() => {\n          _onDatabaseDeleted(this._deps, this.name);\n          resolve();\n        });\n        req.onerror = eventRejectHandler(reject);\n        req.onblocked = this._fireOnBlocked;\n      };\n      if (hasArguments) throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n      if (state.isBeingOpened) {\n        state.dbReadyPromise.then(doDelete);\n      } else {\n        doDelete();\n      }\n    });\n  }\n  backendDB() {\n    return this.idbdb;\n  }\n  isOpen() {\n    return this.idbdb !== null;\n  }\n  hasBeenClosed() {\n    const dbOpenError = this._state.dbOpenError;\n    return dbOpenError && dbOpenError.name === 'DatabaseClosed';\n  }\n  hasFailed() {\n    return this._state.dbOpenError !== null;\n  }\n  dynamicallyOpened() {\n    return this._state.autoSchema;\n  }\n  get tables() {\n    return keys(this._allTables).map(name => this._allTables[name]);\n  }\n  transaction() {\n    const args = extractTransactionArgs.apply(this, arguments);\n    return this._transaction.apply(this, args);\n  }\n  _transaction(mode, tables, scopeFunc) {\n    let parentTransaction = PSD.trans;\n    if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1) parentTransaction = null;\n    const onlyIfCompatible = mode.indexOf('?') !== -1;\n    mode = mode.replace('!', '').replace('?', '');\n    let idbMode, storeNames;\n    try {\n      storeNames = tables.map(table => {\n        var storeName = table instanceof this.Table ? table.name : table;\n        if (typeof storeName !== 'string') throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n        return storeName;\n      });\n      if (mode == \"r\" || mode === READONLY) idbMode = READONLY;else if (mode == \"rw\" || mode == READWRITE) idbMode = READWRITE;else throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n      if (parentTransaction) {\n        if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n          if (onlyIfCompatible) {\n            parentTransaction = null;\n          } else throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n        }\n        if (parentTransaction) {\n          storeNames.forEach(storeName => {\n            if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n              if (onlyIfCompatible) {\n                parentTransaction = null;\n              } else throw new exceptions.SubTransaction(\"Table \" + storeName + \" not included in parent transaction.\");\n            }\n          });\n        }\n        if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n          parentTransaction = null;\n        }\n      }\n    } catch (e) {\n      return parentTransaction ? parentTransaction._promise(null, (_, reject) => {\n        reject(e);\n      }) : rejection(e);\n    }\n    const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n    return parentTransaction ? parentTransaction._promise(idbMode, enterTransaction, \"lock\") : PSD.trans ? usePSD(PSD.transless, () => this._whenReady(enterTransaction)) : this._whenReady(enterTransaction);\n  }\n  table(tableName) {\n    if (!hasOwn(this._allTables, tableName)) {\n      throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n    }\n    return this._allTables[tableName];\n  }\n}\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol ? Symbol.observable : \"@@observable\";\nclass Observable {\n  constructor(subscribe) {\n    this._subscribe = subscribe;\n  }\n  subscribe(x, error, complete) {\n    return this._subscribe(!x || typeof x === \"function\" ? {\n      next: x,\n      error,\n      complete\n    } : x);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n}\nfunction extendObservabilitySet(target, newSet) {\n  keys(newSet).forEach(part => {\n    const rangeSet = target[part] || (target[part] = new RangeSet());\n    mergeRanges(rangeSet, newSet[part]);\n  });\n  return target;\n}\nfunction liveQuery(querier) {\n  return new Observable(observer => {\n    const scopeFuncIsAsync = isAsyncFunction(querier);\n    function execute(subscr) {\n      if (scopeFuncIsAsync) {\n        incrementExpectedAwaits();\n      }\n      const exec = () => newScope(querier, {\n        subscr,\n        trans: null\n      });\n      const rv = PSD.trans ? usePSD(PSD.transless, exec) : exec();\n      if (scopeFuncIsAsync) {\n        rv.then(decrementExpectedAwaits, decrementExpectedAwaits);\n      }\n      return rv;\n    }\n    let closed = false;\n    let accumMuts = {};\n    let currentObs = {};\n    const subscription = {\n      get closed() {\n        return closed;\n      },\n      unsubscribe: () => {\n        closed = true;\n        globalEvents.storagemutated.unsubscribe(mutationListener);\n      }\n    };\n    observer.start && observer.start(subscription);\n    let querying = false,\n      startedListening = false;\n    function shouldNotify() {\n      return keys(currentObs).some(key => accumMuts[key] && rangesOverlap(accumMuts[key], currentObs[key]));\n    }\n    const mutationListener = parts => {\n      extendObservabilitySet(accumMuts, parts);\n      if (shouldNotify()) {\n        doQuery();\n      }\n    };\n    const doQuery = () => {\n      if (querying || closed) {\n        return;\n      }\n      accumMuts = {};\n      const subscr = {};\n      const ret = execute(subscr);\n      if (!startedListening) {\n        globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n        startedListening = true;\n      }\n      querying = true;\n      Promise.resolve(ret).then(result => {\n        querying = false;\n        if (closed) {\n          return;\n        }\n        if (shouldNotify()) {\n          doQuery();\n        } else {\n          accumMuts = {};\n          currentObs = subscr;\n          observer.next && observer.next(result);\n        }\n      }, err => {\n        if (!['DatabaseClosedError', 'AbortError'].includes(err === null || err === void 0 ? void 0 : err.name)) {\n          querying = false;\n          observer.error && observer.error(err);\n          subscription.unsubscribe();\n        }\n      });\n    };\n    doQuery();\n    return subscription;\n  });\n}\nlet domDeps;\ntry {\n  domDeps = {\n    indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n    IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n  };\n} catch (e) {\n  domDeps = {\n    indexedDB: null,\n    IDBKeyRange: null\n  };\n}\nconst Dexie = Dexie$1;\nprops(Dexie, {\n  ...fullNameExceptions,\n  delete(databaseName) {\n    const db = new Dexie(databaseName, {\n      addons: []\n    });\n    return db.delete();\n  },\n  exists(name) {\n    return new Dexie(name, {\n      addons: []\n    }).open().then(db => {\n      db.close();\n      return true;\n    }).catch('NoSuchDatabaseError', () => false);\n  },\n  getDatabaseNames(cb) {\n    try {\n      return getDatabaseNames(Dexie.dependencies).then(cb);\n    } catch (_a) {\n      return rejection(new exceptions.MissingAPI());\n    }\n  },\n  defineClass() {\n    function Class(content) {\n      extend(this, content);\n    }\n    return Class;\n  },\n  ignoreTransaction(scopeFunc) {\n    return PSD.trans ? usePSD(PSD.transless, scopeFunc) : scopeFunc();\n  },\n  vip,\n  async: function (generatorFn) {\n    return function () {\n      try {\n        var rv = awaitIterator(generatorFn.apply(this, arguments));\n        if (!rv || typeof rv.then !== 'function') return DexiePromise.resolve(rv);\n        return rv;\n      } catch (e) {\n        return rejection(e);\n      }\n    };\n  },\n  spawn: function (generatorFn, args, thiz) {\n    try {\n      var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n      if (!rv || typeof rv.then !== 'function') return DexiePromise.resolve(rv);\n      return rv;\n    } catch (e) {\n      return rejection(e);\n    }\n  },\n  currentTransaction: {\n    get: () => PSD.trans || null\n  },\n  waitFor: function (promiseOrFunction, optionalTimeout) {\n    const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ? Dexie.ignoreTransaction(promiseOrFunction) : promiseOrFunction).timeout(optionalTimeout || 60000);\n    return PSD.trans ? PSD.trans.waitFor(promise) : promise;\n  },\n  Promise: DexiePromise,\n  debug: {\n    get: () => debug,\n    set: value => {\n      setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n    }\n  },\n  derive: derive,\n  extend: extend,\n  props: props,\n  override: override,\n  Events: Events,\n  on: globalEvents,\n  liveQuery,\n  extendObservabilitySet,\n  getByKeyPath: getByKeyPath,\n  setByKeyPath: setByKeyPath,\n  delByKeyPath: delByKeyPath,\n  shallowClone: shallowClone,\n  deepClone: deepClone,\n  getObjectDiff: getObjectDiff,\n  cmp,\n  asap: asap$1,\n  minKey: minKey,\n  addons: [],\n  connections: connections,\n  errnames: errnames,\n  dependencies: domDeps,\n  semVer: DEXIE_VERSION,\n  version: DEXIE_VERSION.split('.').map(n => parseInt(n)).reduce((p, c, i) => p + c / Math.pow(10, i * 2))\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n  globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n    if (!propagatingLocally) {\n      let event;\n      if (isIEOrEdge) {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, true, true, updatedParts);\n      } else {\n        event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n          detail: updatedParts\n        });\n      }\n      propagatingLocally = true;\n      dispatchEvent(event);\n      propagatingLocally = false;\n    }\n  });\n  addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({\n    detail\n  }) => {\n    if (!propagatingLocally) {\n      propagateLocally(detail);\n    }\n  });\n}\nfunction propagateLocally(updateParts) {\n  let wasMe = propagatingLocally;\n  try {\n    propagatingLocally = true;\n    globalEvents.storagemutated.fire(updateParts);\n  } finally {\n    propagatingLocally = wasMe;\n  }\n}\nlet propagatingLocally = false;\nif (typeof BroadcastChannel !== 'undefined') {\n  const bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n  if (typeof bc.unref === 'function') {\n    bc.unref();\n  }\n  globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, changedParts => {\n    if (!propagatingLocally) {\n      bc.postMessage(changedParts);\n    }\n  });\n  bc.onmessage = ev => {\n    if (ev.data) propagateLocally(ev.data);\n  };\n} else if (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n  globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, changedParts => {\n    try {\n      if (!propagatingLocally) {\n        if (typeof localStorage !== 'undefined') {\n          localStorage.setItem(STORAGE_MUTATED_DOM_EVENT_NAME, JSON.stringify({\n            trig: Math.random(),\n            changedParts\n          }));\n        }\n        if (typeof self['clients'] === 'object') {\n          [...self['clients'].matchAll({\n            includeUncontrolled: true\n          })].forEach(client => client.postMessage({\n            type: STORAGE_MUTATED_DOM_EVENT_NAME,\n            changedParts\n          }));\n        }\n      }\n    } catch (_a) {}\n  });\n  if (typeof addEventListener !== 'undefined') {\n    addEventListener('storage', ev => {\n      if (ev.key === STORAGE_MUTATED_DOM_EVENT_NAME) {\n        const data = JSON.parse(ev.newValue);\n        if (data) propagateLocally(data.changedParts);\n      }\n    });\n  }\n  const swContainer = self.document && navigator.serviceWorker;\n  if (swContainer) {\n    swContainer.addEventListener('message', propagateMessageLocally);\n  }\n}\nfunction propagateMessageLocally({\n  data\n}) {\n  if (data && data.type === STORAGE_MUTATED_DOM_EVENT_NAME) {\n    propagateLocally(data.changedParts);\n  }\n}\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug, dexieStackFrameFilter);\nexport { Dexie$1 as Dexie, Entity, RangeSet, cmp, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap };","map":{"version":3,"names":["_global","globalThis","self","window","global","keys","Object","isArray","Array","Promise","extend","obj","extension","forEach","key","getProto","getPrototypeOf","_hasOwn","hasOwnProperty","hasOwn","prop","call","props","proto","Reflect","ownKeys","setProp","defineProperty","functionOrGetSet","options","get","set","configurable","value","writable","derive","Child","from","Parent","prototype","create","bind","getOwnPropertyDescriptor","getPropertyDescriptor","pd","_slice","slice","args","start","end","override","origFunc","overridedFactory","assert","b","Error","asap$1","fn","setImmediate","setTimeout","arrayToObject","array","extractor","reduce","result","item","i","nameAndValue","tryCatch","onerror","apply","ex","getByKeyPath","keyPath","rv","l","length","val","push","period","indexOf","innerObj","substr","undefined","setByKeyPath","isFrozen","currentKeyPath","remainingKeyPath","isNaN","parseInt","splice","delByKeyPath","map","kp","shallowClone","m","concat","flatten","a","intrinsicTypeNames","split","num","t","filter","intrinsicTypes","x","circularRefs","deepClone","any","WeakMap","innerDeepClone","constructor","toString","toStringTag","o","iteratorSymbol","Symbol","iterator","getIteratorOf","NO_CHAR_ARRAY","getArrayOf","arrayLike","it","arguments","next","done","isAsyncFunction","debug","location","test","href","setDebug","libraryFilter","NEEDS_THROW_FOR_STACK","stack","getErrorWithStack","e","prettyStack","exception","numIgnoredFrames","name","message","frame","join","dexieErrorNames","idbDomErrorNames","errorList","defaultTexts","VersionChanged","DatabaseClosed","Abort","TransactionInactive","MissingAPI","DexieError","msg","_e","_stack","getMultiErrorMessage","failures","v","s","ModifyError","successCount","failedKeys","BulkError","pos","failuresByPos","errnames","BaseException","exceptions","fullName","msgOrInner","inner","Syntax","SyntaxError","Type","TypeError","Range","RangeError","exceptionMap","mapError","domError","fullNameExceptions","nop","mirror","pureFunctionChain","f1","f2","callBoth","on1","on2","hookCreatingChain","res","onsuccess","res2","hookDeletingChain","hookUpdatingChain","modifications","reverseStoppableEventChain","promisableChain","then","thiz","INTERNAL","LONG_STACKS_CLIP_LIMIT","MAX_LONG_STACKS","ZONE_ECHO_LIMIT","resolvedNativePromise","nativePromiseProto","resolvedGlobalPromise","globalP","resolve","crypto","subtle","nativeP","digest","Uint8Array","nativePromiseThen","NativePromise","patchGlobalPromise","stack_being_generated","schedulePhysicalTick","physicalTick","MutationObserver","hiddenDiv","document","createElement","observe","attributes","setAttribute","asap","callback","microtickQueue","needsNewPhysicalTick","isOutsideMicroTick","unhandledErrors","rejectingErrors","currentFulfiller","rejectionMapper","globalPSD","id","ref","unhandleds","onunhandled","globalError","pgp","env","finalize","uh","PSD","numScheduledCalls","tickFinalizers","DexiePromise","_listeners","onuncatched","_lib","psd","_PSD","_stackHolder","_prev","_numPrev","_state","_value","handleRejection","executePromiseTask","thenProp","microTaskId","totalEchoes","onFulfilled","onRejected","possibleAwait","cleanup","decrementExpectedAwaits","reject","propagateToListener","Listener","nativeAwaitCompatibleWrap","linkToPreviousPromise","_then","catch","type","handler","err","PromiseReject","finally","onFinally","stacks","getStack","timeout","ms","Infinity","handle","Timeout","clearTimeout","snapShot","zone","all","values","onPossibleParallellAsync","remaining","race","newPSD","newScope","usePSD","scheduler","follow","zoneProps","run_at_end_of_this_or_next_physical_tick","allSettled","possiblePromises","results","p","status","reason","AggregateError","failure","promise","shouldExecuteTick","beginMicroTickScope","propagateAllListeners","endMicroTickScope","_promise","origProp","addPossiblyUnhandledError","listeners","len","finalizePhysicalTick","listener","cb","callListener","ret","markErrorAsHandled","limit","errorName","prev","numPrev","wasRootExec","callbacks","unhandledErrs","finalizers","finalizer","some","wrap","errorCatcher","outerScope","switchToZone","task","awaits","echoes","taskCounter","zoneStack","zoneEchoes","zone_id_counter","a1","a2","parent","globalEnv","PromiseProp","nthen","getPatchedPromiseThen","gthen","incrementExpectedAwaits","possiblePromise","rejection","zoneEnterEcho","targetZone","zoneLeaveEcho","pop","bEnteringZone","currentZone","enqueueNativeMicroTask","GlobalPromise","targetEnv","a3","job","outerZone","origThen","onResolved","UNHANDLEDREJECTION","event","eventData","createEvent","initEvent","CustomEvent","detail","dispatchEvent","PromiseRejectionEvent","onunhandledrejection","_","defaultPrevented","console","warn","tempTransaction","db","mode","storeNames","idbdb","openComplete","letThrough","_vip","dbOpenError","isBeingOpened","_options","autoOpen","open","dbReadyPromise","trans","_createTransaction","_dbSchema","PR1398_maxLoop","InvalidState","isOpen","_close","_completion","DEXIE_VERSION","maxString","String","fromCharCode","minKey","INVALID_KEY_ARGUMENT","STRING_EXPECTED","connections","isIEOrEdge","navigator","userAgent","hasIEDeleteObjectStoreBug","hangsOnDeleteLargeKeyRange","dexieStackFrameFilter","DBNAMES_DB","READONLY","READWRITE","combine","filter1","filter2","AnyRange","lower","lowerOpen","upper","upperOpen","workaroundForUndefinedPrimKey","Entity","Table","_trans","writeLocked","_tx","tableName","checkTableInTransaction","schema","NotFound","idbtrans","transless","keyOrCrit","where","first","core","hook","reading","fire","indexOrCrit","WhereClause","keyPaths","equals","compoundIndex","indexes","primKey","ix","compound","every","_maxKey","JSON","stringify","idxByName","idb","_deps","indexedDB","cmp","idx","filterFunction","prevIndex","prevFilterFn","index","multi","toCollection","and","count","thenShortcut","offset","numRows","each","toArray","Collection","orderBy","reverse","mapToClass","mappedClass","table","inheritedProps","Set","getOwnPropertyNames","propName","add","readHook","has","unsubscribe","defineClass","Class","content","auto","objToAdd","mutate","numFailures","lastResult","update","keyOrObject","InvalidArgument","_a","modify","put","delete","clear","range","bulkGet","getMany","bulkAdd","objects","keysOrOptions","wantResults","allKeys","numObjects","objectsToAdd","bulkPut","objectsToPut","bulkDelete","numKeys","Events","ctx","evs","eventName","subscriber","subscribe","addEventType","chainFunction","defaultFunction","addConfiguredEvents","context","subscribers","cfg","fireEvent","makeClassConstructor","createTableConstructor","tableSchema","_allTables","isPlainKeyRange","ignoreLimitFilter","algorithm","or","justLimit","replayFilter","addFilter","addReplayFilter","factory","isLimitFilter","curr","addMatchFilter","isMatch","getIndexOrStore","coreSchema","isPrimKey","primaryKey","getIndexByKeyPath","Schema","openCursor","coreTable","keysOnly","dir","unique","query","iter","coreTrans","iterate","valueMapper","union","cursor","advance","stop","fail","_iterate","cursorPromise","mappedFn","c","wrappedFn","continue","advancer","ta","tb","NaN","compareUint8Arrays","getUint8Array","compareArrays","al","bl","ArrayBuffer","isView","tsTag","buffer","byteOffset","byteLength","_read","_ctx","error","_write","_addAlgorithm","clone","raw","Math","min","sortBy","parts","lastPart","lastIndex","getval","order","sorter","aVal","bVal","sort","offsetLeft","rowsLeft","until","bIncludeStopEntry","last","indexName","_ondirectionchange","desc","eachKey","eachUniqueKey","eachPrimaryKey","primaryKeys","uniqueKeys","firstKey","lastKey","distinct","strKey","found","changes","modifyer","anythingModified","outbound","extractKey","modifyChunkSize","totalFailures","applyMutateResult","expectedCount","nextChunk","cache","addValues","putValues","putKeys","deleteKeys","origValue","criteria","deleteCallback","changeSpec","coreRange","createCollectionConstructor","whereClause","keyRangeGenerator","keyRange","whereCtx","readingHook","simpleCompare","simpleCompareReverse","collectionOrWhereClause","T","collection","emptyCollection","rangeEqual","upperFactory","toUpperCase","toLowerCase","lowerFactory","nextCasing","lowerKey","upperNeedle","lowerNeedle","llp","lwrKeyChar","addIgnoreCaseAlgorithm","match","needles","suffix","compare","upperNeedles","lowerNeedles","direction","nextKeySuffix","needlesLen","initDirection","needleBounds","needle","nb","createRange","firstPossibleNeedle","lowestPossibleCasing","casing","between","includeLower","includeUpper","_cmp","above","aboveOrEqual","below","belowOrEqual","startsWith","str","startsWithIgnoreCase","equalsIgnoreCase","anyOfIgnoreCase","startsWithAnyOfIgnoreCase","n","anyOf","_ascending","_descending","notEqual","inAnyRange","includeLowers","includeUppers","noneOf","ranges","ascending","descending","_min","max","_max","addRange","newRange","sortDirection","rangeSorter","rangePos","keyIsBeyondCurrentEntry","keyIsBeforeCurrentEntry","keyWithinCurrentRange","checkKey","startsWithAnyOf","createWhereClauseConstructor","orCollection","_IDBKeyRange","IDBKeyRange","eventRejectHandler","preventDefault","target","stopPropagation","DEXIE_STORAGE_MUTATED_EVENT_NAME","STORAGE_MUTATED_DOM_EVENT_NAME","globalEvents","Transaction","_lock","_reculock","lockOwnerFor","_unlock","_blockedFuncs","_locked","fnAndPSD","shift","OpenFailed","active","transaction","durability","chromeTransactionDurability","ev","_reject","onabort","on","oncomplete","_resolve","storagemutated","bWriteLock","ReadOnly","_root","waitFor","promiseLike","root","_waitingFor","_waitingQueue","store","objectStore","spin","_spinCount","currentWaitPromise","abort","memoizedTables","_memoizedTables","transactionBoundTable","createTransactionConstructor","dbschema","complete","wasActive","createIndexSpec","src","nameFromKeyPath","createTableSchema","safariMultiStoreFix","getMaxKey","IdbKeyRange","only","getKeyExtractor","getSinglePathKeyExtractor","arrayify","_id_counter","getKeyPathAlias","createDBCore","tmpTrans","extractSchema","tables","objectStoreNames","autoIncrement","indexByKeyPath","isPrimaryKey","indexNames","multiEntry","hasGetAll","makeIDBKeyRange","idbRange","upperBound","lowerBound","bound","createDbCoreTable","isAddOrPut","req","reqs","errorHandler","args1","args2","source","openKeyCursor","___id","_cursorContinue","_cursorContinuePrimaryKey","continuePrimaryKey","_cursorAdvance","doThrowCursorIsNotStarted","doThrowCursorIsStopped","gotOne","iterationPromise","resolveIteration","rejectIteration","guardedCallback","request","nonInfinitLimit","idbKeyRange","getAll","getAllKeys","keyCount","callbackCount","successHandler","_pos","tableMap","MIN_KEY","MAX_KEY","createMiddlewareStack","stackImpl","middlewares","down","createMiddlewareStacks","dbcore","generateMiddlewareStacks","_novip","_middlewares","tbl","setApiOnPlace","objs","tableNames","propDesc","enumerable","removeTablesApi","lowerVersionFirst","_cfg","version","runUpgraders","oldVersion","idbUpgradeTrans","globalSchema","_storeNames","rejectTransaction","createTable","populate","updateTablesAndIndexes","queue","versions","_versions","buildGlobalSchema","anyContentUpgraderHasRun","versToRun","oldSchema","newSchema","adjustToExistingIndexNames","diff","getSchemaDiff","tuple","change","recreate","Upgrade","addIndex","deleteIndex","del","idxName","contentUpgrade","upgradeSchema","contentUpgradeIsAsync","returnValue","promiseFollowed","decrementor","deleteRemovedTables","runQueue","createMissingTables","oldDef","newDef","def","oldIndexes","newIndexes","oldIdx","newIdx","createObjectStore","contains","storeName","deleteObjectStore","createIndex","dbStoreNames","j","idbindex","readGlobalSchema","verno","verifyInstalledSchema","installedSchema","ch","_hasGetAll","dexieName","indexSpec","WorkerGlobalScope","parseIndexSyntax","primKeyAndIndexes","indexNum","trim","replace","Version","_parseStoresSpec","stores","outSchema","storesSource","storesSpec","upgrade","upgradeFunction","createVersionConstructor","versionNumber","getDbNamesTable","dbNamesDB","Dexie$1","addons","dbnames","hasDatabasesNative","databases","getDatabaseNames","infos","info","_onDatabaseCreated","_onDatabaseDeleted","vip","idbReady","isSafari","userAgentData","intervalId","tryIdb","setInterval","clearInterval","dexieOpen","state","openCanceller","throwIfCancelled","resolveDbReady","dbReadyResolve","upgradeTransaction","wasCreated","dbName","autoSchema","round","onblocked","_fireOnBlocked","onupgradeneeded","allowEmptyDB","close","delreq","deleteDatabase","NoSuchDatabase","oldVer","pow","onversionchange","vcFired","onclose","onReadyBeingFired","ready","fireRemainders","remainders","awaitIterator","callNext","doThrow","throw","onSuccess","step","onError","getNext","extractTransactionArgs","_tableArgs_","scopeFunc","enterTransactionScope","parentTransaction","scopeFuncIsAsync","PrematureCommit","pad","createVirtualIndexMiddleware","indexLookup","allVirtualIndexes","addVirtualIndexes","keyTail","lowLevelIndex","keyPathAlias","indexList","keyLength","isVirtual","virtualIndex","virtualKeyPath","findBestIndex","translateRange","translateRequest","createVirtualCursor","_continue","virtualCursor","virtualIndexMiddleware","level","getObjectDiff","prfx","ap","bp","apTypeName","bpTypeName","getEffectiveKeys","hooksMiddleware","downCore","downTable","tableMiddleware","dxTrans","deleting","creating","updating","addPutOrDelete","deleteRange","getExistingValues","existingValues","contexts","existingValue","generatedPrimaryKey","objectDiff","additionalChanges","requestedValue","deleteNextChunk","effectiveKeys","getFromTransactionCache","cacheExistingValuesMiddleware","cachedResult","isEmptyRange","node","RangeSet","fromOrTree","to","d","rangeSet","mergeRanges","addKey","addKeys","getRangeSetIterator","left","right","r","rebalance","rightWasCutOff","newSet","_addRangeSet","rangesOverlap","rangeSet1","rangeSet2","i1","nextResult1","i2","nextResult2","keyProvided","up","_b","rootClone","oldRootRight","computeDepth","observabilityMiddleware","FULL_RANGE","tableClone","mutatedParts","getRangeSet","part","pkRangeSet","delsRangeSet","newObjs","oldCache","oldObjs","trackAffectedIndexes","getRange","readSubscribers","method","subscr","queriedIndex","queriedRanges","keysPromise","resultingKeys","pKeys","wantValues","pkey","addAffectedIndex","addKeyOrKeys","oldKey","newKey","deps","dependencies","cancelOpen","bSticky","newVersion","use","addon","versionInstance","_whenReady","unuse","mw","hasArguments","doDelete","backendDB","hasBeenClosed","hasFailed","dynamicallyOpened","_transaction","onlyIfCompatible","idbMode","SubTransaction","enterTransaction","InvalidTable","symbolObservable","observable","Observable","_subscribe","extendObservabilitySet","liveQuery","querier","observer","execute","exec","closed","accumMuts","currentObs","subscription","mutationListener","querying","startedListening","shouldNotify","doQuery","includes","domDeps","mozIndexedDB","webkitIndexedDB","msIndexedDB","webkitIDBKeyRange","Dexie","databaseName","exists","ignoreTransaction","async","generatorFn","spawn","currentTransaction","promiseOrFunction","optionalTimeout","semVer","maxKey","addEventListener","updatedParts","propagatingLocally","initCustomEvent","propagateLocally","updateParts","wasMe","BroadcastChannel","bc","unref","changedParts","postMessage","onmessage","data","localStorage","setItem","trig","random","matchAll","includeUncontrolled","client","parse","newValue","swContainer","serviceWorker","propagateMessageLocally","default"],"sources":["/Users/caleblinden/Documents/GitHub/mmf-poc/mmf-poc/node_modules/dexie/dist/modern/dexie.mjs"],"sourcesContent":["/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 4.0.0-alpha.4, Tue May 31 2022\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction tryCatch(fn, onerror, args) {\n    try {\n        fn.apply(null, args);\n    }\n    catch (ex) {\n        onerror && onerror(ex);\n    }\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = intrinsicTypeNames.map(t => _global[t]);\narrayToObject(intrinsicTypeNames, x => [x, true]);\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = typeof WeakMap !== 'undefined' && new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(any) {\n    if (!any || typeof any !== 'object')\n        return any;\n    let rv = circularRefs && circularRefs.get(any);\n    if (rv)\n        return rv;\n    if (isArray(any)) {\n        rv = [];\n        circularRefs && circularRefs.set(any, rv);\n        for (var i = 0, l = any.length; i < l; ++i) {\n            rv.push(innerDeepClone(any[i]));\n        }\n    }\n    else if (intrinsicTypes.indexOf(any.constructor) >= 0) {\n        rv = any;\n    }\n    else {\n        const proto = getProto(any);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs && circularRefs.set(any, rv);\n        for (var prop in any) {\n            if (hasOwn(any, prop)) {\n                rv[prop] = innerDeepClone(any[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n    libraryFilter = filter;\n}\nvar libraryFilter = () => true;\nconst NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\nfunction getErrorWithStack() {\n    if (NEEDS_THROW_FOR_STACK)\n        try {\n            getErrorWithStack.arguments;\n            throw new Error();\n        }\n        catch (e) {\n            return e;\n        }\n    return new Error();\n}\nfunction prettyStack(exception, numIgnoredFrames) {\n    var stack = exception.stack;\n    if (!stack)\n        return \"\";\n    numIgnoredFrames = (numIgnoredFrames || 0);\n    if (stack.indexOf(exception.name) === 0)\n        numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n    return stack.split('\\n')\n        .slice(numIgnoredFrames)\n        .filter(libraryFilter)\n        .map(frame => \"\\n\" + frame)\n        .join('');\n}\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this._e = getErrorWithStack();\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    stack: {\n        get: function () {\n            return this._stack ||\n                (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n        }\n    },\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this._e = getErrorWithStack();\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this._e = getErrorWithStack();\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this._e = getErrorWithStack();\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar INTERNAL = {};\nconst LONG_STACKS_CLIP_LIMIT = 100,\nMAX_LONG_STACKS = 20, ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nvar stack_being_generated = false;\nvar schedulePhysicalTick = resolvedGlobalPromise ?\n    () => { resolvedGlobalPromise.then(physicalTick); }\n    :\n        _global.setImmediate ?\n            setImmediate.bind(null, physicalTick) :\n            _global.MutationObserver ?\n                () => {\n                    var hiddenDiv = document.createElement(\"div\");\n                    (new MutationObserver(() => {\n                        physicalTick();\n                        hiddenDiv = null;\n                    })).observe(hiddenDiv, { attributes: true });\n                    hiddenDiv.setAttribute('i', '1');\n                } :\n                () => { setTimeout(physicalTick, 0); };\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\ncurrentFulfiller = null, rejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: globalError,\n    pgp: false,\n    env: {},\n    finalize: function () {\n        this.unhandleds.forEach(uh => {\n            try {\n                globalError(uh[0], uh[1]);\n            }\n            catch (e) { }\n        });\n    }\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this.onuncatched = nop;\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (debug) {\n        this._stackHolder = getErrorWithStack();\n        this._prev = null;\n        this._numPrev = 0;\n    }\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            debug && linkToPreviousPromise(rv, this);\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            onFinally();\n            return value;\n        }, err => {\n            onFinally();\n            return PromiseReject(err);\n        });\n    },\n    stack: {\n        get: function () {\n            if (this._stack)\n                return this._stack;\n            try {\n                stack_being_generated = true;\n                var stacks = getStack(this, [], MAX_LONG_STACKS);\n                var stack = stacks.join(\"\\nFrom previous: \");\n                if (this._state !== null)\n                    this._stack = stack;\n                return stack;\n            }\n            finally {\n                stack_being_generated = false;\n            }\n        }\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        linkToPreviousPromise(rv, currentFulfiller);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(() => {\n        var origProp = getPropertyDescriptor(reason, \"stack\");\n        reason._promise = promise;\n        setProp(reason, \"stack\", {\n            get: () => stack_being_generated ?\n                origProp && (origProp.get ?\n                    origProp.get.apply(reason) :\n                    origProp.value) :\n                promise.stack\n        });\n    });\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        currentFulfiller = promise;\n        var ret, value = promise._value;\n        if (promise._state) {\n            ret = cb(value);\n        }\n        else {\n            if (rejectingErrors.length)\n                rejectingErrors = [];\n            ret = cb(value);\n            if (rejectingErrors.indexOf(value) === -1)\n                markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        currentFulfiller = null;\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction getStack(promise, stacks, limit) {\n    if (stacks.length === limit)\n        return stacks;\n    var stack = \"\";\n    if (promise._state === false) {\n        var failure = promise._value, errorName, message;\n        if (failure != null) {\n            errorName = failure.name || \"Error\";\n            message = failure.message || failure;\n            stack = prettyStack(failure, 0);\n        }\n        else {\n            errorName = failure;\n            message = \"\";\n        }\n        stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n    }\n    if (debug) {\n        stack = prettyStack(promise._stackHolder, 2);\n        if (stack && stacks.indexOf(stack) === -1)\n            stacks.push(stack);\n        if (promise._prev)\n            getStack(promise._prev, stacks, limit);\n    }\n    return stacks;\n}\nfunction linkToPreviousPromise(promise, prev) {\n    var numPrev = prev ? prev._numPrev + 1 : 0;\n    if (numPrev < LONG_STACKS_CLIP_LIMIT) {\n        promise._prev = prev;\n        promise._numPrev = numPrev;\n    }\n}\nfunction physicalTick() {\n    beginMicroTickScope() && endMicroTickScope();\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),\n        gthen: getPatchedPromiseThen(globalEnv.gthen, psd)\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        nativePromiseProto.then = targetEnv.nthen;\n        GlobalPromise.prototype.then = targetEnv.gthen;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n        nthen: nativePromiseProto.then,\n        gthen: GlobalPromise.prototype.then\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction enqueueNativeMicroTask(job) {\n    nativePromiseThen.call(resolvedNativePromise, job);\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                enqueueNativeMicroTask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction getPatchedPromiseThen(origThen, zone) {\n    return function (onResolved, onRejected) {\n        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone), nativeAwaitCompatibleWrap(onRejected, zone));\n    };\n}\nconst UNHANDLEDREJECTION = \"unhandledrejection\";\nfunction globalError(err, promise) {\n    var rv;\n    try {\n        rv = promise.onuncatched(err);\n    }\n    catch (e) { }\n    if (rv !== false)\n        try {\n            var event, eventData = { promise: promise, reason: err };\n            if (_global.document && document.createEvent) {\n                event = document.createEvent('Event');\n                event.initEvent(UNHANDLEDREJECTION, true, true);\n                extend(event, eventData);\n            }\n            else if (_global.CustomEvent) {\n                event = new CustomEvent(UNHANDLEDREJECTION, { detail: eventData });\n                extend(event, eventData);\n            }\n            if (event && _global.dispatchEvent) {\n                dispatchEvent(event);\n                if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)\n                    try {\n                        _global.onunhandledrejection(event);\n                    }\n                    catch (_) { }\n            }\n            if (debug && event && !event.defaultPrevented) {\n                console.warn(`Unhandled rejection: ${err.stack || err}`);\n            }\n        }\n        catch (e) { }\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._options.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db._close();\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            return trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '4.0.0-alpha.4';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nconst hasIEDeleteObjectStoreBug = isIEOrEdge;\nconst hangsOnDeleteLargeKeyRange = isIEOrEdge;\nconst dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nfunction Entity() {\n    throw exceptions.Type();\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            return trans && trans.db === this.db ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => ix.compound &&\n            keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0) &&\n            ix.keyPath.every(keyPath => keyPaths.indexOf(keyPath) >= 0))[0];\n        if (compoundIndex && this.db._maxKey !== maxString)\n            return this\n                .where(compoundIndex.name)\n                .equals(compoundIndex.keyPath.map(kp => indexOrCrit[kp]));\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        const idb = this.db._deps.indexedDB;\n        function equals(a, b) {\n            try {\n                return idb.cmp(a, b) === 0;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        const { db, name: tableName } = this;\n        this.schema.mappedClass = constructor;\n        if (constructor.prototype instanceof Entity) {\n            constructor = class extends constructor {\n                get db() { return db; }\n                table() { return tableName; }\n            };\n        }\n        const inheritedProps = new Set();\n        for (let proto = constructor.prototype; proto; proto = getProto(proto)) {\n            Object.getOwnPropertyNames(proto).forEach(propName => inheritedProps.add(propName));\n        }\n        const readHook = (obj) => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (let m in obj)\n                if (!inheritedProps.has(m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            try {\n                if (typeof modifications !== \"function\") {\n                    keys(modifications).forEach(keyPath => {\n                        setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n                    });\n                }\n                else {\n                    modifications(keyOrObject, { value: keyOrObject, primKey: key });\n                }\n            }\n            catch (_a) {\n            }\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch (_a) { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return aVal < bVal ? -order : aVal > bVal ? order : 0;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    var anythingModified = false;\n                    for (var i = 0; i < numKeys; ++i) {\n                        var keyPath = keyPaths[i], val = changes[keyPath];\n                        if (getByKeyPath(item, keyPath) !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            const limit = this.db._options.modifyChunkSize || 200;\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        const criteria = isPlainKeyRange(ctx) &&\n                            ctx.limit === Infinity &&\n                            (typeof changes !== 'function' || changes === deleteCallback) && {\n                            index: ctx.index,\n                            range: ctx.range\n                        };\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        const indexedDB = db._deps.indexedDB;\n        if (!indexedDB)\n            throw new exceptions.MissingAPI();\n        this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);\n        this._descending = (a, b) => indexedDB.cmp(b, a);\n        this._max = (a, b) => indexedDB.cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => indexedDB.cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks({ _novip: db }, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace({ _novip: db }, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi({ _novip: db }, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else\n            updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n    });\n}\nfunction updateTablesAndIndexes({ _novip: db }, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    let anyContentUpgraderHasRun = false;\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                anyContentUpgraderHasRun = true;\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {\n                const newSchema = version._cfg.dbschema;\n                deleteRemovedTables(newSchema, idbtrans);\n            }\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge))\n             {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema({ _novip: db }, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames({ _novip: db }, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    debug && (state.openCanceller._stackHolder = getErrorWithStack());\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    return DexiePromise.race([openCanceller, (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(() => new DexiePromise((resolve, reject) => {\n            throwIfCancelled();\n            if (!indexedDB)\n                throw new exceptions.MissingAPI();\n            const dbName = db.name;\n            const req = state.autoSchema ?\n                indexedDB.open(dbName) :\n                indexedDB.open(dbName, Math.round(db.verno * 10));\n            if (!req)\n                throw new exceptions.MissingAPI();\n            req.onerror = eventRejectHandler(reject);\n            req.onblocked = wrap(db._fireOnBlocked);\n            req.onupgradeneeded = wrap(e => {\n                upgradeTransaction = req.transaction;\n                if (state.autoSchema && !db._options.allowEmptyDB) {\n                    req.onerror = preventDefault;\n                    upgradeTransaction.abort();\n                    req.result.close();\n                    const delreq = indexedDB.deleteDatabase(dbName);\n                    delreq.onsuccess = delreq.onerror = wrap(() => {\n                        reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                    });\n                }\n                else {\n                    upgradeTransaction.onerror = eventRejectHandler(reject);\n                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                    wasCreated = oldVer < 1;\n                    db._novip.idbdb = req.result;\n                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n                }\n            }, reject);\n            req.onsuccess = wrap(() => {\n                upgradeTransaction = null;\n                const idbdb = db._novip.idbdb = req.result;\n                const objectStoreNames = slice(idbdb.objectStoreNames);\n                if (objectStoreNames.length > 0)\n                    try {\n                        const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                        if (state.autoSchema)\n                            readGlobalSchema(db, idbdb, tmpTrans);\n                        else {\n                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                            if (!verifyInstalledSchema(db, tmpTrans)) {\n                                console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n                            }\n                        }\n                        generateMiddlewareStacks(db, tmpTrans);\n                    }\n                    catch (e) {\n                    }\n                connections.push(db);\n                idbdb.onversionchange = wrap(ev => {\n                    state.vcFired = true;\n                    db.on(\"versionchange\").fire(ev);\n                });\n                idbdb.onclose = wrap(ev => {\n                    db.on(\"close\").fire(ev);\n                });\n                if (wasCreated)\n                    _onDatabaseCreated(db._deps, dbName);\n                resolve();\n            }, reject);\n        }))]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        state.onReadyBeingFired = null;\n        state.isBeingOpened = false;\n    }).then(() => {\n        return db;\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch (_a) { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db._close();\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    var _a, _b;\n    const diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = trans.mutatedParts || (trans.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [[], req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        return table.mutate(req).then((res) => {\n                            if (isArray(keys)) {\n                                if (type !== \"delete\")\n                                    keys = res.results;\n                                pkRangeSet.addKeys(keys);\n                                const oldObjs = getFromTransactionCache(keys, oldCache);\n                                if (!oldObjs && type !== \"add\") {\n                                    delsRangeSet.addKeys(keys);\n                                }\n                                if (oldObjs || newObjs) {\n                                    trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                                }\n                            }\n                            else if (keys) {\n                                const range = { from: keys.lower, to: keys.upper };\n                                delsRangeSet.add(range);\n                                pkRangeSet.add(range);\n                            }\n                            else {\n                                pkRangeSet.add(FULL_RANGE);\n                                delsRangeSet.add(FULL_RANGE);\n                                schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                            }\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => {\n                    var _a, _b;\n                    return [\n                        index,\n                        new RangeSet((_a = range.lower) !== null && _a !== void 0 ? _a : core.MIN_KEY, (_b = range.upper) !== null && _b !== void 0 ? _b : core.MAX_KEY),\n                    ];\n                };\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach(method => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        if (subscr) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (subscr[part] ||\n                                    (subscr[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close();\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(cacheExistingValuesMiddleware);\n        this.vip = Object.create(this, { _vip: { value: true } });\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._options.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return dexieOpen(this);\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this._novip.idbdb = null;\n        }\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n    }\n    close() {\n        this._close();\n        const state = this._state;\n        this._options.autoOpen = false;\n        state.dbOpenError = new exceptions.DatabaseClosed();\n        if (state.isBeingOpened)\n            state.cancelOpen(state.dbOpenError);\n    }\n    delete() {\n        const hasArguments = arguments.length > 0;\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close();\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasArguments)\n                throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        const rangeSet = target[part] || (target[part] = new RangeSet());\n        mergeRanges(rangeSet, newSet[part]);\n    });\n    return target;\n}\n\nfunction liveQuery(querier) {\n    return new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(subscr) {\n            if (scopeFuncIsAsync) {\n                incrementExpectedAwaits();\n            }\n            const exec = () => newScope(querier, { subscr, trans: null });\n            const rv = PSD.trans\n                ?\n                    usePSD(PSD.transless, exec)\n                : exec();\n            if (scopeFuncIsAsync) {\n                rv.then(decrementExpectedAwaits, decrementExpectedAwaits);\n            }\n            return rv;\n        }\n        let closed = false;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                closed = true;\n                globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let querying = false, startedListening = false;\n        function shouldNotify() {\n            return keys(currentObs).some((key) => accumMuts[key] && rangesOverlap(accumMuts[key], currentObs[key]));\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const doQuery = () => {\n            if (querying || closed) {\n                return;\n            }\n            accumMuts = {};\n            const subscr = {};\n            const ret = execute(subscr);\n            if (!startedListening) {\n                globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                startedListening = true;\n            }\n            querying = true;\n            Promise.resolve(ret).then((result) => {\n                querying = false;\n                if (closed) {\n                    return;\n                }\n                if (shouldNotify()) {\n                    doQuery();\n                }\n                else {\n                    accumMuts = {};\n                    currentObs = subscr;\n                    observer.next && observer.next(result);\n                }\n            }, (err) => {\n                if (!['DatabaseClosedError', 'AbortError'].includes(err === null || err === void 0 ? void 0 : err.name)) {\n                    querying = false;\n                    observer.error && observer.error(err);\n                    subscription.unsubscribe();\n                }\n            });\n        };\n        doQuery();\n        return subscription;\n    });\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch (_a) {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            if (isIEOrEdge) {\n                event = document.createEvent('CustomEvent');\n                event.initCustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, true, true, updatedParts);\n            }\n            else {\n                event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                    detail: updatedParts\n                });\n            }\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nif (typeof BroadcastChannel !== 'undefined') {\n    const bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n    if (typeof bc.unref === 'function') {\n        bc.unref();\n    }\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n    bc.onmessage = (ev) => {\n        if (ev.data)\n            propagateLocally(ev.data);\n    };\n}\nelse if (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        try {\n            if (!propagatingLocally) {\n                if (typeof localStorage !== 'undefined') {\n                    localStorage.setItem(STORAGE_MUTATED_DOM_EVENT_NAME, JSON.stringify({\n                        trig: Math.random(),\n                        changedParts,\n                    }));\n                }\n                if (typeof self['clients'] === 'object') {\n                    [...self['clients'].matchAll({ includeUncontrolled: true })].forEach((client) => client.postMessage({\n                        type: STORAGE_MUTATED_DOM_EVENT_NAME,\n                        changedParts,\n                    }));\n                }\n            }\n        }\n        catch (_a) { }\n    });\n    if (typeof addEventListener !== 'undefined') {\n        addEventListener('storage', (ev) => {\n            if (ev.key === STORAGE_MUTATED_DOM_EVENT_NAME) {\n                const data = JSON.parse(ev.newValue);\n                if (data)\n                    propagateLocally(data.changedParts);\n            }\n        });\n    }\n    const swContainer = self.document && navigator.serviceWorker;\n    if (swContainer) {\n        swContainer.addEventListener('message', propagateMessageLocally);\n    }\n}\nfunction propagateMessageLocally({ data }) {\n    if (data && data.type === STORAGE_MUTATED_DOM_EVENT_NAME) {\n        propagateLocally(data.changedParts);\n    }\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug, dexieStackFrameFilter);\n\nexport { Dexie$1 as Dexie, Entity, RangeSet, cmp, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}